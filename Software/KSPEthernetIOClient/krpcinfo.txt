GetClientName....*|<doc>
<summary>
Returns the name of the current client.
This is an empty string if the client has no name.
</summary>
</doc>.s
	GetStatus.....*a<doc>
<summary>
Returns some information about the server, such as the version.
</summary>
</doc>...
.GetServices.....*..<doc>
<summary>
Returns information on all services, procedures, classes, properties etc. provided by the server.
Can be used by client libraries to automatically create functionality such as stubs.
</summary>
</doc>...
	AddStream..
.call.......
.start............*T<doc>
<summary>
Add a streaming request and return its identifier.
</summary>
</doc>.f
.StartStream..
.id....*M<doc>
<summary>
Start a previously added streaming request.
</summary>
</doc>.p

SetStreamRate..
.id.....

.rate....*I<doc>
<summary>
Set the update rate for a stream in Hz.
</summary>
</doc>.W
.RemoveStream..
.id....*=<doc>
<summary>
Remove a streaming request.
</summary>
</doc>...
.AddEvent."

expression...d..KRPC.
Expression.....*P<doc>
<summary>
Create an event from a server side expression.
</summary>
</doc>...
.get_Clients....."...."..	"..."...*..<doc>
<summary>
A list of RPC clients that are currently connected to the server.
Each entry in the list is a clients identifier, name and address.
</summary>
</doc>.j
.get_CurrentGameScene...e..KRPC.	GameScene*=<doc>
<summary>
Get the current game scene.
</summary>
</doc>.O

get_Paused....*=<doc>
<summary>
Whether the game is paused.
</summary>
</doc>.X

set_Paused..
.value....*=<doc>
<summary>
Whether the game is paused.
</summary>
</doc>...
 Expression_static_ConstantDouble..
.value.......d..KRPC.
Expression*x<doc>
<summary>
A constant value of double precision floating point type.
</summary>
<param name="value"></param>
</doc>...
.Expression_static_ConstantFloat..
.value.......d..KRPC.
Expression*x<doc>
<summary>
A constant value of single precision floating point type.
</summary>
<param name="value"></param>
</doc>...
.Expression_static_ConstantInt..
.value.......d..KRPC.
Expression*`<doc>
<summary>
A constant value of integer type.
</summary>
<param name="value"></param>
</doc>...
.Expression_static_ConstantBool..
.value.......d..KRPC.
Expression*`<doc>
<summary>
A constant value of boolean type.
</summary>
<param name="value"></param>
</doc>...
 Expression_static_ConstantString..
.value.......d..KRPC.
Expression*_<doc>
<summary>
A constant value of string type.
</summary>
<param name="value"></param>
</doc>...
.Expression_static_Call..
.call........d..KRPC.
Expression*J<doc>
<summary>
An RPC call.
</summary>
<param name="call"></param>
</doc>...
.Expression_static_Equal..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*n<doc>
<summary>
Equality comparison.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_NotEqual..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*p<doc>
<summary>
Inequality comparison.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_GreaterThan..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*|<doc>
<summary>
Greater than numerical comparison.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
$Expression_static_GreaterThanOrEqual..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Greater than or equal numerical comparison.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_LessThan..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*y<doc>
<summary>
Less than numerical comparison.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
!Expression_static_LessThanOrEqual..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Less than or equal numerical comparison.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_And..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*o<doc>
<summary>
Boolean and operator.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Or..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*n<doc>
<summary>
Boolean or operator.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_ExclusiveOr..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*x<doc>
<summary>
Boolean exclusive-or operator.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Not..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*W<doc>
<summary>
Boolean negation operator.
</summary>
<param name="arg"></param>
</doc>...
.Expression_static_Add..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*m<doc>
<summary>
Numerical addition.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Subtract..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*p<doc>
<summary>
Numerical subtraction.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Multiply..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*s<doc>
<summary>
Numerical multiplication.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Divide..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*m<doc>
<summary>
Numerical division.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Modulo..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Numerical modulo operator.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
<returns>The remainder of arg0 divided by arg1</returns>
</doc>...
.Expression_static_Power..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Numerical power operator.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
<returns>arg0 raised to the power of arg1, with type of arg0</returns>
</doc>...
.Expression_static_LeftShift..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*m<doc>
<summary>
Bitwise left shift.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_RightShift..
.arg0...d..KRPC.
Expression..
.arg1...d..KRPC.
Expression...d..KRPC.
Expression*n<doc>
<summary>
Bitwise right shift.
</summary>
<param name="arg0"></param>
<param name="arg1"></param>
</doc>...
.Expression_static_Cast..
.arg...d..KRPC.
Expression..
.type...d..KRPC..Type...d..KRPC.
Expression*..<doc>
<summary>
Perform a cast to the given type.
</summary>
<param name="arg"></param>
<param name="type">Type to cast the argument to.</param>
</doc>...
.Expression_static_Parameter.

.name......
.type...d..KRPC..Type...d..KRPC.
Expression*..<doc>
<summary>
A named parameter of type double.
</summary>
<returns>A named parameter.</returns>
<param name="name">The name of the parameter.</param>
<param name="type">The type of the parameter.</param>
</doc>...
.Expression_static_Function.'

parameters....."..d..KRPC.
Expression..
.body...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
A function.
</summary>
<returns>A function.</returns>
<param name="parameters">The parameters of the function.</param>
<param name="body">The body of the function.</param>
</doc>...
.Expression_static_Invoke. 
.function...d..KRPC.
Expression.%
.args....."..."..d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
A function call.
</summary>
<returns>A function call.</returns>
<param name="function">The function to call.</param>
<param name="args">The arguments to call the function with.</param>
</doc>...
.Expression_static_CreateTuple.%
.elements....."..d..KRPC.
Expression...d..KRPC.
Expression*.<doc>
<summary>
Construct a tuple.
</summary>
<returns>The tuple.</returns>
<param name="elements">The elements.</param>
</doc>...
.Expression_static_CreateList.#
.values....."..d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Construct a list.
</summary>
<returns>The list.</returns>
<param name="values">The value. Should all be of the same type.</param>
</doc>...
.Expression_static_CreateSet.#
.values....."..d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Construct a set.
</summary>
<returns>The set.</returns>
<param name="values">The values. Should all be of the same type.</param>
</doc>...
"Expression_static_CreateDictionary.!
.keys....."..d..KRPC.
Expression.#
.values....."..d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Construct a dictionary, from a list of corresponding keys and values.
</summary>
<returns>The dictionary.</returns>
<param name="keys">The keys. Should all be of the same type.</param>
<param name="values">The values. Should all be of the same type.</param>
</doc>...
.Expression_static_ToList..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Convert a collection to a list.
</summary>
<returns>The collection as a list.</returns>
<param name="arg">The collection.</param>
</doc>...
.Expression_static_ToSet..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Convert a collection to a set.
</summary>
<returns>The collection as a set.</returns>
<param name="arg">The collection.</param>
</doc>...
.Expression_static_Get..
.arg...d..KRPC.
Expression..
.index...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Access an element in a tuple, list or dictionary.
</summary>
<returns>The element.</returns>
<param name="arg">The tuple, list or dictionary.</param>
<param name="index">The index of the element to access.
A zero indexed integer for a tuple or list, or a key for a dictionary.</param>
</doc>...
.Expression_static_Count..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Number of elements in a collection.
</summary>
<returns>The number of elements in the collection.</returns>
<param name="arg">The list, set or dictionary.</param>
</doc>...
.Expression_static_Sum..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Sum all elements of a collection.
</summary>
<returns>The sum of the elements in the collection.</returns>
<param name="arg">The list or set.</param>
</doc>...
.Expression_static_Max..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Maximum of all elements in a collection.
</summary>
<returns>The maximum elements in the collection.</returns>
<param name="arg">The list or set.</param>
</doc>...
.Expression_static_Min..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Minimum of all elements in a collection.
</summary>
<returns>The minimum elements in the collection.</returns>
<param name="arg">The list or set.</param>
</doc>...
.Expression_static_Average..
.arg...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Minimum of all elements in a collection.
</summary>
<returns>The minimum elements in the collection.</returns>
<param name="arg">The list or set.</param>
</doc>...
.Expression_static_Select..
.arg...d..KRPC.
Expression..
.func...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Run a function on every element in the collection.
</summary>
<returns>The modified collection.</returns>
<param name="arg">The list or set.</param>
<param name="func">The function.</param>
</doc>...
.Expression_static_Where..
.arg...d..KRPC.
Expression..
.func...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Run a function on every element in the collection.
</summary>
<returns>The modified collection.</returns>
<param name="arg">The list or set.</param>
<param name="func">The function.</param>
</doc>...
.Expression_static_Contains..
.arg...d..KRPC.
Expression..
.value...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Determine if a collection contains a value.
</summary>
<returns>Whether the collection contains a value.</returns>
<param name="arg">The collection.</param>
<param name="value">The value to look for.</param>
</doc>...
.Expression_static_Aggregate..
.arg...d..KRPC.
Expression..
.func...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Applies an accumulator function over a sequence.
</summary>
<returns>The accumulated value.</returns>
<param name="arg">The collection.</param>
<param name="func">The accumulator function.</param>
</doc>...
#Expression_static_AggregateWithSeed..
.arg...d..KRPC.
Expression..
.seed...d..KRPC.
Expression..
.func...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Applies an accumulator function over a sequence, with a given seed.
</summary>
<returns>The accumulated value.</returns>
<param name="arg">The collection.</param>
<param name="seed">The seed value.</param>
<param name="func">The accumulator function.</param>
</doc>...
.Expression_static_Concat..
.arg1...d..KRPC.
Expression..
.arg2...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Concatenate two sequences.
</summary>
<returns>The first sequence followed by the second sequence.</returns>
<param name="arg1">The first sequence.</param>
<param name="arg2">The second sequence.</param>
</doc>...
.Expression_static_OrderBy..
.arg...d..KRPC.
Expression..
.key...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Order a collection using a key function.
</summary>
<returns>The ordered collection.</returns>
<param name="arg">The collection to order.</param>
<param name="key">A function that takes a value from the collection and generates a key to sort on.</param>
</doc>...
.Expression_static_All..
.arg...d..KRPC.
Expression.!
	predicate...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Determine whether all items in a collection satisfy a boolean predicate.
</summary>
<returns>Whether all items satisfy the predicate.</returns>
<param name="arg">The collection.</param>
<param name="predicate">The predicate function.</param>
</doc>...
.Expression_static_Any..
.arg...d..KRPC.
Expression.!
	predicate...d..KRPC.
Expression...d..KRPC.
Expression*..<doc>
<summary>
Determine whether any item in a collection satisfies a boolean predicate.
</summary>
<returns>Whether any item satisfies the predicate.</returns>
<param name="arg">The collection.</param>
<param name="predicate">The predicate function.</param>
</doc>.T
.Type_static_Double...d..KRPC..Type*.<doc>
<summary>
Double type.
</summary>
</doc>.R
.Type_static_Float...d..KRPC..Type*-<doc>
<summary>
Float type.
</summary>
</doc>.N
.Type_static_Int...d..KRPC..Type*+<doc>
<summary>
Int type.
</summary>
</doc>.P
.Type_static_Bool...d..KRPC..Type*,<doc>
<summary>
Bool type.
</summary>
</doc>.T
.Type_static_String...d..KRPC..Type*.<doc>
<summary>
String type.
</summary>
</doc>.I

Expression.;<doc>
<summary>
A server side expression.
</summary>
</doc>.C
.Type.;<doc>
<summary>
A server side expression.
</summary>
</doc>"..
	GameScene.j
.SpaceCenter.[<doc>
<summary>
The game scene showing the Kerbal Space Center buildings.
</summary>
</doc>.u
.Flight...i<doc>
<summary>
The game scene showing a vessel in flight (or on the launchpad/runway).
</summary>
</doc>.L
.TrackingStation...7<doc>
<summary>
The tracking station.
</summary>
</doc>.O
	EditorVAB...@<doc>
<summary>
The Vehicle Assembly Building.
</summary>
</doc>.H
	EditorSPH...9<doc>
<summary>
The Space Plane Hangar.
</summary>
</doc>.]<doc>
<summary>
The game scene. See <see cref="M:KRPC.CurrentGameScene" />.
</summary>
</doc>*..
.ArgumentException...<doc>
<summary>
A method was invoked where at least one of the passed arguments does not
meet the parameter specification of the method.
</summary>
</doc>*..
.ArgumentNullException.v<doc>
<summary>
A null reference was passed to a method that does not accept it as a valid argument.
</summary>
</doc>*..
.ArgumentOutOfRangeException...<doc>
<summary>
The value of an argument is outside the allowable range of values as defined by the invoked method.
</summary>
</doc>*..
.InvalidOperationException.{<doc>
<summary>
A method call was made to a method that is invalid
given the current state of the object.
</summary>
</doc>2q<doc>
<summary>
Main kRPC service, used by clients to interact with basic server functionality.
</summary>
</doc>
.T
.Drawing...
.AddLine..
.start....."..."...".....
.end....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame..
.visible..........d..Drawing..Line*..<doc>
<summary>
Draw a line in the scene.
</summary>
<param name="start">Position of the start of the line.</param>
<param name="end">Position of the end of the line.</param>
<param name="referenceFrame">Reference frame that the positions are in.</param>
<param name="visible">Whether the line is visible.</param>
</doc>...
.AddDirection..
	direction....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame..
.length........ A..
.visible..........d..Drawing..Line*..<doc>
<summary>
Draw a direction vector in the scene, starting from the origin of the given reference frame.
</summary>
<param name="direction">Direction to draw the line in.</param>
<param name="referenceFrame">Reference frame that the direction is in and defines the start position.</param>
<param name="length">The length of the line.</param>
<param name="visible">Whether the line is visible.</param>
</doc>...
.AddDirectionFromCom..
	direction....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame..
.length........ A..
.visible..........d..Drawing..Line*..<doc>
<summary>
Draw a direction vector in the scene, from the center of mass of the active vessel.
</summary>
<param name="direction">Direction to draw the line in.</param>
<param name="referenceFrame">Reference frame that the direction is in.</param>
<param name="length">The length of the line.</param>
<param name="visible">Whether the line is visible.</param>
</doc>...

AddPolygon. 
.vertices....."...."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame..
.visible..........d..Drawing..Polygon*..<doc>
<summary>
Draw a polygon in the scene, defined by a list of vertices.
</summary>
<param name="vertices">Vertices of the polygon.</param>
<param name="referenceFrame">Reference frame that the vertices are in.</param>
<param name="visible">Whether the polygon is visible.</param>
</doc>...
.AddText.

.text.....1
.referenceFrame...d..SpaceCenter..ReferenceFrame..
.position....."..."...".....
.rotation....."..."..."...".....
.visible..........d..Drawing..Text*..<doc>
<summary>
Draw text in the scene.
</summary>
<param name="text">The string to draw.</param>
<param name="referenceFrame">Reference frame that the text position is in.</param>
<param name="position">Position of the text.</param>
<param name="rotation">Rotation of the text, as a quaternion.</param>
<param name="visible">Whether the text is visible.</param>
</doc>...
.Clear..

clientOnly.......*..<doc>
<summary>
Remove all objects being drawn.
</summary>
<param name="clientOnly">If true, only remove objects created by the calling client.</param>
</doc>.^
.Line_Remove..
.this...d..Drawing..Line*4<doc>
<summary>
Remove the object.
</summary>
</doc>.{
.Line_get_Start..
.this...d..Drawing..Line....."..."..."...*=<doc>
<summary>
Start position of the line.
</summary>
</doc>...
.Line_set_Start..
.this...d..Drawing..Line..
.value....."..."..."...*=<doc>
<summary>
Start position of the line.
</summary>
</doc>.w
.Line_get_End..
.this...d..Drawing..Line....."..."..."...*;<doc>
<summary>
End position of the line.
</summary>
</doc>...
.Line_set_End..
.this...d..Drawing..Line..
.value....."..."..."...*;<doc>
<summary>
End position of the line.
</summary>
</doc>.m
.Line_get_Color..
.this...d..Drawing..Line....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.v
.Line_set_Color..
.this...d..Drawing..Line..
.value....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.h
.Line_get_Thickness..
.this...d..Drawing..Line....*3<doc>
<summary>
Set the thickness
</summary>
</doc>.q
.Line_set_Thickness..
.this...d..Drawing..Line..
.value....*3<doc>
<summary>
Set the thickness
</summary>
</doc>...
.Line_get_ReferenceFrame..
.this...d..Drawing..Line...d..SpaceCenter..ReferenceFrame*R<doc>
<summary>
Reference frame for the positions of the object.
</summary>
</doc>...
.Line_set_ReferenceFrame..
.this...d..Drawing..Line.(
.value...d..SpaceCenter..ReferenceFrame*R<doc>
<summary>
Reference frame for the positions of the object.
</summary>
</doc>.s
.Line_get_Visible..
.this...d..Drawing..Line....*@<doc>
<summary>
Whether the object is visible.
</summary>
</doc>.|
.Line_set_Visible..
.this...d..Drawing..Line..
.value....*@<doc>
<summary>
Whether the object is visible.
</summary>
</doc>...
.Line_get_Material..
.this...d..Drawing..Line....*}<doc>
<summary>
Material used to render the object.
Creates the material from a shader with the given name.
</summary>
</doc>...
.Line_set_Material..
.this...d..Drawing..Line..
.value....*}<doc>
<summary>
Material used to render the object.
Creates the material from a shader with the given name.
</summary>
</doc>.d
.Polygon_Remove..
.this...d..Drawing..Polygon*4<doc>
<summary>
Remove the object.
</summary>
</doc>...
.Polygon_get_Vertices..
.this...d..Drawing..Polygon....."...."..."..."...*;<doc>
<summary>
Vertices for the polygon.
</summary>
</doc>...
.Polygon_set_Vertices..
.this...d..Drawing..Polygon..
.value....."...."..."..."...*;<doc>
<summary>
Vertices for the polygon.
</summary>
</doc>.s
.Polygon_get_Color..
.this...d..Drawing..Polygon....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.|
.Polygon_set_Color..
.this...d..Drawing..Polygon..
.value....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.n
.Polygon_get_Thickness..
.this...d..Drawing..Polygon....*3<doc>
<summary>
Set the thickness
</summary>
</doc>.w
.Polygon_set_Thickness..
.this...d..Drawing..Polygon..
.value....*3<doc>
<summary>
Set the thickness
</summary>
</doc>...
.Polygon_get_ReferenceFrame..
.this...d..Drawing..Polygon...d..SpaceCenter..ReferenceFrame*R<doc>
<summary>
Reference frame for the positions of the object.
</summary>
</doc>...
.Polygon_set_ReferenceFrame..
.this...d..Drawing..Polygon.(
.value...d..SpaceCenter..ReferenceFrame*R<doc>
<summary>
Reference frame for the positions of the object.
</summary>
</doc>.y
.Polygon_get_Visible..
.this...d..Drawing..Polygon....*@<doc>
<summary>
Whether the object is visible.
</summary>
</doc>...
.Polygon_set_Visible..
.this...d..Drawing..Polygon..
.value....*@<doc>
<summary>
Whether the object is visible.
</summary>
</doc>...
.Polygon_get_Material..
.this...d..Drawing..Polygon....*}<doc>
<summary>
Material used to render the object.
Creates the material from a shader with the given name.
</summary>
</doc>...
.Polygon_set_Material..
.this...d..Drawing..Polygon..
.value....*}<doc>
<summary>
Material used to render the object.
Creates the material from a shader with the given name.
</summary>
</doc>.g
.Text_static_AvailableFonts....."...*@<doc>
<summary>
A list of all available fonts.
</summary>
</doc>.^
.Text_Remove..
.this...d..Drawing..Text*4<doc>
<summary>
Remove the object.
</summary>
</doc>.x
.Text_get_Position..
.this...d..Drawing..Text....."..."..."...*7<doc>
<summary>
Position of the text.
</summary>
</doc>...
.Text_set_Position..
.this...d..Drawing..Text..
.value....."..."..."...*7<doc>
<summary>
Position of the text.
</summary>
</doc>...
.Text_get_Rotation..
.this...d..Drawing..Text....."..."..."..."...*G<doc>
<summary>
Rotation of the text as a quaternion.
</summary>
</doc>...
.Text_set_Rotation..
.this...d..Drawing..Text..
.value....."..."..."..."...*G<doc>
<summary>
Rotation of the text as a quaternion.
</summary>
</doc>.d
.Text_get_Content..
.this...d..Drawing..Text....*1<doc>
<summary>
The text string
</summary>
</doc>.m
.Text_set_Content..
.this...d..Drawing..Text..
.value....*1<doc>
<summary>
The text string
</summary>
</doc>.b

Text_get_Font..
.this...d..Drawing..Text....*2<doc>
<summary>
Name of the font
</summary>
</doc>.k

Text_set_Font..
.this...d..Drawing..Text..
.value....*2<doc>
<summary>
Name of the font
</summary>
</doc>.\

Text_get_Size..
.this...d..Drawing..Text....*,<doc>
<summary>
Font size.
</summary>
</doc>.e

Text_set_Size..
.this...d..Drawing..Text..
.value....*,<doc>
<summary>
Font size.
</summary>
</doc>.j
.Text_get_CharacterSize..
.this...d..Drawing..Text....*1<doc>
<summary>
Character size.
</summary>
</doc>.s
.Text_set_CharacterSize..
.this...d..Drawing..Text..
.value....*1<doc>
<summary>
Character size.
</summary>
</doc>.m
.Text_get_Style..
.this...d..Drawing..Text...e..UI.	FontStyle*-<doc>
<summary>
Font style.
</summary>
</doc>.v
.Text_set_Style..
.this...d..Drawing..Text..
.value...e..UI.	FontStyle*-<doc>
<summary>
Font style.
</summary>
</doc>.t
.Text_get_Alignment..
.this...d..Drawing..Text...e..UI.
TextAlignment*,<doc>
<summary>
Alignment.
</summary>
</doc>.}
.Text_set_Alignment..
.this...d..Drawing..Text..
.value...e..UI.
TextAlignment*,<doc>
<summary>
Alignment.
</summary>
</doc>.f
.Text_get_LineSpacing..
.this...d..Drawing..Text....*/<doc>
<summary>
Line spacing.
</summary>
</doc>.o
.Text_set_LineSpacing..
.this...d..Drawing..Text..
.value....*/<doc>
<summary>
Line spacing.
</summary>
</doc>.k
.Text_get_Anchor..
.this...d..Drawing..Text...e..UI.
TextAnchor*)<doc>
<summary>
Anchor.
</summary>
</doc>.t
.Text_set_Anchor..
.this...d..Drawing..Text..
.value...e..UI.
TextAnchor*)<doc>
<summary>
Anchor.
</summary>
</doc>.m
.Text_get_Color..
.this...d..Drawing..Text....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.v
.Text_set_Color..
.this...d..Drawing..Text..
.value....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>...
.Text_get_ReferenceFrame..
.this...d..Drawing..Text...d..SpaceCenter..ReferenceFrame*R<doc>
<summary>
Reference frame for the positions of the object.
</summary>
</doc>...
.Text_set_ReferenceFrame..
.this...d..Drawing..Text.(
.value...d..SpaceCenter..ReferenceFrame*R<doc>
<summary>
Reference frame for the positions of the object.
</summary>
</doc>.s
.Text_get_Visible..
.this...d..Drawing..Text....*@<doc>
<summary>
Whether the object is visible.
</summary>
</doc>.|
.Text_set_Visible..
.this...d..Drawing..Text..
.value....*@<doc>
<summary>
Whether the object is visible.
</summary>
</doc>...
.Text_get_Material..
.this...d..Drawing..Text....*}<doc>
<summary>
Material used to render the object.
Creates the material from a shader with the given name.
</summary>
</doc>...
.Text_set_Material..
.this...d..Drawing..Text..
.value....*}<doc>
<summary>
Material used to render the object.
Creates the material from a shader with the given name.
</summary>
</doc>.a
.Line.Y<doc>
<summary>
A line. Created using <see cref="M:Drawing.AddLine" />.
</summary>
</doc>.j
.Polygon._<doc>
<summary>
A polygon. Created using <see cref="M:Drawing.AddPolygon" />.
</summary>
</doc>._
.Text.W<doc>
<summary>
Text. Created using <see cref="M:Drawing.AddText" />.
</summary>
</doc>2..<doc>
<summary>
Provides functionality for drawing objects in the flight scene.
</summary>
<remarks>
For drawing and interacting with the user interface, see the UI service.
</remarks>
</doc>
.M
.InfernalRobotics...
.ServoGroups.!
.vessel...d..SpaceCenter..Vessel.%..." .d..InfernalRobotics.
ServoGroup*i<doc>
<summary>
A list of all the servo groups in the given <paramref name="vessel" />.
</summary>
</doc>...
.ServoGroupWithName.!
.vessel...d..SpaceCenter..Vessel.

.name..... .d..InfernalRobotics.
ServoGroup .*..<doc>
<summary>
Returns the servo group in the given <paramref name="vessel" /> with the given <paramref name="name" />,
or <c>null</c> if none exists. If multiple servo groups have the same name, only one of them is returned.
</summary>
<param name="vessel">Vessel to check.</param>
<param name="name">Name of servo group to find.</param>
</doc>...

ServoWithName.!
.vessel...d..SpaceCenter..Vessel.

.name.......d..InfernalRobotics..Servo .*..<doc>
<summary>
Returns the servo in the given <paramref name="vessel" /> with the given <paramref name="name" /> or
<c>null</c> if none exists. If multiple servos have the same name, only one of them is returned.
</summary>
<param name="vessel">Vessel to check.</param>
<param name="name">Name of the servo to find.</param>
</doc>.^

get_Available....*I<doc>
<summary>
Whether Infernal Robotics is installed.
</summary>
</doc>.Z
	get_Ready....*I<doc>
<summary>
Whether Infernal Robotics API is ready.
</summary>
</doc>.w
.Servo_MoveRight.#
.this...d..InfernalRobotics..Servo*?<doc>
<summary>
Moves the servo to the right.
</summary>
</doc>.u
.Servo_MoveLeft.#
.this...d..InfernalRobotics..Servo*><doc>
<summary>
Moves the servo to the left.
</summary>
</doc>.y
.Servo_MoveCenter.#
.this...d..InfernalRobotics..Servo*@<doc>
<summary>
Moves the servo to the center.
</summary>
</doc>...
.Servo_MoveNextPreset.#
.this...d..InfernalRobotics..Servo*E<doc>
<summary>
Moves the servo to the next preset.
</summary>
</doc>...
.Servo_MovePrevPreset.#
.this...d..InfernalRobotics..Servo*I<doc>
<summary>
Moves the servo to the previous preset.
</summary>
</doc>...
.Servo_MoveTo.#
.this...d..InfernalRobotics..Servo..
.position......
.speed....*..<doc>
<summary>
Moves the servo to <paramref name="position" /> and sets the
speed multiplier to <paramref name="speed" />.
</summary>
<param name="position">The position to move the servo to.</param>
<param name="speed">Speed multiplier for the movement.</param>
</doc>.e

Servo_Stop.#
.this...d..InfernalRobotics..Servo*2<doc>
<summary>
Stops the servo.
</summary>
</doc>.s
.Servo_get_Name.#
.this...d..InfernalRobotics..Servo....*8<doc>
<summary>
The name of the servo.
</summary>
</doc>.|
.Servo_set_Name.#
.this...d..InfernalRobotics..Servo..
.value....*8<doc>
<summary>
The name of the servo.
</summary>
</doc>...
.Servo_get_Part.#
.this...d..InfernalRobotics..Servo...d..SpaceCenter..Part*@<doc>
<summary>
The part containing the servo.
</summary>
</doc>...
.Servo_set_Highlight.#
.this...d..InfernalRobotics..Servo..
.value....*R<doc>
<summary>
Whether the servo should be highlighted in-game.
</summary>
</doc>.{
.Servo_get_Position.#
.this...d..InfernalRobotics..Servo....*<<doc>
<summary>
The position of the servo.
</summary>
</doc>...
.Servo_get_MinConfigPosition.#
.this...d..InfernalRobotics..Servo....*i<doc>
<summary>
The minimum position of the servo, specified by the part configuration.
</summary>
</doc>...
.Servo_get_MaxConfigPosition.#
.this...d..InfernalRobotics..Servo....*i<doc>
<summary>
The maximum position of the servo, specified by the part configuration.
</summary>
</doc>...
.Servo_get_MinPosition.#
.this...d..InfernalRobotics..Servo....*i<doc>
<summary>
The minimum position of the servo, specified by the in-game tweak menu.
</summary>
</doc>...
.Servo_set_MinPosition.#
.this...d..InfernalRobotics..Servo..
.value....*i<doc>
<summary>
The minimum position of the servo, specified by the in-game tweak menu.
</summary>
</doc>...
.Servo_get_MaxPosition.#
.this...d..InfernalRobotics..Servo....*i<doc>
<summary>
The maximum position of the servo, specified by the in-game tweak menu.
</summary>
</doc>...
.Servo_set_MaxPosition.#
.this...d..InfernalRobotics..Servo..
.value....*i<doc>
<summary>
The maximum position of the servo, specified by the in-game tweak menu.
</summary>
</doc>...
.Servo_get_ConfigSpeed.#
.this...d..InfernalRobotics..Servo....*i<doc>
<summary>
The speed multiplier of the servo, specified by the part configuration.
</summary>
</doc>...
.Servo_get_Speed.#
.this...d..InfernalRobotics..Servo....*i<doc>
<summary>
The speed multiplier of the servo, specified by the in-game tweak menu.
</summary>
</doc>...
.Servo_set_Speed.#
.this...d..InfernalRobotics..Servo..
.value....*i<doc>
<summary>
The speed multiplier of the servo, specified by the in-game tweak menu.
</summary>
</doc>...
.Servo_get_CurrentSpeed.#
.this...d..InfernalRobotics..Servo....*Q<doc>
<summary>
The current speed at which the servo is moving.
</summary>
</doc>...
.Servo_set_CurrentSpeed.#
.this...d..InfernalRobotics..Servo..
.value....*Q<doc>
<summary>
The current speed at which the servo is moving.
</summary>
</doc>...
.Servo_get_Acceleration.#
.this...d..InfernalRobotics..Servo....*M<doc>
<summary>
The current speed multiplier set in the UI.
</summary>
</doc>...
.Servo_set_Acceleration.#
.this...d..InfernalRobotics..Servo..
.value....*M<doc>
<summary>
The current speed multiplier set in the UI.
</summary>
</doc>.}
.Servo_get_IsMoving.#
.this...d..InfernalRobotics..Servo....*><doc>
<summary>
Whether the servo is moving.
</summary>
</doc>...
.Servo_get_IsFreeMoving.#
.this...d..InfernalRobotics..Servo....*E<doc>
<summary>
Whether the servo is freely moving.
</summary>
</doc>.}
.Servo_get_IsLocked.#
.this...d..InfernalRobotics..Servo....*><doc>
<summary>
Whether the servo is locked.
</summary>
</doc>...
.Servo_set_IsLocked.#
.this...d..InfernalRobotics..Servo..
.value....*><doc>
<summary>
Whether the servo is locked.
</summary>
</doc>...
.Servo_get_IsAxisInverted.#
.this...d..InfernalRobotics..Servo....*F<doc>
<summary>
Whether the servos axis is inverted.
</summary>
</doc>...
.Servo_set_IsAxisInverted.#
.this...d..InfernalRobotics..Servo..
.value....*F<doc>
<summary>
Whether the servos axis is inverted.
</summary>
</doc>...
.ServoGroup_ServoWithName.(
.this. .d..InfernalRobotics.
ServoGroup.

.name.......d..InfernalRobotics..Servo .*..<doc>
<summary>
Returns the servo with the given <paramref name="name" /> from this group,
or <c>null</c> if none exists.
</summary>
<param name="name">Name of servo to find.</param>
</doc>...
.ServoGroup_MoveRight.(
.this. .d..InfernalRobotics.
ServoGroup*T<doc>
<summary>
Moves all of the servos in the group to the right.
</summary>
</doc>...
.ServoGroup_MoveLeft.(
.this. .d..InfernalRobotics.
ServoGroup*S<doc>
<summary>
Moves all of the servos in the group to the left.
</summary>
</doc>...
.ServoGroup_MoveCenter.(
.this. .d..InfernalRobotics.
ServoGroup*U<doc>
<summary>
Moves all of the servos in the group to the center.
</summary>
</doc>...
.ServoGroup_MoveNextPreset.(
.this. .d..InfernalRobotics.
ServoGroup*Z<doc>
<summary>
Moves all of the servos in the group to the next preset.
</summary>
</doc>...
.ServoGroup_MovePrevPreset.(
.this. .d..InfernalRobotics.
ServoGroup*^<doc>
<summary>
Moves all of the servos in the group to the previous preset.
</summary>
</doc>.}
.ServoGroup_Stop.(
.this. .d..InfernalRobotics.
ServoGroup*@<doc>
<summary>
Stops the servos in the group.
</summary>
</doc>.}
.ServoGroup_get_Name.(
.this. .d..InfernalRobotics.
ServoGroup....*8<doc>
<summary>
The name of the group.
</summary>
</doc>...
.ServoGroup_set_Name.(
.this. .d..InfernalRobotics.
ServoGroup..
.value....*8<doc>
<summary>
The name of the group.
</summary>
</doc>...
.ServoGroup_get_ForwardKey.(
.this. .d..InfernalRobotics.
ServoGroup....*Y<doc>
<summary>
The key assigned to be the "forward" key for the group.
</summary>
</doc>...
.ServoGroup_set_ForwardKey.(
.this. .d..InfernalRobotics.
ServoGroup..
.value....*Y<doc>
<summary>
The key assigned to be the "forward" key for the group.
</summary>
</doc>...
.ServoGroup_get_ReverseKey.(
.this. .d..InfernalRobotics.
ServoGroup....*Y<doc>
<summary>
The key assigned to be the "reverse" key for the group.
</summary>
</doc>...
.ServoGroup_set_ReverseKey.(
.this. .d..InfernalRobotics.
ServoGroup..
.value....*Y<doc>
<summary>
The key assigned to be the "reverse" key for the group.
</summary>
</doc>...
.ServoGroup_get_Speed.(
.this. .d..InfernalRobotics.
ServoGroup....*E<doc>
<summary>
The speed multiplier for the group.
</summary>
</doc>...
.ServoGroup_set_Speed.(
.this. .d..InfernalRobotics.
ServoGroup..
.value....*E<doc>
<summary>
The speed multiplier for the group.
</summary>
</doc>...
.ServoGroup_get_Expanded.(
.this. .d..InfernalRobotics.
ServoGroup....*[<doc>
<summary>
Whether the group is expanded in the InfernalRobotics UI.
</summary>
</doc>...
.ServoGroup_set_Expanded.(
.this. .d..InfernalRobotics.
ServoGroup..
.value....*[<doc>
<summary>
Whether the group is expanded in the InfernalRobotics UI.
</summary>
</doc>...
.ServoGroup_get_Servos.(
.this. .d..InfernalRobotics.
ServoGroup. ..."..d..InfernalRobotics..Servo*C<doc>
<summary>
The servos that are in the group.
</summary>
</doc>...
.ServoGroup_get_Parts.(
.this. .d..InfernalRobotics.
ServoGroup....."..d..SpaceCenter..Part*O<doc>
<summary>
The parts containing the servos in the group.
</summary>
</doc>...
.Servo...<doc>
<summary>
Represents a servo. Obtained using
<see cref="M:InfernalRobotics.ServoGroup.Servos" />,
<see cref="M:InfernalRobotics.ServoGroup.ServoWithName" />
or <see cref="M:InfernalRobotics.ServoWithName" />.
</summary>
</doc>...

ServoGroup...<doc>
<summary>
A group of servos, obtained by calling <see cref="M:InfernalRobotics.ServoGroups" />
or <see cref="M:InfernalRobotics.ServoGroupWithName" />. Represents the "Servo Groups"
in the InfernalRobotics UI.
</summary>
</doc>2..<doc>
<summary>
This service provides functionality to interact with
<a href="https://forum.kerbalspaceprogram.com/index.php?/topic/104535-112-magic-smoke-industries-infernal-robotics-202/">Infernal Robotics</a>.
</summary>
</doc>
.A
.KerbalAlarmClock...

AlarmWithName.

.name.......d..KerbalAlarmClock..Alarm .*..<doc>
<summary>
Get the alarm with the given <paramref name="name" />, or <c>null</c>
if no alarms have that name. If more than one alarm has the name,
only returns one of them.
</summary>
<param name="name">Name of the alarm to search for.</param>
</doc>...
.AlarmsWithType.'
.type...e..KerbalAlarmClock.	AlarmType. ..."..d..KerbalAlarmClock..Alarm*..<doc>
<summary>
Get a list of alarms of the specified <paramref name="type" />.
</summary>
<param name="type">Type of alarm to return.</param>
</doc>...
.CreateAlarm.'
.type...e..KerbalAlarmClock.	AlarmType.

.name......
.ut.......d..KerbalAlarmClock..Alarm*..<doc>
<summary>
Create a new alarm and return it.
</summary>
<param name="type">Type of the new alarm.</param>
<param name="name">Name of the new alarm.</param>
<param name="ut">Time at which the new alarm should trigger.</param>
</doc>._

get_Available....*J<doc>
<summary>
Whether Kerbal Alarm Clock is available.
</summary>
</doc>.k

get_Alarms. ..."..d..KerbalAlarmClock..Alarm*;<doc>
<summary>
A list of all the alarms.
</summary>
</doc>.i
.Alarm_Remove.#
.this...d..KerbalAlarmClock..Alarm*4<doc>
<summary>
Removes the alarm.
</summary>
</doc>...
.Alarm_get_Action.#
.this...d..KerbalAlarmClock..Alarm.!.e..KerbalAlarmClock..AlarmAction*E<doc>
<summary>
The action that the alarm triggers.
</summary>
</doc>...
.Alarm_set_Action.#
.this...d..KerbalAlarmClock..Alarm.*
.value.!.e..KerbalAlarmClock..AlarmAction*E<doc>
<summary>
The action that the alarm triggers.
</summary>
</doc>...
.Alarm_get_Margin.#
.this...d..KerbalAlarmClock..Alarm....*b<doc>
<summary>
The number of seconds before the event that the alarm will fire.
</summary>
</doc>...
.Alarm_set_Margin.#
.this...d..KerbalAlarmClock..Alarm..
.value....*b<doc>
<summary>
The number of seconds before the event that the alarm will fire.
</summary>
</doc>...
.Alarm_get_Time.#
.this...d..KerbalAlarmClock..Alarm....*H<doc>
<summary>
The time at which the alarm will fire.
</summary>
</doc>...
.Alarm_set_Time.#
.this...d..KerbalAlarmClock..Alarm..
.value....*H<doc>
<summary>
The time at which the alarm will fire.
</summary>
</doc>...
.Alarm_get_Type.#
.this...d..KerbalAlarmClock..Alarm...e..KerbalAlarmClock.	AlarmType*8<doc>
<summary>
The type of the alarm.
</summary>
</doc>..
.Alarm_get_ID.#
.this...d..KerbalAlarmClock..Alarm....*F<doc>
<summary>
The unique identifier for the alarm.
</summary>
</doc>.y
.Alarm_get_Name.#
.this...d..KerbalAlarmClock..Alarm....*><doc>
<summary>
The short name of the alarm.
</summary>
</doc>...
.Alarm_set_Name.#
.this...d..KerbalAlarmClock..Alarm..
.value....*><doc>
<summary>
The short name of the alarm.
</summary>
</doc>...
.Alarm_get_Notes.#
.this...d..KerbalAlarmClock..Alarm....*D<doc>
<summary>
The long description of the alarm.
</summary>
</doc>...
.Alarm_set_Notes.#
.this...d..KerbalAlarmClock..Alarm..
.value....*D<doc>
<summary>
The long description of the alarm.
</summary>
</doc>...
.Alarm_get_Remaining.#
.this...d..KerbalAlarmClock..Alarm....*R<doc>
<summary>
The number of seconds until the alarm will fire.
</summary>
</doc>...
.Alarm_get_Repeat.#
.this...d..KerbalAlarmClock..Alarm....*X<doc>
<summary>
Whether the alarm will be repeated after it has fired.
</summary>
</doc>...
.Alarm_set_Repeat.#
.this...d..KerbalAlarmClock..Alarm..
.value....*X<doc>
<summary>
Whether the alarm will be repeated after it has fired.
</summary>
</doc>...
.Alarm_get_RepeatPeriod.#
.this...d..KerbalAlarmClock..Alarm....*e<doc>
<summary>
The time delay to automatically create an alarm after it has fired.
</summary>
</doc>...
.Alarm_set_RepeatPeriod.#
.this...d..KerbalAlarmClock..Alarm..
.value....*e<doc>
<summary>
The time delay to automatically create an alarm after it has fired.
</summary>
</doc>...
.Alarm_get_Vessel.#
.this...d..KerbalAlarmClock..Alarm...d..SpaceCenter..Vessel*K<doc>
<summary>
The vessel that the alarm is attached to.
</summary>
</doc>...
.Alarm_set_Vessel.#
.this...d..KerbalAlarmClock..Alarm. 
.value...d..SpaceCenter..Vessel*K<doc>
<summary>
The vessel that the alarm is attached to.
</summary>
</doc>...
.Alarm_get_XferOriginBody.#
.this...d..KerbalAlarmClock..Alarm...d..SpaceCenter.
CelestialBody*R<doc>
<summary>
The celestial body the vessel is departing from.
</summary>
</doc>...
.Alarm_set_XferOriginBody.#
.this...d..KerbalAlarmClock..Alarm.'
.value...d..SpaceCenter.
CelestialBody*R<doc>
<summary>
The celestial body the vessel is departing from.
</summary>
</doc>...
.Alarm_get_XferTargetBody.#
.this...d..KerbalAlarmClock..Alarm...d..SpaceCenter.
CelestialBody*O<doc>
<summary>
The celestial body the vessel is arriving at.
</summary>
</doc>...
.Alarm_set_XferTargetBody.#
.this...d..KerbalAlarmClock..Alarm.'
.value...d..SpaceCenter.
CelestialBody*O<doc>
<summary>
The celestial body the vessel is arriving at.
</summary>
</doc>...
.Alarm...<doc>
<summary>
Represents an alarm. Obtained by calling
<see cref="M:KerbalAlarmClock.Alarms" />,
<see cref="M:KerbalAlarmClock.AlarmWithName" /> or
<see cref="M:KerbalAlarmClock.AlarmsWithType" />.
</summary>
</doc>"..
.AlarmAction.J
	DoNothing.=<doc>
<summary>
Don't do anything at all...
</summary>
</doc>.i
.DoNothingDeleteWhenPassed...J<doc>
<summary>
Don't do anything, and delete the alarm.
</summary>
</doc>.F
.KillWarp...8<doc>
<summary>
Drop out of time warp.
</summary>
</doc>.J
.KillWarpOnly...8<doc>
<summary>
Drop out of time warp.
</summary>
</doc>.E
.MessageOnly...4<doc>
<summary>
Display a message.
</summary>
</doc>.@
	PauseGame...1<doc>
<summary>
Pause the game.
</summary>
</doc>.Q<doc>
<summary>
The action performed by an alarm when it fires.
</summary>
</doc>"..
	AlarmType.n
.Raw.g<doc>
<summary>
An alarm for a specific date/time or a specific period in the future.
</summary>
</doc>...
.Maneuver.....<doc>
<summary>
An alarm based on the next maneuver node on the current ships flight path.
This node will be stored and can be restored when you come back to the ship.
</summary>
</doc>.m
.ManeuverAuto...[<doc>
<summary>
See <see cref="M:KerbalAlarmClock.AlarmType.Maneuver" />.
</summary>
</doc>.h
.Apoapsis...Z<doc>
<summary>
An alarm for furthest part of the orbit from the planet.
</summary>
</doc>.h
	Periapsis...Y<doc>
<summary>
An alarm for nearest part of the orbit from the planet.
</summary>
</doc>.z

AscendingNode...g<doc>
<summary>
Ascending node for the targeted object, or equatorial ascending node.
</summary>
</doc>.}
.DescendingNode...i<doc>
<summary>
Descending node for the targeted object, or equatorial descending node.
</summary>
</doc>...
.Closest.....<doc>
<summary>
An alarm based on the closest approach of this vessel to the targeted
vessel, some number of orbits into the future.
</summary>
</doc>.v
.Contract...h<doc>
<summary>
An alarm based on the expiry or deadline of contracts in career modes.
</summary>
</doc>.m
.ContractAuto.	.[<doc>
<summary>
See <see cref="M:KerbalAlarmClock.AlarmType.Contract" />.
</summary>
</doc>.W
.Crew.
.M<doc>
<summary>
An alarm that is attached to a crew member.
</summary>
</doc>...
.Distance...s<doc>
<summary>
An alarm that is triggered when a selected target comes within a chosen distance.
</summary>
</doc>...
	EarthTime...v<doc>
<summary>
An alarm based on the time in the "Earth" alternative Universe (aka the Real World).
</summary>
</doc>...
.LaunchRendevous.
.q<doc>
<summary>
An alarm that fires as your landed craft passes under the orbit of your target.
</summary>
</doc>...
	SOIChange.....<doc>
<summary>
An alarm manually based on when the next SOI point is on the flight path
or set to continually monitor the active flight path and add alarms as it
detects SOI changes.
</summary>
</doc>.o

SOIChangeAuto...\<doc>
<summary>
See <see cref="M:KerbalAlarmClock.AlarmType.SOIChange" />.
</summary>
</doc>...
.Transfer.....<doc>
<summary>
An alarm based on Interplanetary Transfer Phase Angles, i.e. when should
I launch to planet X? Based on Kosmo Not's post and used in Olex's
Calculator.
</summary>
</doc>.q
.TransferModelled...[<doc>
<summary>
See <see cref="M:KerbalAlarmClock.AlarmType.Transfer" />.
</summary>
</doc>.7<doc>
<summary>
The type of an alarm.
</summary>
</doc>2..<doc>
<summary>
This service provides functionality to interact with
<a href="https://forum.kerbalspaceprogram.com/index.php?/topic/22809-13x-kerbal-alarm-clock-v3850-may-30/">Kerbal Alarm Clock</a>.
</summary>
</doc>
.)

RemoteTech...
.Comms.!
.vessel...d..SpaceCenter..Vessel...d.
RemoteTech..Comms*..<doc>
<summary>
Get a communications object, representing the communication capability of a particular vessel.
</summary>
</doc>...
.Antenna..
.part...d..SpaceCenter..Part...d.
RemoteTech..Antenna*O<doc>
<summary>
Get the antenna object for a particular part.
</summary>
</doc>.W

get_Available....*B<doc>
<summary>
Whether RemoteTech is installed.
</summary>
</doc>.b
.get_GroundStations....."...*C<doc>
<summary>
The names of the ground stations.
</summary>
</doc>...
.Antenna_get_Part..
.this...d.
RemoteTech..Antenna...d..SpaceCenter..Part*G<doc>
<summary>
Get the part containing this antenna.
</summary>
</doc>...
.Antenna_get_HasConnection..
.this...d.
RemoteTech..Antenna....*G<doc>
<summary>
Whether the antenna has a connection.
</summary>
</doc>...
.Antenna_get_Target..
.this...d.
RemoteTech..Antenna...e.
RemoteTech..Target*..<doc>
<summary>
The object that the antenna is targetting.
This property can be used to set the target to <see cref="M:RemoteTech.Target.None" /> or <see cref="M:RemoteTech.Target.ActiveVessel" />.
To set the target to a celestial body, ground station or vessel see <see cref="M:RemoteTech.Antenna.TargetBody" />,
<see cref="M:RemoteTech.Antenna.TargetGroundStation" /> and <see cref="M:RemoteTech.Antenna.TargetVessel" />.
</summary>
</doc>...
.Antenna_set_Target..
.this...d.
RemoteTech..Antenna..
.value...e.
RemoteTech..Target*..<doc>
<summary>
The object that the antenna is targetting.
This property can be used to set the target to <see cref="M:RemoteTech.Target.None" /> or <see cref="M:RemoteTech.Target.ActiveVessel" />.
To set the target to a celestial body, ground station or vessel see <see cref="M:RemoteTech.Antenna.TargetBody" />,
<see cref="M:RemoteTech.Antenna.TargetGroundStation" /> and <see cref="M:RemoteTech.Antenna.TargetVessel" />.
</summary>
</doc>...
.Antenna_get_TargetBody..
.this...d.
RemoteTech..Antenna...d..SpaceCenter.
CelestialBody*O<doc>
<summary>
The celestial body the antenna is targetting.
</summary>
</doc>...
.Antenna_set_TargetBody..
.this...d.
RemoteTech..Antenna.'
.value...d..SpaceCenter.
CelestialBody*O<doc>
<summary>
The celestial body the antenna is targetting.
</summary>
</doc>...
.Antenna_get_TargetGroundStation..
.this...d.
RemoteTech..Antenna....*O<doc>
<summary>
The ground station the antenna is targetting.
</summary>
</doc>...
.Antenna_set_TargetGroundStation..
.this...d.
RemoteTech..Antenna..
.value....*O<doc>
<summary>
The ground station the antenna is targetting.
</summary>
</doc>...
.Antenna_get_TargetVessel..
.this...d.
RemoteTech..Antenna...d..SpaceCenter..Vessel*G<doc>
<summary>
The vessel the antenna is targetting.
</summary>
</doc>...
.Antenna_set_TargetVessel..
.this...d.
RemoteTech..Antenna. 
.value...d..SpaceCenter..Vessel*G<doc>
<summary>
The vessel the antenna is targetting.
</summary>
</doc>...
.Comms_SignalDelayToVessel..
.this...d.
RemoteTech..Comms. 
.other...d..SpaceCenter..Vessel....*..<doc>
<summary>
The signal delay between the this vessel and another vessel, in seconds.
</summary>
<param name="other"></param>
</doc>.}
.Comms_get_Vessel..
.this...d.
RemoteTech..Comms...d..SpaceCenter..Vessel*1<doc>
<summary>
Get the vessel.
</summary>
</doc>...
.Comms_get_HasLocalControl..
.this...d.
RemoteTech..Comms....*O<doc>
<summary>
Whether the vessel can be controlled locally.
</summary>
</doc>...
.Comms_get_HasFlightComputer..
.this...d.
RemoteTech..Comms....*T<doc>
<summary>
Whether the vessel has a flight computer on board.
</summary>
</doc>...
.Comms_get_HasConnection..
.this...d.
RemoteTech..Comms....*H<doc>
<summary>
Whether the vessel has any connection.
</summary>
</doc>...
&Comms_get_HasConnectionToGroundStation..
.this...d.
RemoteTech..Comms....*Z<doc>
<summary>
Whether the vessel has a connection to a ground station.
</summary>
</doc>...
.Comms_get_SignalDelay..
.this...d.
RemoteTech..Comms....*V<doc>
<summary>
The shortest signal delay to the vessel, in seconds.
</summary>
</doc>...
$Comms_get_SignalDelayToGroundStation..
.this...d.
RemoteTech..Comms....*q<doc>
<summary>
The signal delay between the vessel and the closest ground station, in seconds.
</summary>
</doc>...
.Comms_get_Antennas..
.this...d.
RemoteTech..Comms....."..d.
RemoteTech..Antenna*?<doc>
<summary>
The antennas for this vessel.
</summary>
</doc>...
.Antenna...<doc>
<summary>
A RemoteTech antenna. Obtained by calling <see cref="M:RemoteTech.Comms.Antennas" /> or <see cref="M:RemoteTech.Antenna" />.
</summary>
</doc>.G
.Comms.><doc>
<summary>
Communications for a vessel.
</summary>
</doc>"..
.Target.D
.ActiveVessel.4<doc>
<summary>
The active vessel.
</summary>
</doc>.F

CelestialBody...3<doc>
<summary>
A celestial body.
</summary>
</doc>.F

GroundStation...3<doc>
<summary>
A ground station.
</summary>
</doc>.@
.Vessel...4<doc>
<summary>
A specific vessel.
</summary>
</doc>.6
.None...,<doc>
<summary>
No target.
</summary>
</doc>.~<doc>
<summary>
The type of object an antenna is targetting.
See <see cref="M:RemoteTech.Antenna.Target" />.
</summary>
</doc>2..<doc>
<summary>
This service provides functionality to interact with
<a href="https://forum.kerbalspaceprogram.com/index.php?/topic/139167-13-remotetech-v188-2017-09-03/">RemoteTech</a>.
</summary>
</doc>
...
.SpaceCenter.K
.ClearTarget*<<doc>
<summary>
Clears the current target.
</summary>
</doc>...
.LaunchableVessels..
.craftDirectory........."...*..<doc>
<summary>
Returns a list of vessels from the given <paramref name="craftDirectory" />
that can be launched.
</summary>
<param name="craftDirectory">Name of the directory in the current saves
"Ships" directory. For example <c>"VAB"</c> or <c>"SPH"</c>.</param>
</doc>...
.LaunchVessel..
.craftDirectory.....

.name......

launchSite......
.recover.......*..<doc>
<summary>
Launch a vessel.
</summary>
<param name="craftDirectory">Name of the directory in the current saves
"Ships" directory, that contains the craft file.
For example <c>"VAB"</c> or <c>"SPH"</c>.</param>
<param name="name">Name of the vessel to launch. This is the name of the ".craft" file
in the save directory, without the ".craft" file extension.</param>
<param name="launchSite">Name of the launch site. For example <c>"LaunchPad"</c> or
<c>"Runway"</c>.</param>
<param name="recover">If true and there is a vessel on the launch site,
recover it before launching.</param>
<remarks>
Throws an exception if any of the games pre-flight checks fail.
</remarks>
</doc>...
.LaunchVesselFromVAB.

.name......
.recover.......*..<doc>
<summary>
Launch a new vessel from the VAB onto the launchpad.
</summary>
<param name="name">Name of the vessel to launch.</param>
<param name="recover">If true and there is a vessel on the launch pad,
recover it before launching.</param>
<remarks>
This is equivalent to calling <see cref="M:SpaceCenter.LaunchVessel" /> with the craft directory
set to "VAB" and the launch site set to "LaunchPad".
Throws an exception if any of the games pre-flight checks fail.
</remarks>
</doc>...
.LaunchVesselFromSPH.

.name......
.recover.......*..<doc>
<summary>
Launch a new vessel from the SPH onto the runway.
</summary>
<param name="name">Name of the vessel to launch.</param>
<param name="recover">If true and there is a vessel on the runway,
recover it before launching.</param>
<remarks>
This is equivalent to calling <see cref="M:SpaceCenter.LaunchVessel" /> with the craft directory
set to "SPH" and the launch site set to "Runway".
Throws an exception if any of the games pre-flight checks fail.
</remarks>
</doc>...
.Save.

.name....*..<doc>
<summary>
Save the game with a given name.
This will create a save file called <c>name.sfs</c> in the folder of the
current save game.
</summary>
</doc>...
.Load.

.name....*..<doc>
<summary>
Load the game with the given name.
This will create a load a save file called <c>name.sfs</c> from the folder of the
current save game.
</summary>
</doc>...
	Quicksave*..<doc>
<summary>
Save a quicksave.
</summary>
<remarks>
This is the same as calling <see cref="M:SpaceCenter.Save" /> with the name "quicksave".
</remarks>
</doc>...
	Quickload*..<doc>
<summary>
Load a quicksave.
</summary>
<remarks>
This is the same as calling <see cref="M:SpaceCenter.Load" /> with the name "quicksave".
</remarks>
</doc>...
.CanRailsWarpAt..
.factor...........*..<doc>
<summary>
Returns <c>true</c> if regular "on-rails" time warp can be used, at the specified warp
<paramref name="factor" />. The maximum time warp rate is limited by various things,
including how close the active vessel is to a planet. See
<a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">the KSP wiki</a>
for details.
</summary>
<param name="factor">The warp factor to check.</param>
</doc>...
.WarpTo..
.ut......
.maxRailsRate.......P.G..
.maxPhysicsRate.........@*..<doc>
<summary>
Uses time acceleration to warp forward to a time in the future, specified
by universal time <paramref name="ut" />. This call blocks until the desired
time is reached. Uses regular "on-rails" or physical time warp as appropriate.
For example, physical time warp is used when the active vessel is traveling
through an atmosphere. When using regular "on-rails" time warp, the warp
rate is limited by <paramref name="maxRailsRate" />, and when using physical
time warp, the warp rate is limited by <paramref name="maxPhysicsRate" />.
</summary>
<param name="ut">The universal time to warp to, in seconds.</param>
<param name="maxRailsRate">The maximum warp rate in regular "on-rails" time warp.
</param>
<param name="maxPhysicsRate">The maximum warp rate in physical time warp.</param>
<returns>When the time warp is complete.</returns>
</doc>...
.TransformPosition..
.position....."..."..."....'
.from...d..SpaceCenter..ReferenceFrame.%
.to...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
Converts a position from one reference frame to another.
</summary>
<param name="position">Position, as a vector, in reference frame
<paramref name="from" />.</param>
<param name="from">The reference frame that the position is in.</param>
<param name="to">The reference frame to covert the position to.</param>
<returns>The corresponding position, as a vector, in reference frame
<paramref name="to" />.</returns>
</doc>...
.TransformDirection..
	direction....."..."..."....'
.from...d..SpaceCenter..ReferenceFrame.%
.to...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
Converts a direction from one reference frame to another.
</summary>
<param name="direction">Direction, as a vector, in reference frame
<paramref name="from" />. </param>
<param name="from">The reference frame that the direction is in.</param>
<param name="to">The reference frame to covert the direction to.</param>
<returns>The corresponding direction, as a vector, in reference frame
<paramref name="to" />.</returns>
</doc>...
.TransformRotation..
.rotation....."..."..."..."....'
.from...d..SpaceCenter..ReferenceFrame.%
.to...d..SpaceCenter..ReferenceFrame....."..."..."..."...*..<doc>
<summary>
Converts a rotation from one reference frame to another.
</summary>
<param name="rotation">Rotation, as a quaternion of the form <math>(x, y, z, w)</math>,
in reference frame <paramref name="from" />.</param>
<param name="from">The reference frame that the rotation is in.</param>
<param name="to">The reference frame to covert the rotation to.</param>
<returns>The corresponding rotation, as a quaternion of the form
<math>(x, y, z, w)</math>, in reference frame <paramref name="to" />.</returns>
</doc>...
.TransformVelocity..
.position....."..."...".....
.velocity....."..."..."....'
.from...d..SpaceCenter..ReferenceFrame.%
.to...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
Converts a velocity (acting at the specified position) from one reference frame
to another. The position is required to take the relative angular velocity of the
reference frames into account.
</summary>
<param name="position">Position, as a vector, in reference frame
<paramref name="from" />.</param>
<param name="velocity">Velocity, as a vector that points in the direction of travel and
whose magnitude is the speed in meters per second, in reference frame
<paramref name="from" />.</param>
<param name="from">The reference frame that the position and velocity are in.</param>
<param name="to">The reference frame to covert the velocity to.</param>
<returns>The corresponding velocity, as a vector, in reference frame
<paramref name="to" />.</returns>
</doc>...
.RaycastDistance..
.position....."..."...".....
	direction....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....*..<doc>
<summary>
Cast a ray from a given position in a given direction, and return the distance to the hit point.
If no hit occurs, returns infinity.
</summary>
<param name="position">Position, as a vector, of the origin of the ray.</param>
<param name="direction">Direction of the ray, as a unit vector.</param>
<param name="referenceFrame">The reference frame that the position and direction are in.</param>
<returns>The distance to the hit, in meters, or infinity if there was no hit.</returns>
</doc>...
.RaycastPart..
.position....."..."...".....
	direction....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame...d..SpaceCenter..Part .*..<doc>
<summary>
Cast a ray from a given position in a given direction, and return the part that it hits.
If no hit occurs, returns <c>null</c>.
</summary>
<param name="position">Position, as a vector, of the origin of the ray.</param>
<param name="direction">Direction of the ray, as a unit vector.</param>
<param name="referenceFrame">The reference frame that the position and direction are in.</param>
<returns>The part that was hit or <c>null</c> if there was no hit.</returns>
</doc>.m
.get_GameMode...e..SpaceCenter..GameMode*B<doc>
<summary>
The current mode the game is in.
</summary>
</doc>.S
.get_Science....*@<doc>
<summary>
The current amount of science.
</summary>
</doc>.O
	get_Funds....*><doc>
<summary>
The current amount of funds.
</summary>
</doc>.Y
.get_Reputation....*C<doc>
<summary>
The current amount of reputation.
</summary>
</doc>.k
.get_ActiveVessel...d..SpaceCenter..Vessel*><doc>
<summary>
The currently active vessel.
</summary>
</doc>.t
.set_ActiveVessel. 
.value...d..SpaceCenter..Vessel*><doc>
<summary>
The currently active vessel.
</summary>
</doc>.u
.get_Vessels....."..d..SpaceCenter..Vessel*H<doc>
<summary>
A list of all the vessels in the game.
</summary>
</doc>...

get_Bodies.'..."..."..d..SpaceCenter.
CelestialBody*..<doc>
<summary>
A dictionary of all celestial bodies (planets, moons, etc.) in the game,
keyed by the name of the body.
</summary>
</doc>.|
.get_TargetBody...d..SpaceCenter.
CelestialBody .*H<doc>
<summary>
The currently targeted celestial body.
</summary>
</doc>...
.set_TargetBody.'
.value...d..SpaceCenter.
CelestialBody*H<doc>
<summary>
The currently targeted celestial body.
</summary>
</doc>.o
.get_TargetVessel...d..SpaceCenter..Vessel .*@<doc>
<summary>
The currently targeted vessel.
</summary>
</doc>.v
.set_TargetVessel. 
.value...d..SpaceCenter..Vessel*@<doc>
<summary>
The currently targeted vessel.
</summary>
</doc>..
.get_TargetDockingPort...d..SpaceCenter..DockingPort .*F<doc>
<summary>
The currently targeted docking port.
</summary>
</doc>...
.set_TargetDockingPort.%
.value...d..SpaceCenter..DockingPort*F<doc>
<summary>
The currently targeted docking port.
</summary>
</doc>.p
.get_WaypointManager. .d..SpaceCenter..WaypointManager*7<doc>
<summary>
The waypoint manager.
</summary>
</doc>.p
.get_ContractManager. .d..SpaceCenter..ContractManager*7<doc>
<summary>
The contract manager.
</summary>
</doc>.z

get_Camera...d..SpaceCenter..Camera*S<doc>
<summary>
An object that can be used to control the camera.
</summary>
</doc>.Q

get_UIVisible....*<<doc>
<summary>
Whether the UI is visible.
</summary>
</doc>.Z

set_UIVisible..
.value....*<<doc>
<summary>
Whether the UI is visible.
</summary>
</doc>.T
.get_Navball....*A<doc>
<summary>
Whether the navball is visible.
</summary>
</doc>.]
.set_Navball..
.value....*A<doc>
<summary>
Whether the navball is visible.
</summary>
</doc>.V
.get_UT....*H<doc>
<summary>
The current universal time in seconds.
</summary>
</doc>...
.get_G....*..<doc>
<summary>
The value of the <a href="https://en.wikipedia.org/wiki/Gravitational_constant">
gravitational constant</a> G in <math>N(m/kg)^2</math>.
</summary>
</doc>...
.get_WarpMode...e..SpaceCenter..WarpMode*..<doc>
<summary>
The current time warp mode. Returns <see cref="M:SpaceCenter.WarpMode.None" /> if time
warp is not active, <see cref="M:SpaceCenter.WarpMode.Rails" /> if regular "on-rails" time warp
is active, or <see cref="M:SpaceCenter.WarpMode.Physics" /> if physical time warp is active.
</summary>
</doc>...
.get_WarpRate....*..<doc>
<summary>
The current warp rate. This is the rate at which time is passing for
either on-rails or physical time warp. For example, a value of 10 means
time is passing 10x faster than normal. Returns 1 if time warp is not
active.
</summary>
</doc>...
.get_WarpFactor....*..<doc>
<summary>
The current warp factor. This is the index of the rate at which time
is passing for either regular "on-rails" or physical time warp. Returns 0
if time warp is not active. When in on-rails time warp, this is equal to
<see cref="M:SpaceCenter.RailsWarpFactor" />, and in physics time warp, this is equal to
<see cref="M:SpaceCenter.PhysicsWarpFactor" />.
</summary>
</doc>...
.get_RailsWarpFactor....*..<doc>
<summary>
The time warp rate, using regular "on-rails" time warp. A value between
0 and 7 inclusive. 0 means no time warp. Returns 0 if physical time warp
is active.

If requested time warp factor cannot be set, it will be set to the next
lowest possible value. For example, if the vessel is too close to a
planet. See <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">
the KSP wiki</a> for details.
</summary>
</doc>...
.set_RailsWarpFactor..
.value....*..<doc>
<summary>
The time warp rate, using regular "on-rails" time warp. A value between
0 and 7 inclusive. 0 means no time warp. Returns 0 if physical time warp
is active.

If requested time warp factor cannot be set, it will be set to the next
lowest possible value. For example, if the vessel is too close to a
planet. See <a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">
the KSP wiki</a> for details.
</summary>
</doc>...
.get_PhysicsWarpFactor....*..<doc>
<summary>
The physical time warp rate. A value between 0 and 3 inclusive. 0 means
no time warp. Returns 0 if regular "on-rails" time warp is active.
</summary>
</doc>...
.set_PhysicsWarpFactor..
.value....*..<doc>
<summary>
The physical time warp rate. A value between 0 and 3 inclusive. 0 means
no time warp. Returns 0 if regular "on-rails" time warp is active.
</summary>
</doc>...
.get_MaximumRailsWarpFactor....*..<doc>
<summary>
The current maximum regular "on-rails" warp factor that can be set.
A value between 0 and 7 inclusive. See
<a href="https://wiki.kerbalspaceprogram.com/wiki/Time_warp">the KSP wiki</a>
for details.
</summary>
</doc>...
.get_FARAvailable....*..<doc>
<summary>
Whether <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a> is installed.
</summary>
</doc>.p
.AutoPilot_Engage."
.this...d..SpaceCenter.	AutoPilot*8<doc>
<summary>
Engage the auto-pilot.
</summary>
</doc>.v
.AutoPilot_Disengage."
.this...d..SpaceCenter.	AutoPilot*;<doc>
<summary>
Disengage the auto-pilot.
</summary>
</doc>...
.AutoPilot_Wait."
.this...d..SpaceCenter.	AutoPilot*..<doc>
<summary>
Blocks until the vessel is pointing in the target direction and has
the target roll (if set). Throws an exception if the auto-pilot has not been engaged.
</summary>
</doc>...
.AutoPilot_TargetPitchAndHeading."
.this...d..SpaceCenter.	AutoPilot..
.pitch.....
.heading....*..<doc>
<summary>
Set target pitch and heading angles.
</summary>
<param name="pitch">Target pitch angle, in degrees between -90.. and +90...</param>
<param name="heading">Target heading angle, in degrees between 0.. and 360...</param>
</doc>...
.AutoPilot_get_Error."
.this...d..SpaceCenter.	AutoPilot....*..<doc>
<summary>
The error, in degrees, between the direction the ship has been asked
to point in and the direction it is pointing in. Throws an exception if the auto-pilot
has not been engaged and SAS is not enabled or is in stability assist mode.
</summary>
</doc>...
.AutoPilot_get_PitchError."
.this...d..SpaceCenter.	AutoPilot....*..<doc>
<summary>
The error, in degrees, between the vessels current and target pitch.
Throws an exception if the auto-pilot has not been engaged.
</summary>
</doc>...
.AutoPilot_get_HeadingError."
.this...d..SpaceCenter.	AutoPilot....*..<doc>
<summary>
The error, in degrees, between the vessels current and target heading.
Throws an exception if the auto-pilot has not been engaged.
</summary>
</doc>...
.AutoPilot_get_RollError."
.this...d..SpaceCenter.	AutoPilot....*..<doc>
<summary>
The error, in degrees, between the vessels current and target roll.
Throws an exception if the auto-pilot has not been engaged or no target roll is set.
</summary>
</doc>...
.AutoPilot_get_ReferenceFrame."
.this...d..SpaceCenter.	AutoPilot...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame for the target direction (<see cref="M:SpaceCenter.AutoPilot.TargetDirection" />).
</summary>
<remarks>
An error will be thrown if this property is set to a reference frame that rotates with
the vessel being controlled, as it is impossible to rotate the vessel in such a
reference frame.
</remarks>
</doc>...
.AutoPilot_set_ReferenceFrame."
.this...d..SpaceCenter.	AutoPilot.(
.value...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame for the target direction (<see cref="M:SpaceCenter.AutoPilot.TargetDirection" />).
</summary>
<remarks>
An error will be thrown if this property is set to a reference frame that rotates with
the vessel being controlled, as it is impossible to rotate the vessel in such a
reference frame.
</remarks>
</doc>...
.AutoPilot_get_TargetPitch."
.this...d..SpaceCenter.	AutoPilot....*X<doc>
<summary>
The target pitch, in degrees, between -90.. and +90...
</summary>
</doc>...
.AutoPilot_set_TargetPitch."
.this...d..SpaceCenter.	AutoPilot..
.value....*X<doc>
<summary>
The target pitch, in degrees, between -90.. and +90...
</summary>
</doc>...
.AutoPilot_get_TargetHeading."
.this...d..SpaceCenter.	AutoPilot....*X<doc>
<summary>
The target heading, in degrees, between 0.. and 360...
</summary>
</doc>...
.AutoPilot_set_TargetHeading."
.this...d..SpaceCenter.	AutoPilot..
.value....*X<doc>
<summary>
The target heading, in degrees, between 0.. and 360...
</summary>
</doc>...
.AutoPilot_get_TargetRoll."
.this...d..SpaceCenter.	AutoPilot....*c<doc>
<summary>
The target roll, in degrees. <c>NaN</c> if no target roll is set.
</summary>
</doc>...
.AutoPilot_set_TargetRoll."
.this...d..SpaceCenter.	AutoPilot..
.value....*c<doc>
<summary>
The target roll, in degrees. <c>NaN</c> if no target roll is set.
</summary>
</doc>...
.AutoPilot_get_TargetDirection."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
Direction vector corresponding to the target pitch and heading.
This is in the reference frame specified by <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
</doc>...
.AutoPilot_set_TargetDirection."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
Direction vector corresponding to the target pitch and heading.
This is in the reference frame specified by <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
</doc>...
.AutoPilot_get_SAS."
.this...d..SpaceCenter.	AutoPilot....*}<doc>
<summary>
The state of SAS.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.Control.SAS" /></remarks>
</doc>...
.AutoPilot_set_SAS."
.this...d..SpaceCenter.	AutoPilot..
.value....*}<doc>
<summary>
The state of SAS.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.Control.SAS" /></remarks>
</doc>...
.AutoPilot_get_SASMode."
.this...d..SpaceCenter.	AutoPilot...e..SpaceCenter..SASMode*..<doc>
<summary>
The current <see cref="T:SpaceCenter.SASMode" />.
These modes are equivalent to the mode buttons to the left of the navball that appear
when SAS is enabled.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.Control.SASMode" /></remarks>
</doc>...
.AutoPilot_set_SASMode."
.this...d..SpaceCenter.	AutoPilot.!
.value...e..SpaceCenter..SASMode*..<doc>
<summary>
The current <see cref="T:SpaceCenter.SASMode" />.
These modes are equivalent to the mode buttons to the left of the navball that appear
when SAS is enabled.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.Control.SASMode" /></remarks>
</doc>...
.AutoPilot_get_RollThreshold."
.this...d..SpaceCenter.	AutoPilot....*..<doc>
<summary>
The threshold at which the autopilot will try to match the target roll angle, if any.
Defaults to 5 degrees.
</summary>
</doc>...
.AutoPilot_set_RollThreshold."
.this...d..SpaceCenter.	AutoPilot..
.value....*..<doc>
<summary>
The threshold at which the autopilot will try to match the target roll angle, if any.
Defaults to 5 degrees.
</summary>
</doc>...
.AutoPilot_get_StoppingTime."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
The maximum amount of time that the vessel should need to come to a complete stop.
This determines the maximum angular velocity of the vessel.
A vector of three stopping times, in seconds, one for each of the pitch, roll
and yaw axes. Defaults to 0.5 seconds for each axis.
</summary>
</doc>...
.AutoPilot_set_StoppingTime."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
The maximum amount of time that the vessel should need to come to a complete stop.
This determines the maximum angular velocity of the vessel.
A vector of three stopping times, in seconds, one for each of the pitch, roll
and yaw axes. Defaults to 0.5 seconds for each axis.
</summary>
</doc>...
.AutoPilot_get_DecelerationTime."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
The time the vessel should take to come to a stop pointing in the target direction.
This determines the angular acceleration used to decelerate the vessel.
A vector of three times, in seconds, one for each of the pitch, roll and yaw axes.
Defaults to 5 seconds for each axis.
</summary>
</doc>...
.AutoPilot_set_DecelerationTime."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
The time the vessel should take to come to a stop pointing in the target direction.
This determines the angular acceleration used to decelerate the vessel.
A vector of three times, in seconds, one for each of the pitch, roll and yaw axes.
Defaults to 5 seconds for each axis.
</summary>
</doc>...
.AutoPilot_get_AttenuationAngle."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
The angle at which the autopilot considers the vessel to be pointing
close to the target.
This determines the midpoint of the target velocity attenuation function.
A vector of three angles, in degrees, one for each of the pitch, roll and yaw axes.
Defaults to 1.. for each axis.
</summary>
</doc>...
.AutoPilot_set_AttenuationAngle."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
The angle at which the autopilot considers the vessel to be pointing
close to the target.
This determines the midpoint of the target velocity attenuation function.
A vector of three angles, in degrees, one for each of the pitch, roll and yaw axes.
Defaults to 1.. for each axis.
</summary>
</doc>...
.AutoPilot_get_AutoTune."
.this...d..SpaceCenter.	AutoPilot....*..<doc>
<summary>
Whether the rotation rate controllers PID parameters should be automatically tuned
using the vessels moment of inertia and available torque. Defaults to <c>true</c>.
See <see cref="M:SpaceCenter.AutoPilot.TimeToPeak" /> and <see cref="M:SpaceCenter.AutoPilot.Overshoot" />.
</summary>
</doc>...
.AutoPilot_set_AutoTune."
.this...d..SpaceCenter.	AutoPilot..
.value....*..<doc>
<summary>
Whether the rotation rate controllers PID parameters should be automatically tuned
using the vessels moment of inertia and available torque. Defaults to <c>true</c>.
See <see cref="M:SpaceCenter.AutoPilot.TimeToPeak" /> and <see cref="M:SpaceCenter.AutoPilot.Overshoot" />.
</summary>
</doc>...
.AutoPilot_get_TimeToPeak."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
The target time to peak used to autotune the PID controllers.
A vector of three times, in seconds, for each of the pitch, roll and yaw axes.
Defaults to 3 seconds for each axis.
</summary>
</doc>...
.AutoPilot_set_TimeToPeak."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
The target time to peak used to autotune the PID controllers.
A vector of three times, in seconds, for each of the pitch, roll and yaw axes.
Defaults to 3 seconds for each axis.
</summary>
</doc>...
.AutoPilot_get_Overshoot."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
The target overshoot percentage used to autotune the PID controllers.
A vector of three values, between 0 and 1, for each of the pitch, roll and yaw axes.
Defaults to 0.01 for each axis.
</summary>
</doc>...
.AutoPilot_set_Overshoot."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
The target overshoot percentage used to autotune the PID controllers.
A vector of three values, between 0 and 1, for each of the pitch, roll and yaw axes.
Defaults to 0.01 for each axis.
</summary>
</doc>...
.AutoPilot_get_PitchPIDGains."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
Gains for the pitch PID controller.
</summary>
<remarks>
When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
which will overwrite any manual changes.
</remarks>
</doc>...
.AutoPilot_set_PitchPIDGains."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
Gains for the pitch PID controller.
</summary>
<remarks>
When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
which will overwrite any manual changes.
</remarks>
</doc>...
.AutoPilot_get_RollPIDGains."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
Gains for the roll PID controller.
</summary>
<remarks>
When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
which will overwrite any manual changes.
</remarks>
</doc>...
.AutoPilot_set_RollPIDGains."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
Gains for the roll PID controller.
</summary>
<remarks>
When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
which will overwrite any manual changes.
</remarks>
</doc>...
.AutoPilot_get_YawPIDGains."
.this...d..SpaceCenter.	AutoPilot....."..."..."...*..<doc>
<summary>
Gains for the yaw PID controller.
</summary>
<remarks>
When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
which will overwrite any manual changes.
</remarks>
</doc>...
.AutoPilot_set_YawPIDGains."
.this...d..SpaceCenter.	AutoPilot..
.value....."..."..."...*..<doc>
<summary>
Gains for the yaw PID controller.
</summary>
<remarks>
When <see cref="M:SpaceCenter.AutoPilot.AutoTune" /> is true, these values are updated automatically,
which will overwrite any manual changes.
</remarks>
</doc>...
.Camera_get_Mode..
.this...d..SpaceCenter..Camera...e..SpaceCenter.
CameraMode*A<doc>
<summary>
The current mode of the camera.
</summary>
</doc>...
.Camera_set_Mode..
.this...d..SpaceCenter..Camera.$
.value...e..SpaceCenter.
CameraMode*A<doc>
<summary>
The current mode of the camera.
</summary>
</doc>...
.Camera_get_Pitch..
.this...d..SpaceCenter..Camera....*..<doc>
<summary>
The pitch of the camera, in degrees.
A value between <see cref="M:SpaceCenter.Camera.MinPitch" /> and <see cref="M:SpaceCenter.Camera.MaxPitch" /></summary>
</doc>...
.Camera_set_Pitch..
.this...d..SpaceCenter..Camera..
.value....*..<doc>
<summary>
The pitch of the camera, in degrees.
A value between <see cref="M:SpaceCenter.Camera.MinPitch" /> and <see cref="M:SpaceCenter.Camera.MaxPitch" /></summary>
</doc>...
.Camera_get_Heading..
.this...d..SpaceCenter..Camera....*H<doc>
<summary>
The heading of the camera, in degrees.
</summary>
</doc>...
.Camera_set_Heading..
.this...d..SpaceCenter..Camera..
.value....*H<doc>
<summary>
The heading of the camera, in degrees.
</summary>
</doc>...
.Camera_get_Distance..
.this...d..SpaceCenter..Camera....*..<doc>
<summary>
The distance from the camera to the subject, in meters.
A value between <see cref="M:SpaceCenter.Camera.MinDistance" /> and <see cref="M:SpaceCenter.Camera.MaxDistance" />.
</summary>
</doc>...
.Camera_set_Distance..
.this...d..SpaceCenter..Camera..
.value....*..<doc>
<summary>
The distance from the camera to the subject, in meters.
A value between <see cref="M:SpaceCenter.Camera.MinDistance" /> and <see cref="M:SpaceCenter.Camera.MaxDistance" />.
</summary>
</doc>.~
.Camera_get_MinPitch..
.this...d..SpaceCenter..Camera....*B<doc>
<summary>
The minimum pitch of the camera.
</summary>
</doc>.~
.Camera_get_MaxPitch..
.this...d..SpaceCenter..Camera....*B<doc>
<summary>
The maximum pitch of the camera.
</summary>
</doc>...
.Camera_get_MinDistance..
.this...d..SpaceCenter..Camera....*]<doc>
<summary>
Minimum distance from the camera to the subject, in meters.
</summary>
</doc>...
.Camera_get_MaxDistance..
.this...d..SpaceCenter..Camera....*]<doc>
<summary>
Maximum distance from the camera to the subject, in meters.
</summary>
</doc>...
.Camera_get_DefaultDistance..
.this...d..SpaceCenter..Camera....*]<doc>
<summary>
Default distance from the camera to the subject, in meters.
</summary>
</doc>...
.Camera_get_FocussedBody..
.this...d..SpaceCenter..Camera...d..SpaceCenter.
CelestialBody .*..<doc>
<summary>
In map mode, the celestial body that the camera is focussed on.
Returns <c>null</c> if the camera is not focussed on a celestial body.
Returns an error is the camera is not in map mode.
</summary>
</doc>...
.Camera_set_FocussedBody..
.this...d..SpaceCenter..Camera.'
.value...d..SpaceCenter.
CelestialBody*..<doc>
<summary>
In map mode, the celestial body that the camera is focussed on.
Returns <c>null</c> if the camera is not focussed on a celestial body.
Returns an error is the camera is not in map mode.
</summary>
</doc>...
.Camera_get_FocussedVessel..
.this...d..SpaceCenter..Camera...d..SpaceCenter..Vessel .*..<doc>
<summary>
In map mode, the vessel that the camera is focussed on.
Returns <c>null</c> if the camera is not focussed on a vessel.
Returns an error is the camera is not in map mode.
</summary>
</doc>...
.Camera_set_FocussedVessel..
.this...d..SpaceCenter..Camera. 
.value...d..SpaceCenter..Vessel*..<doc>
<summary>
In map mode, the vessel that the camera is focussed on.
Returns <c>null</c> if the camera is not focussed on a vessel.
Returns an error is the camera is not in map mode.
</summary>
</doc>...
.Camera_get_FocussedNode..
.this...d..SpaceCenter..Camera...d..SpaceCenter..Node .*..<doc>
<summary>
In map mode, the maneuver node that the camera is focussed on.
Returns <c>null</c> if the camera is not focussed on a maneuver node.
Returns an error is the camera is not in map mode.
</summary>
</doc>...
.Camera_set_FocussedNode..
.this...d..SpaceCenter..Camera..
.value...d..SpaceCenter..Node*..<doc>
<summary>
In map mode, the maneuver node that the camera is focussed on.
Returns <c>null</c> if the camera is not focussed on a maneuver node.
Returns an error is the camera is not in map mode.
</summary>
</doc>...
.CelestialBody_SurfaceHeight.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude........*..<doc>
<summary>
The height of the surface relative to mean sea level, in meters,
at the given position. When over water this is equal to 0.
</summary>
<param name="latitude">Latitude in degrees.</param>
<param name="longitude">Longitude in degrees.</param>
</doc>...
.CelestialBody_BedrockHeight.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude........*..<doc>
<summary>
The height of the surface relative to mean sea level, in meters,
at the given position. When over water, this is the height
of the sea-bed and is therefore  negative value.
</summary>
<param name="latitude">Latitude in degrees.</param>
<param name="longitude">Longitude in degrees.</param>
</doc>...
.CelestialBody_MSLPosition.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude.....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position at mean sea level at the given latitude and longitude,
in the given reference frame.
</summary>
<returns>Position as a vector.</returns>
<param name="latitude">Latitude in degrees.</param>
<param name="longitude">Longitude in degrees.</param>
<param name="referenceFrame">Reference frame for the returned position vector.</param>
</doc>...
.CelestialBody_SurfacePosition.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude.....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the surface at the given latitude and longitude, in the given
reference frame. When over water, this is the position of the surface of the water.
</summary>
<returns>Position as a vector.</returns>
<param name="latitude">Latitude in degrees.</param>
<param name="longitude">Longitude in degrees.</param>
<param name="referenceFrame">Reference frame for the returned position vector.</param>
</doc>...
.CelestialBody_BedrockPosition.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude.....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the surface at the given latitude and longitude, in the given
reference frame. When over water, this is the position at the bottom of the sea-bed.
</summary>
<returns>Position as a vector.</returns>
<param name="latitude">Latitude in degrees.</param>
<param name="longitude">Longitude in degrees.</param>
<param name="referenceFrame">Reference frame for the returned position vector.</param>
</doc>...
 CelestialBody_PositionAtAltitude.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude......
.altitude.....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position at the given latitude, longitude and altitude, in the given reference frame.
</summary>
<returns>Position as a vector.</returns>
<param name="latitude">Latitude in degrees.</param>
<param name="longitude">Longitude in degrees.</param>
<param name="altitude">Altitude in meters above sea level.</param>
<param name="referenceFrame">Reference frame for the returned position vector.</param>
</doc>...
 CelestialBody_LatitudeAtPosition.&
.this...d..SpaceCenter.
CelestialBody..
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....*..<doc>
<summary>
The latitude of the given position, in the given reference frame.
</summary>
<param name="position">Position as a vector.</param>
<param name="referenceFrame">Reference frame for the position vector.</param>
</doc>...
!CelestialBody_LongitudeAtPosition.&
.this...d..SpaceCenter.
CelestialBody..
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....*..<doc>
<summary>
The longitude of the given position, in the given reference frame.
</summary>
<param name="position">Position as a vector.</param>
<param name="referenceFrame">Reference frame for the position vector.</param>
</doc>...
 CelestialBody_AltitudeAtPosition.&
.this...d..SpaceCenter.
CelestialBody..
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....*..<doc>
<summary>
The altitude, in meters, of the given position in the given reference frame.
</summary>
<param name="position">Position as a vector.</param>
<param name="referenceFrame">Reference frame for the position vector.</param>
</doc>...
*CelestialBody_AtmosphericDensityAtPosition.&
.this...d..SpaceCenter.
CelestialBody..
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....*..<doc>
<summary>
The atmospheric density at the given position, in <math>kg/m^3</math>,
in the given reference frame.
</summary>
<param name="position">The position vector at which to measure the density.</param>
<param name="referenceFrame">Reference frame that the position vector is in.</param>
</doc>...
.CelestialBody_TemperatureAt.&
.this...d..SpaceCenter.
CelestialBody..
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....*..<doc>
<summary>
The temperature on the body at the given position, in the given reference frame.
</summary>
<param name="position">Position as a vector.</param>
<param name="referenceFrame">The reference frame that the position is in.</param>
<remarks>
This calculation is performed using the bodies current position, which means that
the value could be wrong if you want to know the temperature in the far future.
</remarks>
</doc>...
.CelestialBody_DensityAt.&
.this...d..SpaceCenter.
CelestialBody..
.altitude........*..<doc>
<summary>
Gets the air density, in <math>kg/m^3</math>, for the specified
altitude above sea level, in meters.
</summary>
<remarks>
This is an approximation, because actual calculations, taking sun exposure into account
to compute air temperature, require us to know the exact point on the body where the
density is to be computed (knowing the altitude is not enough).
However, the difference is small for high altitudes, so it makes very little difference
for trajectory prediction.
</remarks>
</doc>...
.CelestialBody_PressureAt.&
.this...d..SpaceCenter.
CelestialBody..
.altitude........*{<doc>
<summary>
Gets the air pressure, in Pascals, for the specified
altitude above sea level, in meters.
</summary>
</doc>...
.CelestialBody_BiomeAt.&
.this...d..SpaceCenter.
CelestialBody..
.latitude......
	longitude........*\<doc>
<summary>
The biome at the given latitude and longitude, in degrees.
</summary>
</doc>...
.CelestialBody_Position.&
.this...d..SpaceCenter.
CelestialBody.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the center of the body, in the specified reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.CelestialBody_Velocity.&
.this...d..SpaceCenter.
CelestialBody.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The linear velocity of the body, in the specified reference frame.
</summary>
<returns>The velocity as a vector. The vector points in the direction of travel,
and its magnitude is the speed of the body in meters per second.</returns>
<param name="referenceFrame">The reference frame that the returned
velocity vector is in.</param>
</doc>...
.CelestialBody_Rotation.&
.this...d..SpaceCenter.
CelestialBody.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."..."...*..<doc>
<summary>
The rotation of the body, in the specified reference frame.
</summary>
<returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
<param name="referenceFrame">The reference frame that the returned
rotation is in.</param>
</doc>...
.CelestialBody_Direction.&
.this...d..SpaceCenter.
CelestialBody.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction in which the north pole of the celestial body is pointing,
in the specified reference frame.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.CelestialBody_AngularVelocity.&
.this...d..SpaceCenter.
CelestialBody.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The angular velocity of the body in the specified reference frame.
</summary>
<returns>The angular velocity as a vector. The magnitude of the vector is the rotational
speed of the body, in radians per second. The direction of the vector indicates the axis
of rotation, using the right-hand rule.</returns>
<param name="referenceFrame">The reference frame the returned
angular velocity is in.</param>
</doc>.}
.CelestialBody_get_Name.&
.this...d..SpaceCenter.
CelestialBody....*7<doc>
<summary>
The name of the body.
</summary>
</doc>...
.CelestialBody_get_Satellites.&
.this...d..SpaceCenter.
CelestialBody.#..."..d..SpaceCenter.
CelestialBody*j<doc>
<summary>
A list of celestial bodies that are in orbit around this celestial body.
</summary>
</doc>...
.CelestialBody_get_Mass.&
.this...d..SpaceCenter.
CelestialBody....*E<doc>
<summary>
The mass of the body, in kilograms.
</summary>
</doc>...
(CelestialBody_get_GravitationalParameter.&
.this...d..SpaceCenter.
CelestialBody....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Standard_gravitational_parameter">standard
gravitational parameter</a> of the body in <math>m^3s^{-2}</math>.
</summary>
</doc>...
 CelestialBody_get_SurfaceGravity.&
.this...d..SpaceCenter.
CelestialBody....*..<doc>
<summary>
The acceleration due to gravity at sea level (mean altitude) on the body,
in <math>m/s^2</math>.
</summary>
</doc>...
"CelestialBody_get_RotationalPeriod.&
.this...d..SpaceCenter.
CelestialBody....*Y<doc>
<summary>
The sidereal rotational period of the body, in seconds.
</summary>
</doc>...
!CelestialBody_get_RotationalSpeed.&
.this...d..SpaceCenter.
CelestialBody....*Z<doc>
<summary>
The rotational speed of the body, in radians per second.
</summary>
</doc>...
.CelestialBody_get_RotationAngle.&
.this...d..SpaceCenter.
CelestialBody....*|<doc>
<summary>
The current rotation angle of the body, in radians.
A value between 0 and <math>2\pi</math></summary>
</doc>...
!CelestialBody_get_InitialRotation.&
.this...d..SpaceCenter.
CelestialBody....*..<doc>
<summary>
The initial rotation angle of the body (at UT 0), in radians.
A value between 0 and <math>2\pi</math></summary>
</doc>...
"CelestialBody_get_EquatorialRadius.&
.this...d..SpaceCenter.
CelestialBody....*O<doc>
<summary>
The equatorial radius of the body, in meters.
</summary>
</doc>...
#CelestialBody_get_SphereOfInfluence.&
.this...d..SpaceCenter.
CelestialBody....*_<doc>
<summary>
The radius of the sphere of influence of the body, in meters.
</summary>
</doc>...
.CelestialBody_get_Orbit.&
.this...d..SpaceCenter.
CelestialBody...d..SpaceCenter..Orbit .*8<doc>
<summary>
The orbit of the body.
</summary>
</doc>...
.CelestialBody_get_HasAtmosphere.&
.this...d..SpaceCenter.
CelestialBody....*K<doc>
<summary><c>true</c> if the body has an atmosphere.
</summary>
</doc>...
!CelestialBody_get_AtmosphereDepth.&
.this...d..SpaceCenter.
CelestialBody....*I<doc>
<summary>
The depth of the atmosphere, in meters.
</summary>
</doc>...
&CelestialBody_get_HasAtmosphericOxygen.&
.this...d..SpaceCenter.
CelestialBody....*v<doc>
<summary><c>true</c> if there is oxygen in the atmosphere, required for air-breathing engines.
</summary>
</doc>...
.CelestialBody_get_Biomes.&
.this...d..SpaceCenter.
CelestialBody....."...*B<doc>
<summary>
The biomes present on this body.
</summary>
</doc>...
-CelestialBody_get_FlyingHighAltitudeThreshold.&
.this...d..SpaceCenter.
CelestialBody....*..<doc>
<summary>
The altitude, in meters, above which a vessel is considered to be
flying "high" when doing science.
</summary>
</doc>...
,CelestialBody_get_SpaceHighAltitudeThreshold.&
.this...d..SpaceCenter.
CelestialBody....*..<doc>
<summary>
The altitude, in meters, above which a vessel is considered to be
in "high" space when doing science.
</summary>
</doc>...
 CelestialBody_get_ReferenceFrame.&
.this...d..SpaceCenter.
CelestialBody...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to the celestial body.
<list type="bullet"><item><description>The origin is at the center of the body.
</description></item><item><description>The axes rotate with the body.</description></item><item><description>The x-axis points from the center of the body
towards the intersection of the prime meridian and equator (the
position at 0.. longitude, 0.. latitude).</description></item><item><description>The y-axis points from the center of the body
towards the north pole.</description></item><item><description>The z-axis points from the center of the body
towards the equator at 90..E longitude.</description></item></list></summary>
</doc>...
+CelestialBody_get_NonRotatingReferenceFrame.&
.this...d..SpaceCenter.
CelestialBody...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to this celestial body, and
orientated in a fixed direction (it does not rotate with the body).
<list type="bullet"><item><description>The origin is at the center of the body.</description></item><item><description>The axes do not rotate.</description></item><item><description>The x-axis points in an arbitrary direction through the
equator.</description></item><item><description>The y-axis points from the center of the body towards
the north pole.</description></item><item><description>The z-axis points in an arbitrary direction through the
equator.</description></item></list></summary>
</doc>...
'CelestialBody_get_OrbitalReferenceFrame.&
.this...d..SpaceCenter.
CelestialBody...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to this celestial body, but
orientated with the body's orbital prograde/normal/radial directions.
<list type="bullet"><item><description>The origin is at the center of the body.
</description></item><item><description>The axes rotate with the orbital prograde/normal/radial
directions.</description></item><item><description>The x-axis points in the orbital anti-radial direction.
</description></item><item><description>The y-axis points in the orbital prograde direction.
</description></item><item><description>The z-axis points in the orbital normal direction.
</description></item></list></summary>
</doc>...
.CommLink_get_Type.!
.this...d..SpaceCenter..CommLink...e..SpaceCenter..CommLinkType*3<doc>
<summary>
The type of link.
</summary>
</doc>...
.CommLink_get_SignalStrength.!
.this...d..SpaceCenter..CommLink....*><doc>
<summary>
Signal strength of the link.
</summary>
</doc>...
.CommLink_get_Start.!
.this...d..SpaceCenter..CommLink...d..SpaceCenter..CommNode*:<doc>
<summary>
Start point of the link.
</summary>
</doc>...
.CommLink_get_End.!
.this...d..SpaceCenter..CommLink...d..SpaceCenter..CommNode*:<doc>
<summary>
Start point of the link.
</summary>
</doc>.}
.CommNode_get_Name.!
.this...d..SpaceCenter..CommNode....*A<doc>
<summary>
Name of the communication node.
</summary>
</doc>...
.CommNode_get_IsHome.!
.this...d..SpaceCenter..CommNode....*N<doc>
<summary>
Whether the communication node is on Kerbin.
</summary>
</doc>...
.CommNode_get_IsControlPoint.!
.this...d..SpaceCenter..CommNode....*q<doc>
<summary>
Whether the communication node is a control point, for example a manned vessel.
</summary>
</doc>...
.CommNode_get_IsVessel.!
.this...d..SpaceCenter..CommNode....*M<doc>
<summary>
Whether the communication node is a vessel.
</summary>
</doc>...
.CommNode_get_Vessel.!
.this...d..SpaceCenter..CommNode...d..SpaceCenter..Vessel*I<doc>
<summary>
The vessel for this communication node.
</summary>
</doc>...
.Comms_get_CanCommunicate..
.this...d..SpaceCenter..Comms....*N<doc>
<summary>
Whether the vessel can communicate with KSC.
</summary>
</doc>...
.Comms_get_CanTransmitScience..
.this...d..SpaceCenter..Comms....*V<doc>
<summary>
Whether the vessel can transmit science data to KSC.
</summary>
</doc>.y
.Comms_get_SignalStrength..
.this...d..SpaceCenter..Comms....*9<doc>
<summary>
Signal strength to KSC.
</summary>
</doc>.~
.Comms_get_SignalDelay..
.this...d..SpaceCenter..Comms....*A<doc>
<summary>
Signal delay to KSC in seconds.
</summary>
</doc>...
.Comms_get_Power..
.this...d..SpaceCenter..Comms....*Z<doc>
<summary>
The combined power of all active antennae on the vessel.
</summary>
</doc>...
.Comms_get_ControlPath..
.this...d..SpaceCenter..Comms....."..d..SpaceCenter..CommLink*T<doc>
<summary>
The communication path used to control the vessel.
</summary>
</doc>.r
.Contract_Cancel.!
.this...d..SpaceCenter..Contract*<<doc>
<summary>
Cancel an active contract.
</summary>
</doc>.s
.Contract_Accept.!
.this...d..SpaceCenter..Contract*=<doc>
<summary>
Accept an offered contract.
</summary>
</doc>.u
.Contract_Decline.!
.this...d..SpaceCenter..Contract*><doc>
<summary>
Decline an offered contract.
</summary>
</doc>.s
.Contract_get_Type.!
.this...d..SpaceCenter..Contract....*7<doc>
<summary>
Type of the contract.
</summary>
</doc>.u
.Contract_get_Title.!
.this...d..SpaceCenter..Contract....*8<doc>
<summary>
Title of the contract.
</summary>
</doc>...
.Contract_get_Description.!
.this...d..SpaceCenter..Contract....*><doc>
<summary>
Description of the contract.
</summary>
</doc>.v
.Contract_get_Notes.!
.this...d..SpaceCenter..Contract....*9<doc>
<summary>
Notes for the contract.
</summary>
</doc>.|
.Contract_get_Synopsis.!
.this...d..SpaceCenter..Contract....*<<doc>
<summary>
Synopsis for the contract.
</summary>
</doc>...
.Contract_get_Keywords.!
.this...d..SpaceCenter..Contract....."...*<<doc>
<summary>
Keywords for the contract.
</summary>
</doc>...
.Contract_get_State.!
.this...d..SpaceCenter..Contract...e..SpaceCenter.
ContractState*8<doc>
<summary>
State of the contract.
</summary>
</doc>..
.Contract_get_Active.!
.this...d..SpaceCenter..Contract....*A<doc>
<summary>
Whether the contract is active.
</summary>
</doc>...
.Contract_get_Failed.!
.this...d..SpaceCenter..Contract....*G<doc>
<summary>
Whether the contract has been failed.
</summary>
</doc>...
.Contract_get_Seen.!
.this...d..SpaceCenter..Contract....*E<doc>
<summary>
Whether the contract has been seen.
</summary>
</doc>...
.Contract_get_Read.!
.this...d..SpaceCenter..Contract....*E<doc>
<summary>
Whether the contract has been read.
</summary>
</doc>...
.Contract_get_CanBeCanceled.!
.this...d..SpaceCenter..Contract....*G<doc>
<summary>
Whether the contract can be canceled.
</summary>
</doc>...
.Contract_get_CanBeDeclined.!
.this...d..SpaceCenter..Contract....*G<doc>
<summary>
Whether the contract can be declined.
</summary>
</doc>...
.Contract_get_CanBeFailed.!
.this...d..SpaceCenter..Contract....*E<doc>
<summary>
Whether the contract can be failed.
</summary>
</doc>...
.Contract_get_FundsAdvance.!
.this...d..SpaceCenter..Contract....*M<doc>
<summary>
Funds received when accepting the contract.
</summary>
</doc>...
.Contract_get_FundsCompletion.!
.this...d..SpaceCenter..Contract....*O<doc>
<summary>
Funds received on completion of the contract.
</summary>
</doc>...
.Contract_get_FundsFailure.!
.this...d..SpaceCenter..Contract....*G<doc>
<summary>
Funds lost if the contract is failed.
</summary>
</doc>...
!Contract_get_ReputationCompletion.!
.this...d..SpaceCenter..Contract....*R<doc>
<summary>
Reputation gained on completion of the contract.
</summary>
</doc>...
.Contract_get_ReputationFailure.!
.this...d..SpaceCenter..Contract....*L<doc>
<summary>
Reputation lost if the contract is failed.
</summary>
</doc>...
.Contract_get_ScienceCompletion.!
.this...d..SpaceCenter..Contract....*O<doc>
<summary>
Science gained on completion of the contract.
</summary>
</doc>...
.Contract_get_Parameters.!
.this...d..SpaceCenter..Contract.'..."".d..SpaceCenter..ContractParameter*><doc>
<summary>
Parameters for the contract.
</summary>
</doc>...
.ContractManager_get_Types.(
.this. .d..SpaceCenter..ContractManager....."...*?<doc>
<summary>
A list of all contract types.
</summary>
</doc>...
 ContractManager_get_AllContracts.(
.this. .d..SpaceCenter..ContractManager....."..d..SpaceCenter..Contract*:<doc>
<summary>
A list of all contracts.
</summary>
</doc>...
#ContractManager_get_ActiveContracts.(
.this. .d..SpaceCenter..ContractManager....."..d..SpaceCenter..Contract*A<doc>
<summary>
A list of all active contracts.
</summary>
</doc>...
$ContractManager_get_OfferedContracts.(
.this. .d..SpaceCenter..ContractManager....."..d..SpaceCenter..Contract*S<doc>
<summary>
A list of all offered, but unaccepted, contracts.
</summary>
</doc>...
&ContractManager_get_CompletedContracts.(
.this. .d..SpaceCenter..ContractManager....."..d..SpaceCenter..Contract*D<doc>
<summary>
A list of all completed contracts.
</summary>
</doc>...
#ContractManager_get_FailedContracts.(
.this. .d..SpaceCenter..ContractManager....."..d..SpaceCenter..Contract*A<doc>
<summary>
A list of all failed contracts.
</summary>
</doc>...
.ContractParameter_get_Title.*
.this.".d..SpaceCenter..ContractParameter....*9<doc>
<summary>
Title of the parameter.
</summary>
</doc>...
.ContractParameter_get_Notes.*
.this.".d..SpaceCenter..ContractParameter....*:<doc>
<summary>
Notes for the parameter.
</summary>
</doc>...
.ContractParameter_get_Children.*
.this.".d..SpaceCenter..ContractParameter.'..."".d..SpaceCenter..ContractParameter*<<doc>
<summary>
Child contract parameters.
</summary>
</doc>...
.ContractParameter_get_Completed.*
.this.".d..SpaceCenter..ContractParameter....*K<doc>
<summary>
Whether the parameter has been completed.
</summary>
</doc>...
.ContractParameter_get_Failed.*
.this.".d..SpaceCenter..ContractParameter....*H<doc>
<summary>
Whether the parameter has been failed.
</summary>
</doc>...
.ContractParameter_get_Optional.*
.this.".d..SpaceCenter..ContractParameter....*M<doc>
<summary>
Whether the contract parameter is optional.
</summary>
</doc>...
%ContractParameter_get_FundsCompletion.*
.this.".d..SpaceCenter..ContractParameter....*Y<doc>
<summary>
Funds received on completion of the contract parameter.
</summary>
</doc>...
"ContractParameter_get_FundsFailure.*
.this.".d..SpaceCenter..ContractParameter....*Q<doc>
<summary>
Funds lost if the contract parameter is failed.
</summary>
</doc>...
*ContractParameter_get_ReputationCompletion.*
.this.".d..SpaceCenter..ContractParameter....*\<doc>
<summary>
Reputation gained on completion of the contract parameter.
</summary>
</doc>...
'ContractParameter_get_ReputationFailure.*
.this.".d..SpaceCenter..ContractParameter....*V<doc>
<summary>
Reputation lost if the contract parameter is failed.
</summary>
</doc>...
'ContractParameter_get_ScienceCompletion.*
.this.".d..SpaceCenter..ContractParameter....*Y<doc>
<summary>
Science gained on completion of the contract parameter.
</summary>
</doc>...
.Control_ActivateNextStage. 
.this...d..SpaceCenter..Control....."..d..SpaceCenter..Vessel*..<doc>
<summary>
Activates the next stage. Equivalent to pressing the space bar in-game.
</summary>
<returns>A list of vessel objects that are jettisoned from the active vessel.</returns>
<remarks>
When called, the active vessel may change. It is therefore possible that,
after calling this function, the object(s) returned by previous call(s) to
<see cref="M:SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
Throws an exception if staging is locked.
</remarks>
</doc>...
.Control_GetActionGroup. 
.this...d..SpaceCenter..Control..
.group........*..<doc>
<summary>
Returns <c>true</c> if the given action group is enabled.
</summary>
<param name="group">
A number between 0 and 9 inclusive,
or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
</param>
</doc>...
.Control_SetActionGroup. 
.this...d..SpaceCenter..Control..
.group......
.state....*..<doc>
<summary>
Sets the state of the given action group.
</summary>
<param name="group">
A number between 0 and 9 inclusive,
or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
</param>
<param name="state"></param>
</doc>...
.Control_ToggleActionGroup. 
.this...d..SpaceCenter..Control..
.group....*..<doc>
<summary>
Toggles the state of the given action group.
</summary>
<param name="group">
A number between 0 and 9 inclusive,
or between 0 and 250 inclusive when the <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/67235-122dec1016-action-groups-extended-250-action-groups-in-flight-editing-now-kosremotetech/">Extended Action Groups mod</a> is installed.
</param>
</doc>...
.Control_AddNode. 
.this...d..SpaceCenter..Control..
.ut......
.prograde............
.normal............
.radial.............d..SpaceCenter..Node*..<doc>
<summary>
Creates a maneuver node at the given universal time, and returns a
<see cref="T:SpaceCenter.Node" /> object that can be used to modify it.
Optionally sets the magnitude of the delta-v for the maneuver node
in the prograde, normal and radial directions.
</summary>
<param name="ut">Universal time of the maneuver node.</param>
<param name="prograde">Delta-v in the prograde direction.</param>
<param name="normal">Delta-v in the normal direction.</param>
<param name="radial">Delta-v in the radial direction.</param>
</doc>.u
.Control_RemoveNodes. 
.this...d..SpaceCenter..Control*<<doc>
<summary>
Remove all maneuver nodes.
</summary>
</doc>...
.Control_get_State. 
.this...d..SpaceCenter..Control...e..SpaceCenter..ControlState*B<doc>
<summary>
The control state of the vessel.
</summary>
</doc>...
.Control_get_Source. 
.this...d..SpaceCenter..Control...e..SpaceCenter.
ControlSource*m<doc>
<summary>
The source of the vessels control, for example by a kerbal or a probe core.
</summary>
</doc>...
.Control_get_SAS. 
.this...d..SpaceCenter..Control....*.<doc>
<summary>
The state of SAS.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.AutoPilot.SAS" /></remarks>
</doc>...
.Control_set_SAS. 
.this...d..SpaceCenter..Control..
.value....*.<doc>
<summary>
The state of SAS.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.AutoPilot.SAS" /></remarks>
</doc>...
.Control_get_SASMode. 
.this...d..SpaceCenter..Control...e..SpaceCenter..SASMode*..<doc>
<summary>
The current <see cref="T:SpaceCenter.SASMode" />.
These modes are equivalent to the mode buttons to
the left of the navball that appear when SAS is enabled.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.AutoPilot.SASMode" /></remarks>
</doc>...
.Control_set_SASMode. 
.this...d..SpaceCenter..Control.!
.value...e..SpaceCenter..SASMode*..<doc>
<summary>
The current <see cref="T:SpaceCenter.SASMode" />.
These modes are equivalent to the mode buttons to
the left of the navball that appear when SAS is enabled.
</summary>
<remarks>Equivalent to <see cref="M:SpaceCenter.AutoPilot.SASMode" /></remarks>
</doc>...
.Control_get_SpeedMode. 
.this...d..SpaceCenter..Control...e..SpaceCenter.	SpeedMode*..<doc>
<summary>
The current <see cref="T:SpaceCenter.SpeedMode" /> of the navball.
This is the mode displayed next to the speed at the top of the navball.
</summary>
</doc>...
.Control_set_SpeedMode. 
.this...d..SpaceCenter..Control.#
.value...e..SpaceCenter.	SpeedMode*..<doc>
<summary>
The current <see cref="T:SpaceCenter.SpeedMode" /> of the navball.
This is the mode displayed next to the speed at the top of the navball.
</summary>
</doc>.l
.Control_get_RCS. 
.this...d..SpaceCenter..Control....*3<doc>
<summary>
The state of RCS.
</summary>
</doc>.u
.Control_set_RCS. 
.this...d..SpaceCenter..Control..
.value....*3<doc>
<summary>
The state of RCS.
</summary>
</doc>...
.Control_get_ReactionWheels. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all reactive wheels on the vessel are active,
and sets the active state of all reaction wheels.
See <see cref="M:SpaceCenter.ReactionWheel.Active" />.
</summary>
</doc>...
.Control_set_ReactionWheels. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all reactive wheels on the vessel are active,
and sets the active state of all reaction wheels.
See <see cref="M:SpaceCenter.ReactionWheel.Active" />.
</summary>
</doc>..
.Control_get_Gear. 
.this...d..SpaceCenter..Control....*E<doc>
<summary>
The state of the landing gear/legs.
</summary>
</doc>...
.Control_set_Gear. 
.this...d..SpaceCenter..Control..
.value....*E<doc>
<summary>
The state of the landing gear/legs.
</summary>
</doc>...
.Control_get_Legs. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all landing legs on the vessel are deployed,
and sets the deployment state of all landing legs.
Does not include wheels (for example landing gear).
See <see cref="M:SpaceCenter.Leg.Deployed" />.
</summary>
</doc>...
.Control_set_Legs. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all landing legs on the vessel are deployed,
and sets the deployment state of all landing legs.
Does not include wheels (for example landing gear).
See <see cref="M:SpaceCenter.Leg.Deployed" />.
</summary>
</doc>...
.Control_get_Wheels. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all wheels on the vessel are deployed,
and sets the deployment state of all wheels.
Does not include landing legs.
See <see cref="M:SpaceCenter.Wheel.Deployed" />.
</summary>
</doc>...
.Control_set_Wheels. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all wheels on the vessel are deployed,
and sets the deployment state of all wheels.
Does not include landing legs.
See <see cref="M:SpaceCenter.Wheel.Deployed" />.
</summary>
</doc>.v
.Control_get_Lights. 
.this...d..SpaceCenter..Control....*:<doc>
<summary>
The state of the lights.
</summary>
</doc>..
.Control_set_Lights. 
.this...d..SpaceCenter..Control..
.value....*:<doc>
<summary>
The state of the lights.
</summary>
</doc>.|
.Control_get_Brakes. 
.this...d..SpaceCenter..Control....*@<doc>
<summary>
The state of the wheel brakes.
</summary>
</doc>...
.Control_set_Brakes. 
.this...d..SpaceCenter..Control..
.value....*@<doc>
<summary>
The state of the wheel brakes.
</summary>
</doc>...
.Control_get_Antennas. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all antennas on the vessel are deployed,
and sets the deployment state of all antennas.
See <see cref="M:SpaceCenter.Antenna.Deployed" />.
</summary>
</doc>...
.Control_set_Antennas. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all antennas on the vessel are deployed,
and sets the deployment state of all antennas.
See <see cref="M:SpaceCenter.Antenna.Deployed" />.
</summary>
</doc>...
.Control_get_CargoBays. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether any of the cargo bays on the vessel are open,
and sets the open state of all cargo bays.
See <see cref="M:SpaceCenter.CargoBay.Open" />.
</summary>
</doc>...
.Control_set_CargoBays. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether any of the cargo bays on the vessel are open,
and sets the open state of all cargo bays.
See <see cref="M:SpaceCenter.CargoBay.Open" />.
</summary>
</doc>...
.Control_get_Intakes. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all of the air intakes on the vessel are open,
and sets the open state of all air intakes.
See <see cref="M:SpaceCenter.Intake.Open" />.
</summary>
</doc>...
.Control_set_Intakes. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all of the air intakes on the vessel are open,
and sets the open state of all air intakes.
See <see cref="M:SpaceCenter.Intake.Open" />.
</summary>
</doc>...
.Control_get_Parachutes. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all parachutes on the vessel are deployed,
and sets the deployment state of all parachutes.
Cannot be set to <c>false</c>.
See <see cref="M:SpaceCenter.Parachute.Deployed" />.
</summary>
</doc>...
.Control_set_Parachutes. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all parachutes on the vessel are deployed,
and sets the deployment state of all parachutes.
Cannot be set to <c>false</c>.
See <see cref="M:SpaceCenter.Parachute.Deployed" />.
</summary>
</doc>...
.Control_get_Radiators. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all radiators on the vessel are deployed,
and sets the deployment state of all radiators.
See <see cref="M:SpaceCenter.Radiator.Deployed" />.
</summary>
</doc>...
.Control_set_Radiators. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all radiators on the vessel are deployed,
and sets the deployment state of all radiators.
See <see cref="M:SpaceCenter.Radiator.Deployed" />.
</summary>
</doc>...
.Control_get_ResourceHarvesters. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all of the resource harvesters on the vessel are deployed,
and sets the deployment state of all resource harvesters.
See <see cref="M:SpaceCenter.ResourceHarvester.Deployed" />.
</summary>
</doc>...
.Control_set_ResourceHarvesters. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all of the resource harvesters on the vessel are deployed,
and sets the deployment state of all resource harvesters.
See <see cref="M:SpaceCenter.ResourceHarvester.Deployed" />.
</summary>
</doc>...
$Control_get_ResourceHarvestersActive. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether any of the resource harvesters on the vessel are active,
and sets the active state of all resource harvesters.
See <see cref="M:SpaceCenter.ResourceHarvester.Active" />.
</summary>
</doc>...
$Control_set_ResourceHarvestersActive. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether any of the resource harvesters on the vessel are active,
and sets the active state of all resource harvesters.
See <see cref="M:SpaceCenter.ResourceHarvester.Active" />.
</summary>
</doc>...
.Control_get_SolarPanels. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Returns whether all solar panels on the vessel are deployed,
and sets the deployment state of all solar panels.
See <see cref="M:SpaceCenter.SolarPanel.Deployed" />.
</summary>
</doc>...
.Control_set_SolarPanels. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Returns whether all solar panels on the vessel are deployed,
and sets the deployment state of all solar panels.
See <see cref="M:SpaceCenter.SolarPanel.Deployed" />.
</summary>
</doc>...
.Control_get_Abort. 
.this...d..SpaceCenter..Control....*F<doc>
<summary>
The state of the abort action group.
</summary>
</doc>...
.Control_set_Abort. 
.this...d..SpaceCenter..Control..
.value....*F<doc>
<summary>
The state of the abort action group.
</summary>
</doc>...
.Control_get_Throttle. 
.this...d..SpaceCenter..Control....*U<doc>
<summary>
The state of the throttle. A value between 0 and 1.
</summary>
</doc>...
.Control_set_Throttle. 
.this...d..SpaceCenter..Control..
.value....*U<doc>
<summary>
The state of the throttle. A value between 0 and 1.
</summary>
</doc>...
.Control_get_InputMode. 
.this...d..SpaceCenter..Control.!.e..SpaceCenter..ControlInputMode*..<doc>
<summary>
Sets the behavior of the pitch, yaw, roll and translation control inputs.
When set to additive, these inputs are added to the vessels current inputs.
This mode is the default.
When set to override, these inputs (if non-zero) override the vessels inputs.
This mode prevents keyboard control, or SAS, from interfering with the controls when
they are set.
</summary>
</doc>...
.Control_set_InputMode. 
.this...d..SpaceCenter..Control.*
.value.!.e..SpaceCenter..ControlInputMode*..<doc>
<summary>
Sets the behavior of the pitch, yaw, roll and translation control inputs.
When set to additive, these inputs are added to the vessels current inputs.
This mode is the default.
When set to override, these inputs (if non-zero) override the vessels inputs.
This mode prevents keyboard control, or SAS, from interfering with the controls when
they are set.
</summary>
</doc>...
.Control_get_Pitch. 
.this...d..SpaceCenter..Control....*{<doc>
<summary>
The state of the pitch control.
A value between -1 and 1.
Equivalent to the w and s keys.
</summary>
</doc>...
.Control_set_Pitch. 
.this...d..SpaceCenter..Control..
.value....*{<doc>
<summary>
The state of the pitch control.
A value between -1 and 1.
Equivalent to the w and s keys.
</summary>
</doc>...
.Control_get_Yaw. 
.this...d..SpaceCenter..Control....*y<doc>
<summary>
The state of the yaw control.
A value between -1 and 1.
Equivalent to the a and d keys.
</summary>
</doc>...
.Control_set_Yaw. 
.this...d..SpaceCenter..Control..
.value....*y<doc>
<summary>
The state of the yaw control.
A value between -1 and 1.
Equivalent to the a and d keys.
</summary>
</doc>...
.Control_get_Roll. 
.this...d..SpaceCenter..Control....*z<doc>
<summary>
The state of the roll control.
A value between -1 and 1.
Equivalent to the q and e keys.
</summary>
</doc>...
.Control_set_Roll. 
.this...d..SpaceCenter..Control..
.value....*z<doc>
<summary>
The state of the roll control.
A value between -1 and 1.
Equivalent to the q and e keys.
</summary>
</doc>...
.Control_get_Forward. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
The state of the forward translational control.
A value between -1 and 1.
Equivalent to the h and n keys.
</summary>
</doc>...
.Control_set_Forward. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
The state of the forward translational control.
A value between -1 and 1.
Equivalent to the h and n keys.
</summary>
</doc>...
.Control_get_Up. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
The state of the up translational control.
A value between -1 and 1.
Equivalent to the i and k keys.
</summary>
</doc>...
.Control_set_Up. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
The state of the up translational control.
A value between -1 and 1.
Equivalent to the i and k keys.
</summary>
</doc>...
.Control_get_Right. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
The state of the right translational control.
A value between -1 and 1.
Equivalent to the j and l keys.
</summary>
</doc>...
.Control_set_Right. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
The state of the right translational control.
A value between -1 and 1.
Equivalent to the j and l keys.
</summary>
</doc>...
.Control_get_WheelThrottle. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
The state of the wheel throttle.
A value between -1 and 1.
A value of 1 rotates the wheels forwards, a value of -1 rotates
the wheels backwards.
</summary>
</doc>...
.Control_set_WheelThrottle. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
The state of the wheel throttle.
A value between -1 and 1.
A value of 1 rotates the wheels forwards, a value of -1 rotates
the wheels backwards.
</summary>
</doc>...
.Control_get_WheelSteering. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
The state of the wheel steering.
A value between -1 and 1.
A value of 1 steers to the left, and a value of -1 steers to the right.
</summary>
</doc>...
.Control_set_WheelSteering. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
The state of the wheel steering.
A value between -1 and 1.
A value of 1 steers to the left, and a value of -1 steers to the right.
</summary>
</doc>...
.Control_get_CurrentStage. 
.this...d..SpaceCenter..Control....*u<doc>
<summary>
The current stage of the vessel. Corresponds to the stage number in
the in-game UI.
</summary>
</doc>...
.Control_get_StageLock. 
.this...d..SpaceCenter..Control....*..<doc>
<summary>
Whether staging is locked on the vessel.
</summary>
<remarks>
This is equivalent to locking the staging using Alt+L
</remarks>
</doc>...
.Control_set_StageLock. 
.this...d..SpaceCenter..Control..
.value....*..<doc>
<summary>
Whether staging is locked on the vessel.
</summary>
<remarks>
This is equivalent to locking the staging using Alt+L
</remarks>
</doc>...
.Control_get_Nodes. 
.this...d..SpaceCenter..Control....."..d..SpaceCenter..Node*t<doc>
<summary>
Returns a list of all existing maneuver nodes, ordered by time from first to last.
</summary>
</doc>.x
.CrewMember_get_Name.#
.this...d..SpaceCenter.
CrewMember....*8<doc>
<summary>
The crew members name.
</summary>
</doc>...
.CrewMember_set_Name.#
.this...d..SpaceCenter.
CrewMember..
.value....*8<doc>
<summary>
The crew members name.
</summary>
</doc>...
.CrewMember_get_Type.#
.this...d..SpaceCenter.
CrewMember...e..SpaceCenter..CrewMemberType*:<doc>
<summary>
The type of crew member.
</summary>
</doc>...
.CrewMember_get_OnMission.#
.this...d..SpaceCenter.
CrewMember....*J<doc>
<summary>
Whether the crew member is on a mission.
</summary>
</doc>.~
.CrewMember_get_Courage.#
.this...d..SpaceCenter.
CrewMember....*;<doc>
<summary>
The crew members courage.
</summary>
</doc>...
.CrewMember_set_Courage.#
.this...d..SpaceCenter.
CrewMember..
.value....*;<doc>
<summary>
The crew members courage.
</summary>
</doc>...
.CrewMember_get_Stupidity.#
.this...d..SpaceCenter.
CrewMember....*=<doc>
<summary>
The crew members stupidity.
</summary>
</doc>...
.CrewMember_set_Stupidity.#
.this...d..SpaceCenter.
CrewMember..
.value....*=<doc>
<summary>
The crew members stupidity.
</summary>
</doc>...
.CrewMember_get_Experience.#
.this...d..SpaceCenter.
CrewMember....*><doc>
<summary>
The crew members experience.
</summary>
</doc>...
.CrewMember_set_Experience.#
.this...d..SpaceCenter.
CrewMember..
.value....*><doc>
<summary>
The crew members experience.
</summary>
</doc>...
.CrewMember_get_Badass.#
.this...d..SpaceCenter.
CrewMember....*F<doc>
<summary>
Whether the crew member is a badass.
</summary>
</doc>...
.CrewMember_set_Badass.#
.this...d..SpaceCenter.
CrewMember..
.value....*F<doc>
<summary>
Whether the crew member is a badass.
</summary>
</doc>...
.CrewMember_get_Veteran.#
.this...d..SpaceCenter.
CrewMember....*G<doc>
<summary>
Whether the crew member is a veteran.
</summary>
</doc>...
.CrewMember_set_Veteran.#
.this...d..SpaceCenter.
CrewMember..
.value....*G<doc>
<summary>
Whether the crew member is a veteran.
</summary>
</doc>...
!Flight_SimulateAerodynamicForceAt..
.this...d..SpaceCenter..Flight.&
.body...d..SpaceCenter.
CelestialBody..
.position....."..."...".....
.velocity....."..."..."........"..."..."...*..<doc>
<summary>
Simulate and return the total aerodynamic forces acting on the vessel,
if it where to be traveling with the given velocity at the given position in the
atmosphere of the given celestial body.
</summary>
<returns>A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</returns>
</doc>...
.Flight_get_GForce..
.this...d..SpaceCenter..Flight....*]<doc>
<summary>
The current G force acting on the vessel in <math>g</math>.
</summary>
</doc>...
.Flight_get_MeanAltitude..
.this...d..SpaceCenter..Flight....*z<doc>
<summary>
The altitude above sea level, in meters.
Measured from the center of mass of the vessel.
</summary>
</doc>...
.Flight_get_SurfaceAltitude..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The altitude above the surface of the body or sea level, whichever is closer, in meters.
Measured from the center of mass of the vessel.
</summary>
</doc>...
.Flight_get_BedrockAltitude..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The altitude above the surface of the body, in meters. When over water, this is the altitude above the sea floor.
Measured from the center of mass of the vessel.
</summary>
</doc>...
.Flight_get_Elevation..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The elevation of the terrain under the vessel, in meters. This is the height of the terrain above sea level,
and is negative when the vessel is over the sea.
</summary>
</doc>...
.Flight_get_Latitude..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Latitude">latitude</a> of the vessel for the body being orbited, in degrees.
</summary>
</doc>...
.Flight_get_Longitude..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Longitude">longitude</a> of the vessel for the body being orbited, in degrees.
</summary>
</doc>...
.Flight_get_Velocity..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The velocity of the vessel, in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The velocity as a vector. The vector points in the direction of travel,
and its magnitude is the speed of the vessel in meters per second.</returns>
</doc>...
.Flight_get_Speed..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The speed of the vessel in meters per second,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
</doc>...
.Flight_get_HorizontalSpeed..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The horizontal speed of the vessel in meters per second,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
</doc>...
.Flight_get_VerticalSpeed..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The vertical speed of the vessel in meters per second,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
</doc>...
.Flight_get_CenterOfMass..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The position of the center of mass of the vessel,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" /></summary>
<returns>The position as a vector.</returns>
</doc>...
.Flight_get_Rotation..
.this...d..SpaceCenter..Flight....."..."..."..."...*..<doc>
<summary>
The rotation of the vessel, in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" /></summary>
<returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
</doc>...
.Flight_get_Direction..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The direction that the vessel is pointing in,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_Pitch..
.this...d..SpaceCenter..Flight....*.<doc>
<summary>
The pitch of the vessel relative to the horizon, in degrees.
A value between -90.. and +90...
</summary>
</doc>...
.Flight_get_Heading..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The heading of the vessel (its angle relative to north), in degrees.
A value between 0.. and 360...
</summary>
</doc>...
.Flight_get_Roll..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The roll of the vessel relative to the horizon, in degrees.
A value between -180.. and +180...
</summary>
</doc>...
.Flight_get_Prograde..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The prograde direction of the vessels orbit,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_Retrograde..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The retrograde direction of the vessels orbit,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_Normal..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The direction normal to the vessels orbit,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_AntiNormal..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The direction opposite to the normal of the vessels orbit,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_Radial..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The radial direction of the vessels orbit,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_AntiRadial..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The direction opposite to the radial direction of the vessels orbit,
in the reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The direction as a unit vector.</returns>
</doc>...
.Flight_get_AtmosphereDensity..
.this...d..SpaceCenter..Flight....*r<doc>
<summary>
The current density of the atmosphere around the vessel, in <math>kg/m^3</math>.
</summary>
</doc>...
.Flight_get_DynamicPressure..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The dynamic pressure acting on the vessel, in Pascals. This is a measure of the
strength of the aerodynamic forces. It is equal to
<math>\frac{1}{2} . \mbox{air density} . \mbox{velocity}^2</math>.
It is commonly denoted <math>Q</math>.
</summary>
</doc>...
.Flight_get_StaticPressureAtMSL..
.this...d..SpaceCenter..Flight....*`<doc>
<summary>
The static atmospheric pressure at mean sea level, in Pascals.
</summary>
</doc>...
.Flight_get_StaticPressure..
.this...d..SpaceCenter..Flight....*c<doc>
<summary>
The static atmospheric pressure acting on the vessel, in Pascals.
</summary>
</doc>...
.Flight_get_AerodynamicForce..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The total aerodynamic forces acting on the vessel,
in reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</returns>
</doc>...
.Flight_get_Lift..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Aerodynamic_force">aerodynamic lift</a>
currently acting on the vessel.
</summary>
<returns>A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</returns>
</doc>...
.Flight_get_Drag..
.this...d..SpaceCenter..Flight....."..."..."...*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Aerodynamic_force">aerodynamic drag</a> currently acting on the vessel.
</summary>
<returns>A vector pointing in the direction of the force, with its magnitude
equal to the strength of the force in Newtons.</returns>
</doc>...
.Flight_get_SpeedOfSound..
.this...d..SpaceCenter..Flight....*o<doc>
<summary>
The speed of sound, in the atmosphere around the vessel, in <math>m/s</math>.
</summary>
</doc>...
.Flight_get_Mach..
.this...d..SpaceCenter..Flight....*^<doc>
<summary>
The speed of the vessel, in multiples of the speed of sound.
</summary>
</doc>...
.Flight_get_ReynoldsNumber..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The vessels Reynolds number.
</summary>
<remarks>
Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
</remarks>
</doc>...
.Flight_get_TrueAirSpeed..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/True_airspeed">true air speed</a>
of the vessel, in meters per second.
</summary>
</doc>...
.Flight_get_EquivalentAirSpeed..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Equivalent_airspeed">equivalent air speed</a>
of the vessel, in meters per second.
</summary>
</doc>...
.Flight_get_TerminalVelocity..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
An estimate of the current terminal velocity of the vessel, in meters per second.
This is the speed at which the drag forces cancel out the force of gravity.
</summary>
</doc>...
.Flight_get_AngleOfAttack..
.this...d..SpaceCenter..Flight....*|<doc>
<summary>
The pitch angle between the orientation of the vessel and its velocity vector,
in degrees.
</summary>
</doc>...
.Flight_get_SideslipAngle..
.this...d..SpaceCenter..Flight....*z<doc>
<summary>
The yaw angle between the orientation of the vessel and its velocity vector, in degrees.
</summary>
</doc>...
.Flight_get_TotalAirTemperature..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Total_air_temperature">total air temperature</a>
of the atmosphere around the vessel, in Kelvin.
This includes the <see cref="M:SpaceCenter.Flight.StaticAirTemperature" /> and the vessel's kinetic energy.
</summary>
</doc>...
.Flight_get_StaticAirTemperature..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Total_air_temperature">static (ambient)
temperature</a> of the atmosphere around the vessel, in Kelvin.
</summary>
</doc>...
.Flight_get_StallFraction..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The current amount of stall, between 0 and 1. A value greater than 0.005 indicates
a minor stall and a value greater than 0.5 indicates a large-scale stall.
</summary>
<remarks>
Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
</remarks>
</doc>...
.Flight_get_DragCoefficient..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The coefficient of drag. This is the amount of drag produced by the vessel.
It depends on air speed, air density and wing area.
</summary>
<remarks>
Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
</remarks>
</doc>...
.Flight_get_LiftCoefficient..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The coefficient of lift. This is the amount of lift produced by the vessel, and
depends on air speed, air density and wing area.
</summary>
<remarks>
Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
</remarks>
</doc>...
.Flight_get_BallisticCoefficient..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Ballistic_coefficient">ballistic coefficient</a>.
</summary>
<remarks>
Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
</remarks>
</doc>...
(Flight_get_ThrustSpecificFuelConsumption..
.this...d..SpaceCenter..Flight....*..<doc>
<summary>
The thrust specific fuel consumption for the jet engines on the vessel. This is a
measure of the efficiency of the engines, with a lower value indicating a more
efficient vessel. This value is the number of Newtons of fuel that are burned,
per hour, to produce one newton of thrust.
</summary>
<remarks>
Requires <a href="https://forum.kerbalspaceprogram.com/index.php?/topic/19321-130-ferram-aerospace-research-v0159-liebe-82117/">Ferram Aerospace Research</a>.
</remarks>
</doc>...
.Node_BurnVector..
.this...d..SpaceCenter..Node.4
.referenceFrame...d..SpaceCenter..ReferenceFrame........"..."..."...*..<doc>
<summary>
Returns the burn vector for the maneuver node.
</summary>
<param name="referenceFrame">The reference frame that the returned vector is in.
Defaults to <see cref="M:SpaceCenter.Vessel.OrbitalReferenceFrame" />.</param>
<returns>A vector whose direction is the direction of the maneuver node burn, and
magnitude is the delta-v of the burn in meters per second.
</returns>
<remarks>
Does not change when executing the maneuver node. See <see cref="M:SpaceCenter.Node.RemainingBurnVector" />.
</remarks>
</doc>...
.Node_RemainingBurnVector..
.this...d..SpaceCenter..Node.4
.referenceFrame...d..SpaceCenter..ReferenceFrame........"..."..."...*..<doc>
<summary>
Returns the remaining burn vector for the maneuver node.
</summary>
<param name="referenceFrame">The reference frame that the returned vector is in.
Defaults to <see cref="M:SpaceCenter.Vessel.OrbitalReferenceFrame" />.</param>
<returns>A vector whose direction is the direction of the maneuver node burn, and
magnitude is the delta-v of the burn in meters per second.
</returns>
<remarks>
Changes as the maneuver node is executed. See <see cref="M:SpaceCenter.Node.BurnVector" />.
</remarks>
</doc>.j
.Node_Remove..
.this...d..SpaceCenter..Node*<<doc>
<summary>
Removes the maneuver node.
</summary>
</doc>...

Node_Position..
.this...d..SpaceCenter..Node.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position vector of the maneuver node in the given reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.Node_Direction..
.this...d..SpaceCenter..Node.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction of the maneuver nodes burn.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.Node_get_Prograde..
.this...d..SpaceCenter..Node....*~<doc>
<summary>
The magnitude of the maneuver nodes delta-v in the prograde direction,
in meters per second.
</summary>
</doc>...
.Node_set_Prograde..
.this...d..SpaceCenter..Node..
.value....*~<doc>
<summary>
The magnitude of the maneuver nodes delta-v in the prograde direction,
in meters per second.
</summary>
</doc>...
.Node_get_Normal..
.this...d..SpaceCenter..Node....*|<doc>
<summary>
The magnitude of the maneuver nodes delta-v in the normal direction,
in meters per second.
</summary>
</doc>...
.Node_set_Normal..
.this...d..SpaceCenter..Node..
.value....*|<doc>
<summary>
The magnitude of the maneuver nodes delta-v in the normal direction,
in meters per second.
</summary>
</doc>...
.Node_get_Radial..
.this...d..SpaceCenter..Node....*|<doc>
<summary>
The magnitude of the maneuver nodes delta-v in the radial direction,
in meters per second.
</summary>
</doc>...
.Node_set_Radial..
.this...d..SpaceCenter..Node..
.value....*|<doc>
<summary>
The magnitude of the maneuver nodes delta-v in the radial direction,
in meters per second.
</summary>
</doc>...
.Node_get_DeltaV..
.this...d..SpaceCenter..Node....*..<doc>
<summary>
The delta-v of the maneuver node, in meters per second.
</summary>
<remarks>
Does not change when executing the maneuver node. See <see cref="M:SpaceCenter.Node.RemainingDeltaV" />.
</remarks>
</doc>...
.Node_set_DeltaV..
.this...d..SpaceCenter..Node..
.value....*..<doc>
<summary>
The delta-v of the maneuver node, in meters per second.
</summary>
<remarks>
Does not change when executing the maneuver node. See <see cref="M:SpaceCenter.Node.RemainingDeltaV" />.
</remarks>
</doc>...
.Node_get_RemainingDeltaV..
.this...d..SpaceCenter..Node....*..<doc>
<summary>
Gets the remaining delta-v of the maneuver node, in meters per second. Changes as the
node is executed. This is equivalent to the delta-v reported in-game.
</summary>
</doc>...
.Node_get_UT..
.this...d..SpaceCenter..Node....*b<doc>
<summary>
The universal time at which the maneuver will occur, in seconds.
</summary>
</doc>...
.Node_set_UT..
.this...d..SpaceCenter..Node..
.value....*b<doc>
<summary>
The universal time at which the maneuver will occur, in seconds.
</summary>
</doc>...
.Node_get_TimeTo..
.this...d..SpaceCenter..Node....*c<doc>
<summary>
The time until the maneuver node will be encountered, in seconds.
</summary>
</doc>...
.Node_get_Orbit..
.this...d..SpaceCenter..Node...d..SpaceCenter..Orbit*Z<doc>
<summary>
The orbit that results from executing the maneuver node.
</summary>
</doc>...
.Node_get_ReferenceFrame..
.this...d..SpaceCenter..Node...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to the maneuver node's burn.
<list type="bullet"><item><description>The origin is at the position of the maneuver node.</description></item><item><description>The y-axis points in the direction of the burn.</description></item><item><description>The x-axis and z-axis point in arbitrary but fixed directions.</description></item></list></summary>
</doc>...
.Node_get_OrbitalReferenceFrame..
.this...d..SpaceCenter..Node...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to the maneuver node, and
orientated with the orbital prograde/normal/radial directions of the
original orbit at the maneuver node's position.
<list type="bullet"><item><description>The origin is at the position of the maneuver node.</description></item><item><description>The x-axis points in the orbital anti-radial direction of the original
orbit, at the position of the maneuver node.</description></item><item><description>The y-axis points in the orbital prograde direction of the original
orbit, at the position of the maneuver node.</description></item><item><description>The z-axis points in the orbital normal direction of the original orbit,
at the position of the maneuver node.</description></item></list></summary>
</doc>...
!Orbit_static_ReferencePlaneNormal.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction that is normal to the orbits reference plane,
in the given reference frame.
The reference plane is the plane from which the orbits inclination is measured.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
$Orbit_static_ReferencePlaneDirection.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction from which the orbits longitude of ascending node is measured,
in the given reference frame.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.Orbit_MeanAnomalyAtUT..
.this...d..SpaceCenter..Orbit..
.ut........*}<doc>
<summary>
The mean anomaly at the given time.
</summary>
<param name="ut">The universal time in seconds.</param>
</doc>...
.Orbit_RadiusAtTrueAnomaly..
.this...d..SpaceCenter..Orbit..
.trueAnomaly........*..<doc>
<summary>
The orbital radius at the point in the orbit given by the true anomaly.
</summary>
<param name="trueAnomaly">The true anomaly.</param>
</doc>...
.Orbit_TrueAnomalyAtRadius..
.this...d..SpaceCenter..Orbit..
.radius........*..<doc>
<summary>
The true anomaly at the given orbital radius.
</summary>
<param name="radius">The orbital radius in meters.</param>
</doc>...
.Orbit_TrueAnomalyAtUT..
.this...d..SpaceCenter..Orbit..
.ut........*}<doc>
<summary>
The true anomaly at the given time.
</summary>
<param name="ut">The universal time in seconds.</param>
</doc>...
.Orbit_UTAtTrueAnomaly..
.this...d..SpaceCenter..Orbit..
.trueAnomaly........*..<doc>
<summary>
The universal time, in seconds, corresponding to the given true anomaly.
</summary>
<param name="trueAnomaly">True anomaly.</param>
</doc>...
.Orbit_EccentricAnomalyAtUT..
.this...d..SpaceCenter..Orbit..
.ut........*..<doc>
<summary>
The eccentric anomaly at the given universal time.
</summary>
<param name="ut">The universal time, in seconds.</param>
</doc>...
.Orbit_OrbitalSpeedAt..
.this...d..SpaceCenter..Orbit.

.time........*..<doc>
<summary>
The orbital speed at the given time, in meters per second.
</summary>
<param name="time">Time from now, in seconds.</param>
</doc>...
.Orbit_RadiusAt..
.this...d..SpaceCenter..Orbit..
.ut........*..<doc>
<summary>
The orbital radius at the given time, in meters.
</summary>
<param name="ut">The universal time to measure the radius at.</param>
</doc>...
.Orbit_PositionAt..
.this...d..SpaceCenter..Orbit..
.ut.....1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position at a given time, in the specified reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="ut">The universal time to measure the position at.</param>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.Orbit_TimeOfClosestApproach..
.this...d..SpaceCenter..Orbit. 
.target...d..SpaceCenter..Orbit....*..<doc>
<summary>
Estimates and returns the time at closest approach to a target orbit.
</summary>
<returns>The universal time at closest approach, in seconds.</returns>
<param name="target">Target orbit.</param>
</doc>...
.Orbit_DistanceAtClosestApproach..
.this...d..SpaceCenter..Orbit. 
.target...d..SpaceCenter..Orbit....*..<doc>
<summary>
Estimates and returns the distance at closest approach to a target orbit, in meters.
</summary>
<param name="target">Target orbit.</param>
</doc>...
.Orbit_ListClosestApproaches..
.this...d..SpaceCenter..Orbit. 
.target...d..SpaceCenter..Orbit..
.orbits........."...."...*..<doc>
<summary>
Returns the times at closest approach and corresponding distances, to a target orbit.
</summary>
<returns>
A list of two lists.
The first is a list of times at closest approach, as universal times in seconds.
The second is a list of corresponding distances at closest approach, in meters.
</returns>
<param name="target">Target orbit.</param>
<param name="orbits">The number of future orbits to search.</param>
</doc>...
.Orbit_TrueAnomalyAtAN..
.this...d..SpaceCenter..Orbit. 
.target...d..SpaceCenter..Orbit....*..<doc>
<summary>
The true anomaly of the ascending node with the given target orbit.
</summary>
<param name="target">Target orbit.</param>
</doc>...
.Orbit_TrueAnomalyAtDN..
.this...d..SpaceCenter..Orbit. 
.target...d..SpaceCenter..Orbit....*..<doc>
<summary>
The true anomaly of the descending node with the given target orbit.
</summary>
<param name="target">Target orbit.</param>
</doc>...
.Orbit_RelativeInclination..
.this...d..SpaceCenter..Orbit. 
.target...d..SpaceCenter..Orbit....*..<doc>
<summary>
Relative inclination of this orbit and the target orbit, in radians.
</summary>
<param name="target">Target orbit.</param>
</doc>...
.Orbit_get_Body..
.this...d..SpaceCenter..Orbit...d..SpaceCenter.
CelestialBody*o<doc>
<summary>
The celestial body (e.g. planet or moon) around which the object is orbiting.
</summary>
</doc>...
.Orbit_get_Apoapsis..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
Gets the apoapsis of the orbit, in meters, from the center of mass
of the body being orbited.
</summary>
<remarks>
For the apoapsis altitude reported on the in-game map view,
use <see cref="M:SpaceCenter.Orbit.ApoapsisAltitude" />.
</remarks>
</doc>...
.Orbit_get_Periapsis..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The periapsis of the orbit, in meters, from the center of mass
of the body being orbited.
</summary>
<remarks>
For the periapsis altitude reported on the in-game map view,
use <see cref="M:SpaceCenter.Orbit.PeriapsisAltitude" />.
</remarks>
</doc>...
.Orbit_get_ApoapsisAltitude..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The apoapsis of the orbit, in meters, above the sea level of the body being orbited.
</summary>
<remarks>
This is equal to <see cref="M:SpaceCenter.Orbit.Apoapsis" /> minus the equatorial radius of the body.
</remarks>
</doc>...
.Orbit_get_PeriapsisAltitude..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The periapsis of the orbit, in meters, above the sea level of the body being orbited.
</summary>
<remarks>
This is equal to <see cref="M:SpaceCenter.Orbit.Periapsis" /> minus the equatorial radius of the body.
</remarks>
</doc>...
.Orbit_get_SemiMajorAxis..
.this...d..SpaceCenter..Orbit....*N<doc>
<summary>
The semi-major axis of the orbit, in meters.
</summary>
</doc>...
.Orbit_get_SemiMinorAxis..
.this...d..SpaceCenter..Orbit....*N<doc>
<summary>
The semi-minor axis of the orbit, in meters.
</summary>
</doc>...
.Orbit_get_Radius..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The current radius of the orbit, in meters. This is the distance between the center
of mass of the object in orbit, and the center of mass of the body around which it
is orbiting.
</summary>
<remarks>
This value will change over time if the orbit is elliptical.
</remarks>
</doc>...
.Orbit_get_Speed..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The current orbital speed of the object in meters per second.
</summary>
<remarks>
This value will change over time if the orbit is elliptical.
</remarks>
</doc>.y
.Orbit_get_Period..
.this...d..SpaceCenter..Orbit....*A<doc>
<summary>
The orbital period, in seconds.
</summary>
</doc>...
.Orbit_get_TimeToApoapsis..
.this...d..SpaceCenter..Orbit....*Y<doc>
<summary>
The time until the object reaches apoapsis, in seconds.
</summary>
</doc>...
.Orbit_get_TimeToPeriapsis..
.this...d..SpaceCenter..Orbit....*Z<doc>
<summary>
The time until the object reaches periapsis, in seconds.
</summary>
</doc>...
.Orbit_get_Eccentricity..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Orbital_eccentricity">eccentricity</a>
of the orbit.
</summary>
</doc>...
.Orbit_get_Inclination..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Orbital_inclination">inclination</a>
of the orbit,
in radians.
</summary>
</doc>...
"Orbit_get_LongitudeOfAscendingNode..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Longitude_of_the_ascending_node">longitude of
the ascending node</a>, in radians.
</summary>
</doc>...
.Orbit_get_ArgumentOfPeriapsis..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Argument_of_periapsis">argument of
periapsis</a>, in radians.
</summary>
</doc>...
.Orbit_get_MeanAnomalyAtEpoch..
.this...d..SpaceCenter..Orbit....*u<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly at epoch</a>.
</summary>
</doc>...
.Orbit_get_Epoch..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The time since the epoch (the point at which the
<a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly at epoch</a>
was measured, in seconds.
</summary>
</doc>...
.Orbit_get_MeanAnomaly..
.this...d..SpaceCenter..Orbit....*l<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Mean_anomaly">mean anomaly</a>.
</summary>
</doc>...
.Orbit_get_EccentricAnomaly..
.this...d..SpaceCenter..Orbit....*v<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/Eccentric_anomaly">eccentric anomaly</a>.
</summary>
</doc>...
.Orbit_get_TrueAnomaly..
.this...d..SpaceCenter..Orbit....*l<doc>
<summary>
The <a href="https://en.wikipedia.org/wiki/True_anomaly">true anomaly</a>.
</summary>
</doc>...
.Orbit_get_NextOrbit..
.this...d..SpaceCenter..Orbit...d..SpaceCenter..Orbit .*..<doc>
<summary>
If the object is going to change sphere of influence in the future, returns the new
orbit after the change. Otherwise returns <c>null</c>.
</summary>
</doc>...
.Orbit_get_TimeToSOIChange..
.this...d..SpaceCenter..Orbit....*..<doc>
<summary>
The time until the object changes sphere of influence, in seconds. Returns <c>NaN</c>
if the object is not going to change sphere of influence.
</summary>
</doc>...
.Orbit_get_OrbitalSpeed..
.this...d..SpaceCenter..Orbit....*Q<doc>
<summary>
The current orbital speed in meters per second.
</summary>
</doc>.f
.Antenna_Transmit. 
.this...d..SpaceCenter..Antenna*0<doc>
<summary>
Transmit data.
</summary>
</doc>.z
.Antenna_Cancel. 
.this...d..SpaceCenter..Antenna*F<doc>
<summary>
Cancel current transmission of data.
</summary>
</doc>...
.Antenna_get_Part. 
.this...d..SpaceCenter..Antenna...d..SpaceCenter..Part*C<doc>
<summary>
The part object for this antenna.
</summary>
</doc>...
.Antenna_get_State. 
.this...d..SpaceCenter..Antenna...e..SpaceCenter..AntennaState*C<doc>
<summary>
The current state of the antenna.
</summary>
</doc>...
.Antenna_get_Deployable. 
.this...d..SpaceCenter..Antenna....*D<doc>
<summary>
Whether the antenna is deployable.
</summary>
</doc>...
.Antenna_get_Deployed. 
.this...d..SpaceCenter..Antenna....*..<doc>
<summary>
Whether the antenna is deployed.
</summary>
<remarks>
Fixed antennas are always deployed.
Returns an error if you try to deploy a fixed antenna.
</remarks>
</doc>...
.Antenna_set_Deployed. 
.this...d..SpaceCenter..Antenna..
.value....*..<doc>
<summary>
Whether the antenna is deployed.
</summary>
<remarks>
Fixed antennas are always deployed.
Returns an error if you try to deploy a fixed antenna.
</remarks>
</doc>...
.Antenna_get_CanTransmit. 
.this...d..SpaceCenter..Antenna....*R<doc>
<summary>
Whether data can be transmitted by this antenna.
</summary>
</doc>...
.Antenna_get_AllowPartial. 
.this...d..SpaceCenter..Antenna....*Q<doc>
<summary>
Whether partial data transmission is permitted.
</summary>
</doc>...
.Antenna_set_AllowPartial. 
.this...d..SpaceCenter..Antenna..
.value....*Q<doc>
<summary>
Whether partial data transmission is permitted.
</summary>
</doc>.v
.Antenna_get_Power. 
.this...d..SpaceCenter..Antenna....*;<doc>
<summary>
The power of the antenna.
</summary>
</doc>...
.Antenna_get_Combinable. 
.this...d..SpaceCenter..Antenna....*{<doc>
<summary>
Whether the antenna can be combined with other antennae on the vessel
to boost the power.
</summary>
</doc>...
.Antenna_get_CombinableExponent. 
.this...d..SpaceCenter..Antenna....*q<doc>
<summary>
Exponent used to calculate the combined power of multiple antennae on a vessel.
</summary>
</doc>...
.Antenna_get_PacketInterval. 
.this...d..SpaceCenter..Antenna....*N<doc>
<summary>
Interval between sending packets in seconds.
</summary>
</doc>...
.Antenna_get_PacketSize. 
.this...d..SpaceCenter..Antenna....*I<doc>
<summary>
Amount of data sent per packet in Mits.
</summary>
</doc>...
.Antenna_get_PacketResourceCost. 
.this...d..SpaceCenter..Antenna....*T<doc>
<summary>
Units of electric charge consumed per packet sent.
</summary>
</doc>...
.CargoBay_get_Part.!
.this...d..SpaceCenter..CargoBay...d..SpaceCenter..Part*E<doc>
<summary>
The part object for this cargo bay.
</summary>
</doc>...
.CargoBay_get_State.!
.this...d..SpaceCenter..CargoBay...e..SpaceCenter.
CargoBayState*=<doc>
<summary>
The state of the cargo bay.
</summary>
</doc>.|
.CargoBay_get_Open.!
.this...d..SpaceCenter..CargoBay....*@<doc>
<summary>
Whether the cargo bay is open.
</summary>
</doc>...
.CargoBay_set_Open.!
.this...d..SpaceCenter..CargoBay..
.value....*@<doc>
<summary>
Whether the cargo bay is open.
</summary>
</doc>...
.ControlSurface_get_Part.'
.this...d..SpaceCenter..ControlSurface...d..SpaceCenter..Part*K<doc>
<summary>
The part object for this control surface.
</summary>
</doc>...
.ControlSurface_get_PitchEnabled.'
.this...d..SpaceCenter..ControlSurface....*X<doc>
<summary>
Whether the control surface has pitch control enabled.
</summary>
</doc>...
.ControlSurface_set_PitchEnabled.'
.this...d..SpaceCenter..ControlSurface..
.value....*X<doc>
<summary>
Whether the control surface has pitch control enabled.
</summary>
</doc>...
.ControlSurface_get_YawEnabled.'
.this...d..SpaceCenter..ControlSurface....*V<doc>
<summary>
Whether the control surface has yaw control enabled.
</summary>
</doc>...
.ControlSurface_set_YawEnabled.'
.this...d..SpaceCenter..ControlSurface..
.value....*V<doc>
<summary>
Whether the control surface has yaw control enabled.
</summary>
</doc>...
.ControlSurface_get_RollEnabled.'
.this...d..SpaceCenter..ControlSurface....*W<doc>
<summary>
Whether the control surface has roll control enabled.
</summary>
</doc>...
.ControlSurface_set_RollEnabled.'
.this...d..SpaceCenter..ControlSurface..
.value....*W<doc>
<summary>
Whether the control surface has roll control enabled.
</summary>
</doc>...
#ControlSurface_get_AuthorityLimiter.'
.this...d..SpaceCenter..ControlSurface....*..<doc>
<summary>
The authority limiter for the control surface, which controls how far the
control surface will move.
</summary>
</doc>...
#ControlSurface_set_AuthorityLimiter.'
.this...d..SpaceCenter..ControlSurface..
.value....*..<doc>
<summary>
The authority limiter for the control surface, which controls how far the
control surface will move.
</summary>
</doc>...
.ControlSurface_get_Inverted.'
.this...d..SpaceCenter..ControlSurface....*S<doc>
<summary>
Whether the control surface movement is inverted.
</summary>
</doc>...
.ControlSurface_set_Inverted.'
.this...d..SpaceCenter..ControlSurface..
.value....*S<doc>
<summary>
Whether the control surface movement is inverted.
</summary>
</doc>...
.ControlSurface_get_Deployed.'
.this...d..SpaceCenter..ControlSurface....*V<doc>
<summary>
Whether the control surface has been fully deployed.
</summary>
</doc>...
.ControlSurface_set_Deployed.'
.this...d..SpaceCenter..ControlSurface..
.value....*V<doc>
<summary>
Whether the control surface has been fully deployed.
</summary>
</doc>...
.ControlSurface_get_SurfaceArea.'
.this...d..SpaceCenter..ControlSurface....*Z<doc>
<summary>
Surface area of the control surface in <math>m^2</math>.
</summary>
</doc>...
"ControlSurface_get_AvailableTorque.'
.this...d..SpaceCenter..ControlSurface.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The available torque, in Newton meters, that can be produced by this control surface,
in the positive and negative pitch, roll and yaw axes of the vessel. These axes
correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
</summary>
</doc>...
.Decoupler_Decouple."
.this...d..SpaceCenter.	Decoupler...d..SpaceCenter..Vessel*..<doc>
<summary>
Fires the decoupler. Returns the new vessel created when the decoupler fires.
Throws an exception if the decoupler has already fired.
</summary>
<remarks>
When called, the active vessel may change. It is therefore possible that,
after calling this function, the object(s) returned by previous call(s) to
<see cref="M:SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
</remarks>
</doc>...
.Decoupler_get_Part."
.this...d..SpaceCenter.	Decoupler...d..SpaceCenter..Part*E<doc>
<summary>
The part object for this decoupler.
</summary>
</doc>...
.Decoupler_get_Decoupled."
.this...d..SpaceCenter.	Decoupler....*B<doc>
<summary>
Whether the decoupler has fired.
</summary>
</doc>...
.Decoupler_get_Staged."
.this...d..SpaceCenter.	Decoupler....*[<doc>
<summary>
Whether the decoupler is enabled in the staging sequence.
</summary>
</doc>...
.Decoupler_get_Impulse."
.this...d..SpaceCenter.	Decoupler....*m<doc>
<summary>
The impulse that the decoupler imparts when it is fired, in Newton seconds.
</summary>
</doc>...
.DockingPort_Undock.$
.this...d..SpaceCenter..DockingPort...d..SpaceCenter..Vessel*..<doc>
<summary>
Undocks the docking port and returns the new <see cref="T:SpaceCenter.Vessel" /> that is created.
This method can be called for either docking port in a docked pair.
Throws an exception if the docking port is not docked to anything.
</summary>
<remarks>
When called, the active vessel may change. It is therefore possible that,
after calling this function, the object(s) returned by previous call(s) to
<see cref="M:SpaceCenter.ActiveVessel" /> no longer refer to the active vessel.
</remarks>
</doc>...
.DockingPort_Position.$
.this...d..SpaceCenter..DockingPort.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the docking port, in the given reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.DockingPort_Direction.$
.this...d..SpaceCenter..DockingPort.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction that docking port points in, in the given reference frame.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.DockingPort_Rotation.$
.this...d..SpaceCenter..DockingPort.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."..."...*..<doc>
<summary>
The rotation of the docking port, in the given reference frame.
</summary>
<returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
<param name="referenceFrame">The reference frame that the returned
rotation is in.</param>
</doc>...
.DockingPort_get_Part.$
.this...d..SpaceCenter..DockingPort...d..SpaceCenter..Part*H<doc>
<summary>
The part object for this docking port.
</summary>
</doc>...
.DockingPort_get_State.$
.this...d..SpaceCenter..DockingPort.!.e..SpaceCenter..DockingPortState*H<doc>
<summary>
The current state of the docking port.
</summary>
</doc>...
.DockingPort_get_DockedPart.$
.this...d..SpaceCenter..DockingPort...d..SpaceCenter..Part .*..<doc>
<summary>
The part that this docking port is docked to. Returns <c>null</c> if this
docking port is not docked to anything.
</summary>
</doc>...
 DockingPort_get_ReengageDistance.$
.this...d..SpaceCenter..DockingPort....*..<doc>
<summary>
The distance a docking port must move away when it undocks before it
becomes ready to dock with another port, in meters.
</summary>
</doc>...
.DockingPort_get_HasShield.$
.this...d..SpaceCenter..DockingPort....*H<doc>
<summary>
Whether the docking port has a shield.
</summary>
</doc>...
.DockingPort_get_Shielded.$
.this...d..SpaceCenter..DockingPort....*..<doc>
<summary>
The state of the docking ports shield, if it has one.

Returns <c>true</c> if the docking port has a shield, and the shield is
closed. Otherwise returns <c>false</c>. When set to <c>true</c>, the shield is
closed, and when set to <c>false</c> the shield is opened. If the docking
port does not have a shield, setting this attribute has no effect.
</summary>
</doc>...
.DockingPort_set_Shielded.$
.this...d..SpaceCenter..DockingPort..
.value....*..<doc>
<summary>
The state of the docking ports shield, if it has one.

Returns <c>true</c> if the docking port has a shield, and the shield is
closed. Otherwise returns <c>false</c>. When set to <c>true</c>, the shield is
closed, and when set to <c>false</c> the shield is opened. If the docking
port does not have a shield, setting this attribute has no effect.
</summary>
</doc>...
.DockingPort_get_ReferenceFrame.$
.this...d..SpaceCenter..DockingPort...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to this docking port, and
oriented with the port.
<list type="bullet"><item><description>The origin is at the position of the docking port.
</description></item><item><description>The axes rotate with the docking port.</description></item><item><description>The x-axis points out to the right side of the docking port.
</description></item><item><description>The y-axis points in the direction the docking port is facing.
</description></item><item><description>The z-axis points out of the bottom off the docking port.
</description></item></list></summary>
<remarks>
This reference frame is not necessarily equivalent to the reference frame
for the part, returned by <see cref="M:SpaceCenter.Part.ReferenceFrame" />.
</remarks>
</doc>.w
.Engine_ToggleMode..
.this...d..SpaceCenter..Engine*A<doc>
<summary>
Toggle the current engine mode.
</summary>
</doc>...
.Engine_get_Part..
.this...d..SpaceCenter..Engine...d..SpaceCenter..Part*B<doc>
<summary>
The part object for this engine.
</summary>
</doc>...
.Engine_get_Active..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
Whether the engine is active. Setting this attribute may have no effect,
depending on <see cref="M:SpaceCenter.Engine.CanShutdown" /> and <see cref="M:SpaceCenter.Engine.CanRestart" />.
</summary>
</doc>...
.Engine_set_Active..
.this...d..SpaceCenter..Engine..
.value....*..<doc>
<summary>
Whether the engine is active. Setting this attribute may have no effect,
depending on <see cref="M:SpaceCenter.Engine.CanShutdown" /> and <see cref="M:SpaceCenter.Engine.CanRestart" />.
</summary>
</doc>...
.Engine_get_Thrust..
.this...d..SpaceCenter..Engine....*h<doc>
<summary>
The current amount of thrust being produced by the engine, in Newtons.
</summary>
</doc>...
.Engine_get_AvailableThrust..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The amount of thrust, in Newtons, that would be produced by the engine
when activated and with its throttle set to 100%.
Returns zero if the engine does not have any fuel.
Takes the engine's current <see cref="M:SpaceCenter.Engine.ThrustLimit" /> and atmospheric conditions
into account.
</summary>
</doc>...
.Engine_get_MaxThrust..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The amount of thrust, in Newtons, that would be produced by the engine
when activated and fueled, with its throttle and throttle limiter set to 100%.
</summary>
</doc>...
.Engine_get_MaxVacuumThrust..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The maximum amount of thrust that can be produced by the engine in a
vacuum, in Newtons. This is the amount of thrust produced by the engine
when activated, <see cref="M:SpaceCenter.Engine.ThrustLimit" /> is set to 100%, the main
vessel's throttle is set to 100% and the engine is in a vacuum.
</summary>
</doc>...
.Engine_get_ThrustLimit..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The thrust limiter of the engine. A value between 0 and 1. Setting this
attribute may have no effect, for example the thrust limit for a solid
rocket booster cannot be changed in flight.
</summary>
</doc>...
.Engine_set_ThrustLimit..
.this...d..SpaceCenter..Engine..
.value....*..<doc>
<summary>
The thrust limiter of the engine. A value between 0 and 1. Setting this
attribute may have no effect, for example the thrust limit for a solid
rocket booster cannot be changed in flight.
</summary>
</doc>...
.Engine_get_Thrusters..
.this...d..SpaceCenter..Engine....."..d..SpaceCenter..Thruster*..<doc>
<summary>
The components of the engine that generate thrust.
</summary>
<remarks>
For example, this corresponds to the rocket nozzel on a solid rocket booster,
or the individual nozzels on a RAPIER engine.
The overall thrust produced by the engine, as reported by <see cref="M:SpaceCenter.Engine.AvailableThrust" />,
<see cref="M:SpaceCenter.Engine.MaxThrust" /> and others, is the sum of the thrust generated by each thruster.
</remarks>
</doc>...
.Engine_get_SpecificImpulse..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The current specific impulse of the engine, in seconds. Returns zero
if the engine is not active.
</summary>
</doc>...
 Engine_get_VacuumSpecificImpulse..
.this...d..SpaceCenter..Engine....*X<doc>
<summary>
The vacuum specific impulse of the engine, in seconds.
</summary>
</doc>...
(Engine_get_KerbinSeaLevelSpecificImpulse..
.this...d..SpaceCenter..Engine....*h<doc>
<summary>
The specific impulse of the engine at sea level on Kerbin, in seconds.
</summary>
</doc>...
.Engine_get_PropellantNames..
.this...d..SpaceCenter..Engine....."...*X<doc>
<summary>
The names of the propellants that the engine consumes.
</summary>
</doc>...
.Engine_get_Propellants..
.this...d..SpaceCenter..Engine. ..."..d..SpaceCenter.
Propellant*K<doc>
<summary>
The propellants that the engine consumes.
</summary>
</doc>...
.Engine_get_PropellantRatios..
.this...d..SpaceCenter..Engine....."..."...*..<doc>
<summary>
The ratio of resources that the engine consumes. A dictionary mapping resource names
to the ratio at which they are consumed by the engine.
</summary>
<remarks>
For example, if the ratios are 0.6 for LiquidFuel and 0.4 for Oxidizer, then for every
0.6 units of LiquidFuel that the engine burns, it will burn 0.4 units of Oxidizer.
</remarks>
</doc>...
.Engine_get_HasFuel..
.this...d..SpaceCenter..Engine....*L<doc>
<summary>
Whether the engine has any fuel available.
</summary>
</doc>...
.Engine_get_Throttle..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The current throttle setting for the engine. A value between 0 and 1.
This is not necessarily the same as the vessel's main throttle
setting, as some engines take time to adjust their throttle
(such as jet engines).
</summary>
</doc>...
.Engine_get_ThrottleLocked..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
Whether the <see cref="M:SpaceCenter.Control.Throttle" /> affects the engine. For example,
this is <c>true</c> for liquid fueled rockets, and <c>false</c> for solid rocket
boosters.
</summary>
</doc>...
.Engine_get_CanRestart..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
Whether the engine can be restarted once shutdown. If the engine cannot be shutdown,
returns <c>false</c>. For example, this is <c>true</c> for liquid fueled rockets
and <c>false</c> for solid rocket boosters.
</summary>
</doc>...
.Engine_get_CanShutdown..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
Whether the engine can be shutdown once activated. For example, this is
<c>true</c> for liquid fueled rockets and <c>false</c> for solid rocket boosters.
</summary>
</doc>...
.Engine_get_HasModes..
.this...d..SpaceCenter..Engine....*U<doc>
<summary>
Whether the engine has multiple modes of operation.
</summary>
</doc>.~
.Engine_get_Mode..
.this...d..SpaceCenter..Engine....*F<doc>
<summary>
The name of the current engine mode.
</summary>
</doc>...
.Engine_set_Mode..
.this...d..SpaceCenter..Engine..
.value....*F<doc>
<summary>
The name of the current engine mode.
</summary>
</doc>...
.Engine_get_Modes..
.this...d..SpaceCenter..Engine. ..."..."..d..SpaceCenter..Engine*..<doc>
<summary>
The available modes for the engine.
A dictionary mapping mode names to <see cref="T:SpaceCenter.Engine" /> objects.
</summary>
</doc>...
.Engine_get_AutoModeSwitch..
.this...d..SpaceCenter..Engine....*U<doc>
<summary>
Whether the engine will automatically switch modes.
</summary>
</doc>...
.Engine_set_AutoModeSwitch..
.this...d..SpaceCenter..Engine..
.value....*U<doc>
<summary>
Whether the engine will automatically switch modes.
</summary>
</doc>..
.Engine_get_Gimballed..
.this...d..SpaceCenter..Engine....*B<doc>
<summary>
Whether the engine is gimballed.
</summary>
</doc>...
.Engine_get_GimbalRange..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
The range over which the gimbal can move, in degrees.
Returns 0 if the engine is not gimballed.
</summary>
</doc>...
.Engine_get_GimbalLocked..
.this...d..SpaceCenter..Engine....*..<doc>
<summary>
Whether the engines gimbal is locked in place. Setting this attribute has
no effect if the engine is not gimballed.
</summary>
</doc>...
.Engine_set_GimbalLocked..
.this...d..SpaceCenter..Engine..
.value....*..<doc>
<summary>
Whether the engines gimbal is locked in place. Setting this attribute has
no effect if the engine is not gimballed.
</summary>
</doc>...
.Engine_get_GimbalLimit..
.this...d..SpaceCenter..Engine....*.<doc>
<summary>
The gimbal limiter of the engine. A value between 0 and 1.
Returns 0 if the gimbal is locked.
</summary>
</doc>...
.Engine_set_GimbalLimit..
.this...d..SpaceCenter..Engine..
.value....*.<doc>
<summary>
The gimbal limiter of the engine. A value between 0 and 1.
Returns 0 if the gimbal is locked.
</summary>
</doc>...
.Engine_get_AvailableTorque..
.this...d..SpaceCenter..Engine.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The available torque, in Newton meters, that can be produced by this engine,
in the positive and negative pitch, roll and yaw axes of the vessel. These axes
correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
Returns zero if the engine is inactive, or not gimballed.
</summary>
</doc>.l
.Experiment_Run.#
.this...d..SpaceCenter.
Experiment*5<doc>
<summary>
Run the experiment.
</summary>
</doc>...
.Experiment_Transmit.#
.this...d..SpaceCenter.
Experiment*X<doc>
<summary>
Transmit all experimental data contained by this part.
</summary>
</doc>...
.Experiment_Dump.#
.this...d..SpaceCenter.
Experiment*Y<doc>
<summary>
Dump the experimental data contained by the experiment.
</summary>
</doc>.p
.Experiment_Reset.#
.this...d..SpaceCenter.
Experiment*7<doc>
<summary>
Reset the experiment.
</summary>
</doc>...
.Experiment_get_Part.#
.this...d..SpaceCenter.
Experiment...d..SpaceCenter..Part*F<doc>
<summary>
The part object for this experiment.
</summary>
</doc>...
.Experiment_get_Name.#
.this...d..SpaceCenter.
Experiment....*..<doc>
<summary>
Internal name of the experiment, as used in
<a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation">part cfg files</a>.
</summary>
</doc>...
.Experiment_get_Title.#
.this...d..SpaceCenter.
Experiment....*V<doc>
<summary>
Title of the experiment, as shown on the in-game UI.
</summary>
</doc>...
.Experiment_get_Inoperable.#
.this...d..SpaceCenter.
Experiment....*G<doc>
<summary>
Whether the experiment is inoperable.
</summary>
</doc>...
.Experiment_get_Deployed.#
.this...d..SpaceCenter.
Experiment....*K<doc>
<summary>
Whether the experiment has been deployed.
</summary>
</doc>...
.Experiment_get_Rerunnable.#
.this...d..SpaceCenter.
Experiment....*G<doc>
<summary>
Whether the experiment can be re-run.
</summary>
</doc>...
.Experiment_get_HasData.#
.this...d..SpaceCenter.
Experiment....*G<doc>
<summary>
Whether the experiment contains data.
</summary>
</doc>...
.Experiment_get_Data.#
.this...d..SpaceCenter.
Experiment.!..."..d..SpaceCenter..ScienceData*H<doc>
<summary>
The data contained in this experiment.
</summary>
</doc>...
.Experiment_get_Available.#
.this...d..SpaceCenter.
Experiment....*i<doc>
<summary>
Determines if the experiment is available given the current conditions.
</summary>
</doc>...
.Experiment_get_Biome.#
.this...d..SpaceCenter.
Experiment....*W<doc>
<summary>
The name of the biome the experiment is currently in.
</summary>
</doc>...
.Experiment_get_ScienceSubject.#
.this...d..SpaceCenter.
Experiment...d..SpaceCenter..ScienceSubject*..<doc>
<summary>
Containing information on the corresponding specific science result for the current
conditions. Returns <c>null</c> if the experiment is unavailable.
</summary>
</doc>...
.Fairing_Jettison. 
.this...d..SpaceCenter..Fairing*h<doc>
<summary>
Jettison the fairing. Has no effect if it has already been jettisoned.
</summary>
</doc>...
.Fairing_get_Part. 
.this...d..SpaceCenter..Fairing...d..SpaceCenter..Part*C<doc>
<summary>
The part object for this fairing.
</summary>
</doc>...
.Fairing_get_Jettisoned. 
.this...d..SpaceCenter..Fairing....*J<doc>
<summary>
Whether the fairing has been jettisoned.
</summary>
</doc>.c
.Force_Remove..
.this...d..SpaceCenter..Force*3<doc>
<summary>
Remove the force.
</summary>
</doc>...
.Force_get_Part..
.this...d..SpaceCenter..Force...d..SpaceCenter..Part*I<doc>
<summary>
The part that this force is applied to.
</summary>
</doc>...
.Force_get_ForceVector..
.this...d..SpaceCenter..Force....."..."..."...*..<doc>
<summary>
The force vector, in Newtons.
</summary>
<returns>A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</returns>
</doc>...
.Force_set_ForceVector..
.this...d..SpaceCenter..Force..
.value....."..."..."...*..<doc>
<summary>
The force vector, in Newtons.
</summary>
<returns>A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</returns>
</doc>...
.Force_get_Position..
.this...d..SpaceCenter..Force....."..."..."...*..<doc>
<summary>
The position at which the force acts, in reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The position as a vector.</returns>
</doc>...
.Force_set_Position..
.this...d..SpaceCenter..Force..
.value....."..."..."...*..<doc>
<summary>
The position at which the force acts, in reference frame <see cref="T:SpaceCenter.ReferenceFrame" />.
</summary>
<returns>The position as a vector.</returns>
</doc>...
.Force_get_ReferenceFrame..
.this...d..SpaceCenter..Force...d..SpaceCenter..ReferenceFrame*W<doc>
<summary>
The reference frame of the force vector and position.
</summary>
</doc>...
.Force_set_ReferenceFrame..
.this...d..SpaceCenter..Force.(
.value...d..SpaceCenter..ReferenceFrame*W<doc>
<summary>
The reference frame of the force vector and position.
</summary>
</doc>...
.Intake_get_Part..
.this...d..SpaceCenter..Intake...d..SpaceCenter..Part*B<doc>
<summary>
The part object for this intake.
</summary>
</doc>.u
.Intake_get_Open..
.this...d..SpaceCenter..Intake....*=<doc>
<summary>
Whether the intake is open.
</summary>
</doc>.~
.Intake_set_Open..
.this...d..SpaceCenter..Intake..
.value....*=<doc>
<summary>
Whether the intake is open.
</summary>
</doc>...
.Intake_get_Speed..
.this...d..SpaceCenter..Intake....*Y<doc>
<summary>
Speed of the flow into the intake, in <math>m/s</math>.
</summary>
</doc>...
.Intake_get_Flow..
.this...d..SpaceCenter..Intake....*d<doc>
<summary>
The rate of flow into the intake, in units of resource per second.
</summary>
</doc>...
.Intake_get_Area..
.this...d..SpaceCenter..Intake....*U<doc>
<summary>
The area of the intake's opening, in square meters.
</summary>
</doc>...
.LaunchClamp_Release.$
.this...d..SpaceCenter..LaunchClamp*s<doc>
<summary>
Releases the docking clamp. Has no effect if the clamp has already been released.
</summary>
</doc>...
.LaunchClamp_get_Part.$
.this...d..SpaceCenter..LaunchClamp...d..SpaceCenter..Part*H<doc>
<summary>
The part object for this launch clamp.
</summary>
</doc>...
.Leg_get_Part..
.this...d..SpaceCenter..Leg...d..SpaceCenter..Part*G<doc>
<summary>
The part object for this landing leg.
</summary>
</doc>...

Leg_get_State..
.this...d..SpaceCenter..Leg...e..SpaceCenter..LegState*G<doc>
<summary>
The current state of the landing leg.
</summary>
</doc>.x
.Leg_get_Deployable..
.this...d..SpaceCenter..Leg....*@<doc>
<summary>
Whether the leg is deployable.
</summary>
</doc>...
.Leg_get_Deployed..
.this...d..SpaceCenter..Leg....*..<doc>
<summary>
Whether the landing leg is deployed.
</summary>
<remarks>
Fixed landing legs are always deployed.
Returns an error if you try to deploy fixed landing gear.
</remarks>
</doc>...
.Leg_set_Deployed..
.this...d..SpaceCenter..Leg..
.value....*..<doc>
<summary>
Whether the landing leg is deployed.
</summary>
<remarks>
Fixed landing legs are always deployed.
Returns an error if you try to deploy fixed landing gear.
</remarks>
</doc>...
.Leg_get_IsGrounded..
.this...d..SpaceCenter..Leg....*Q<doc>
<summary>
Returns whether the leg is touching the ground.
</summary>
</doc>...
.Light_get_Part..
.this...d..SpaceCenter..Light...d..SpaceCenter..Part*A<doc>
<summary>
The part object for this light.
</summary>
</doc>.{
.Light_get_Active..
.this...d..SpaceCenter..Light....*C<doc>
<summary>
Whether the light is switched on.
</summary>
</doc>...
.Light_set_Active..
.this...d..SpaceCenter..Light..
.value....*C<doc>
<summary>
Whether the light is switched on.
</summary>
</doc>...
.Light_get_Color..
.this...d..SpaceCenter..Light....."..."..."...*K<doc>
<summary>
The color of the light, as an RGB triple.
</summary>
</doc>...
.Light_set_Color..
.this...d..SpaceCenter..Light..
.value....."..."..."...*K<doc>
<summary>
The color of the light, as an RGB triple.
</summary>
</doc>...
.Light_get_PowerUsage..
.this...d..SpaceCenter..Light....*Y<doc>
<summary>
The current power usage, in units of charge per second.
</summary>
</doc>...
.Module_HasField..
.this...d..SpaceCenter..Module.

.name........*..<doc>
<summary>
Returns <c>true</c> if the module has a field with the given name.
</summary>
<param name="name">Name of the field.</param>
</doc>...
.Module_GetField..
.this...d..SpaceCenter..Module.

.name........*m<doc>
<summary>
Returns the value of a field.
</summary>
<param name="name">Name of the field.</param>
</doc>...
.Module_SetFieldInt..
.this...d..SpaceCenter..Module.

.name......
.value....*..<doc>
<summary>
Set the value of a field to the given integer number.
</summary>
<param name="name">Name of the field.</param>
<param name="value">Value to set.</param>
</doc>...
.Module_SetFieldFloat..
.this...d..SpaceCenter..Module.

.name......
.value....*..<doc>
<summary>
Set the value of a field to the given floating point number.
</summary>
<param name="name">Name of the field.</param>
<param name="value">Value to set.</param>
</doc>...
.Module_SetFieldString..
.this...d..SpaceCenter..Module.

.name......
.value....*..<doc>
<summary>
Set the value of a field to the given string.
</summary>
<param name="name">Name of the field.</param>
<param name="value">Value to set.</param>
</doc>...
.Module_ResetField..
.this...d..SpaceCenter..Module.

.name....*.<doc>
<summary>
Set the value of a field to its original value.
</summary>
<param name="name">Name of the field.</param>
</doc>...
.Module_HasEvent..
.this...d..SpaceCenter..Module.

.name........*x<doc>
<summary><c>true</c> if the module has an event with the given name.
</summary>
<param name="name"></param>
</doc>...
.Module_TriggerEvent..
.this...d..SpaceCenter..Module.

.name....*..<doc>
<summary>
Trigger the named event. Equivalent to clicking the button in the right-click menu
of the part.
</summary>
<param name="name"></param>
</doc>...
.Module_HasAction..
.this...d..SpaceCenter..Module.

.name........*w<doc>
<summary><c>true</c> if the part has an action with the given name.
</summary>
<param name="name"></param>
</doc>...
.Module_SetAction..
.this...d..SpaceCenter..Module.

.name......
.value.......*..<doc>
<summary>
Set the value of an action with the given name.
</summary>
<param name="name"></param>
<param name="value"></param>
</doc>...
.Module_get_Name..
.this...d..SpaceCenter..Module....*W<doc>
<summary>
Name of the PartModule. For example, "ModuleEngines".
</summary>
</doc>...
.Module_get_Part..
.this...d..SpaceCenter..Module...d..SpaceCenter..Part*E<doc>
<summary>
The part that contains this module.
</summary>
</doc>...
.Module_get_Fields..
.this...d..SpaceCenter..Module....."..."...*..<doc>
<summary>
The modules field names and their associated values, as a dictionary.
These are the values visible in the right-click menu of the part.
</summary>
</doc>...
.Module_get_Events..
.this...d..SpaceCenter..Module....."...*..<doc>
<summary>
A list of the names of all of the modules events. Events are the clickable buttons
visible in the right-click menu of the part.
</summary>
</doc>...
.Module_get_Actions..
.this...d..SpaceCenter..Module....."...*..<doc>
<summary>
A list of all the names of the modules actions. These are the parts actions that can
be assigned to action groups in the in-game editor.
</summary>
</doc>...
.Parachute_Deploy."
.this...d..SpaceCenter.	Parachute*w<doc>
<summary>
Deploys the parachute. This has no effect if the parachute has already
been deployed.
</summary>
</doc>...

Parachute_Arm."
.this...d..SpaceCenter.	Parachute*..<doc>
<summary>
Deploys the parachute. This has no effect if the parachute has already
been armed or deployed. Only applicable to RealChutes parachutes.
</summary>
</doc>...
.Parachute_get_Part."
.this...d..SpaceCenter.	Parachute...d..SpaceCenter..Part*E<doc>
<summary>
The part object for this parachute.
</summary>
</doc>...
.Parachute_get_Deployed."
.this...d..SpaceCenter.	Parachute....*J<doc>
<summary>
Whether the parachute has been deployed.
</summary>
</doc>...
.Parachute_get_Armed."
.this...d..SpaceCenter.	Parachute....*}<doc>
<summary>
Whether the parachute has been armed or deployed. Only applicable to
RealChutes parachutes.
</summary>
</doc>...
.Parachute_get_State."
.this...d..SpaceCenter.	Parachute...e..SpaceCenter..ParachuteState*E<doc>
<summary>
The current state of the parachute.
</summary>
</doc>...
.Parachute_get_DeployAltitude."
.this...d..SpaceCenter.	Parachute....*..<doc>
<summary>
The altitude at which the parachute will full deploy, in meters.
Only applicable to stock parachutes.
</summary>
</doc>...
.Parachute_set_DeployAltitude."
.this...d..SpaceCenter.	Parachute..
.value....*..<doc>
<summary>
The altitude at which the parachute will full deploy, in meters.
Only applicable to stock parachutes.
</summary>
</doc>...
.Parachute_get_DeployMinPressure."
.this...d..SpaceCenter.	Parachute....*..<doc>
<summary>
The minimum pressure at which the parachute will semi-deploy, in atmospheres.
Only applicable to stock parachutes.
</summary>
</doc>...
.Parachute_set_DeployMinPressure."
.this...d..SpaceCenter.	Parachute..
.value....*..<doc>
<summary>
The minimum pressure at which the parachute will semi-deploy, in atmospheres.
Only applicable to stock parachutes.
</summary>
</doc>...

Part_Position..
.this...d..SpaceCenter..Part.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the part in the given reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
<remarks>
This is a fixed position in the part, defined by the parts model.
It s not necessarily the same as the parts center of mass.
Use <see cref="M:SpaceCenter.Part.CenterOfMass" /> to get the parts center of mass.
</remarks>
</doc>...
.Part_CenterOfMass..
.this...d..SpaceCenter..Part.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the parts center of mass in the given reference frame.
If the part is physicsless, this is equivalent to <see cref="M:SpaceCenter.Part.Position" />.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.Part_BoundingBox..
.this...d..SpaceCenter..Part.1
.referenceFrame...d..SpaceCenter..ReferenceFrame.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The axis-aligned bounding box of the part in the given reference frame.
</summary>
<returns>The positions of the minimum and maximum vertices of the box,
as position vectors.</returns>
<param name="referenceFrame">The reference frame that the returned
position vectors are in.</param>
<remarks>
This is computed from the collision mesh of the part.
If the part is not collidable, the box has zero volume and is centered on
the <see cref="M:SpaceCenter.Part.Position" /> of the part.
</remarks>
</doc>...
.Part_Direction..
.this...d..SpaceCenter..Part.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction the part points in, in the given reference frame.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...

Part_Velocity..
.this...d..SpaceCenter..Part.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The linear velocity of the part in the given reference frame.
</summary>
<returns>The velocity as a vector. The vector points in the direction of travel,
and its magnitude is the speed of the body in meters per second.</returns>
<param name="referenceFrame">The reference frame that the returned
velocity vector is in.</param>
</doc>...

Part_Rotation..
.this...d..SpaceCenter..Part.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."..."...*..<doc>
<summary>
The rotation of the part, in the given reference frame.
</summary>
<returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
<param name="referenceFrame">The reference frame that the returned
rotation is in.</param>
</doc>...

Part_AddForce..
.this...d..SpaceCenter..Part..
.force....."..."...".....
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame...d..SpaceCenter..Force*..<doc>
<summary>
Exert a constant force on the part, acting at the given position.
</summary>
<returns>An object that can be used to remove or modify the force.</returns>
<param name="force">A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</param>
<param name="position">The position at which the force acts, as a vector.</param>
<param name="referenceFrame">The reference frame that the
force and position are in.</param>
</doc>...
.Part_InstantaneousForce..
.this...d..SpaceCenter..Part..
.force....."..."...".....
.position....."..."..."....1
.referenceFrame...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
Exert an instantaneous force on the part, acting at the given position.
</summary>
<param name="force">A vector pointing in the direction that the force acts,
with its magnitude equal to the strength of the force in Newtons.</param>
<param name="position">The position at which the force acts, as a vector.</param>
<param name="referenceFrame">The reference frame that the
force and position are in.</param>
<remarks>The force is applied instantaneously in a single physics update.</remarks>
</doc>...

Part_get_Name..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
Internal name of the part, as used in
<a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation">part cfg files</a>.
For example "Mark1-2Pod".
</summary>
</doc>...
.Part_get_Title..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
Title of the part, as shown when the part is right clicked in-game. For example "Mk1-2 Command Pod".
</summary>
</doc>...
.Part_get_Tag..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The name tag for the part. Can be set to a custom string using the
in-game user interface.
</summary>
<remarks>
This string is shared with
<a href="https://forum.kerbalspaceprogram.com/index.php?/topic/61827-/">kOS</a>
if it is installed.
</remarks>
</doc>...
.Part_set_Tag..
.this...d..SpaceCenter..Part..
.value....*..<doc>
<summary>
The name tag for the part. Can be set to a custom string using the
in-game user interface.
</summary>
<remarks>
This string is shared with
<a href="https://forum.kerbalspaceprogram.com/index.php?/topic/61827-/">kOS</a>
if it is installed.
</remarks>
</doc>.}
.Part_get_Highlighted..
.this...d..SpaceCenter..Part....*B<doc>
<summary>
Whether the part is highlighted.
</summary>
</doc>...
.Part_set_Highlighted..
.this...d..SpaceCenter..Part..
.value....*B<doc>
<summary>
Whether the part is highlighted.
</summary>
</doc>...
.Part_get_HighlightColor..
.this...d..SpaceCenter..Part....."..."..."...*Y<doc>
<summary>
The color used to highlight the part, as an RGB triple.
</summary>
</doc>...
.Part_set_HighlightColor..
.this...d..SpaceCenter..Part..
.value....."..."..."...*Y<doc>
<summary>
The color used to highlight the part, as an RGB triple.
</summary>
</doc>.~

Part_get_Cost..
.this...d..SpaceCenter..Part....*J<doc>
<summary>
The cost of the part, in units of funds.
</summary>
</doc>...
.Part_get_Vessel..
.this...d..SpaceCenter..Part...d..SpaceCenter..Vessel*E<doc>
<summary>
The vessel that contains this part.
</summary>
</doc>...
.Part_get_Parent..
.this...d..SpaceCenter..Part...d..SpaceCenter..Part .*..<doc>
<summary>
The parts parent. Returns <c>null</c> if the part does not have a parent.
This, in combination with <see cref="M:SpaceCenter.Part.Children" />, can be used to traverse the vessels
parts tree.
</summary>
</doc>...
.Part_get_Children..
.this...d..SpaceCenter..Part....."..d..SpaceCenter..Part*..<doc>
<summary>
The parts children. Returns an empty list if the part has no children.
This, in combination with <see cref="M:SpaceCenter.Part.Parent" />, can be used to traverse the vessels
parts tree.
</summary>
</doc>...
.Part_get_AxiallyAttached..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
Whether the part is axially attached to its parent, i.e. on the top
or bottom of its parent. If the part has no parent, returns <c>false</c>.
</summary>
</doc>...
.Part_get_RadiallyAttached..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
Whether the part is radially attached to its parent, i.e. on the side of its parent.
If the part has no parent, returns <c>false</c>.
</summary>
</doc>...
.Part_get_Stage..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The stage in which this part will be activated. Returns -1 if the part is not
activated by staging.
</summary>
</doc>...
.Part_get_DecoupleStage..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The stage in which this part will be decoupled. Returns -1 if the part is never
decoupled from the vessel.
</summary>
</doc>...
.Part_get_Massless..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
Whether the part is
<a href="https://wiki.kerbalspaceprogram.com/wiki/Massless_part">massless</a>.
</summary>
</doc>...

Part_get_Mass..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The current mass of the part, including resources it contains, in kilograms.
Returns zero if the part is massless.
</summary>
</doc>...
.Part_get_DryMass..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The mass of the part, not including any resources it contains, in kilograms.
Returns zero if the part is massless.
</summary>
</doc>...
.Part_get_Shielded..
.this...d..SpaceCenter..Part....*y<doc>
<summary>
Whether the part is shielded from the exterior of the vessel, for example by a fairing.
</summary>
</doc>...
.Part_get_DynamicPressure..
.this...d..SpaceCenter..Part....*V<doc>
<summary>
The dynamic pressure acting on the part, in Pascals.
</summary>
</doc>...
.Part_get_ImpactTolerance..
.this...d..SpaceCenter..Part....*Y<doc>
<summary>
The impact tolerance of the part, in meters per second.
</summary>
</doc>...
.Part_get_Temperature..
.this...d..SpaceCenter..Part....*E<doc>
<summary>
Temperature of the part, in Kelvin.
</summary>
</doc>...
.Part_get_SkinTemperature..
.this...d..SpaceCenter..Part....*Q<doc>
<summary>
Temperature of the skin of the part, in Kelvin.
</summary>
</doc>...
.Part_get_MaxTemperature..
.this...d..SpaceCenter..Part....*[<doc>
<summary>
Maximum temperature that the part can survive, in Kelvin.
</summary>
</doc>...
.Part_get_MaxSkinTemperature..
.this...d..SpaceCenter..Part....*g<doc>
<summary>
Maximum temperature that the skin of the part can survive, in Kelvin.
</summary>
</doc>...
.Part_get_ThermalMass..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
A measure of how much energy it takes to increase the internal temperature of the part,
in Joules per Kelvin.
</summary>
</doc>...
.Part_get_ThermalSkinMass..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
A measure of how much energy it takes to increase the skin temperature of the part,
in Joules per Kelvin.
</summary>
</doc>...
.Part_get_ThermalResourceMass..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
A measure of how much energy it takes to increase the temperature of the resources
contained in the part, in Joules per Kelvin.
</summary>
</doc>...
.Part_get_ThermalInternalFlux..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The rate at which heat energy is begin generated by the part.
For example, some engines generate heat by combusting fuel.
Measured in energy per unit time, or power, in Watts.
A positive value means the part is gaining heat energy, and negative means it is losing
heat energy.
</summary>
</doc>...
.Part_get_ThermalConductionFlux..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The rate at which heat energy is conducting into or out of the part via contact with
other parts. Measured in energy per unit time, or power, in Watts.
A positive value means the part is gaining heat energy, and negative means it is
losing heat energy.
</summary>
</doc>...
.Part_get_ThermalConvectionFlux..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The rate at which heat energy is convecting into or out of the part from the
surrounding atmosphere. Measured in energy per unit time, or power, in Watts.
A positive value means the part is gaining heat energy, and negative means it is
losing heat energy.
</summary>
</doc>...
.Part_get_ThermalRadiationFlux..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The rate at which heat energy is radiating into or out of the part from the surrounding
environment. Measured in energy per unit time, or power, in Watts.
A positive value means the part is gaining heat energy, and negative means it is
losing heat energy.
</summary>
</doc>...
"Part_get_ThermalSkinToInternalFlux..
.this...d..SpaceCenter..Part....*..<doc>
<summary>
The rate at which heat energy is transferring between the part's skin and its internals.
Measured in energy per unit time, or power, in Watts.
A positive value means the part's internals are gaining heat energy,
and negative means its skin is gaining heat energy.
</summary>
</doc>...
.Part_get_Resources..
.this...d..SpaceCenter..Part...d..SpaceCenter.	Resources*_<doc>
<summary>
A <see cref="T:SpaceCenter.Resources" /> object for the part.
</summary>
</doc>...
.Part_get_Crossfeed..
.this...d..SpaceCenter..Part....*I<doc>
<summary>
Whether this part is crossfeed capable.
</summary>
</doc>.}
.Part_get_IsFuelLine..
.this...d..SpaceCenter..Part....*C<doc>
<summary>
Whether this part is a fuel line.
</summary>
</doc>...
.Part_get_FuelLinesFrom..
.this...d..SpaceCenter..Part....."..d..SpaceCenter..Part*..<doc>
<summary>
The parts that are connected to this part via fuel lines, where the direction of the
fuel line is into this part.
</summary>
</doc>...
.Part_get_FuelLinesTo..
.this...d..SpaceCenter..Part....."..d..SpaceCenter..Part*..<doc>
<summary>
The parts that are connected to this part via fuel lines, where the direction of the
fuel line is out of this part.
</summary>
</doc>...
.Part_get_Modules..
.this...d..SpaceCenter..Part....."..d..SpaceCenter..Module*<<doc>
<summary>
The modules for this part.
</summary>
</doc>...
.Part_get_Antenna..
.this...d..SpaceCenter..Part...d..SpaceCenter..Antenna .*z<doc>
<summary>
A <see cref="T:SpaceCenter.Antenna" /> if the part is an antenna, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_CargoBay..
.this...d..SpaceCenter..Part...d..SpaceCenter..CargoBay .*|<doc>
<summary>
A <see cref="T:SpaceCenter.CargoBay" /> if the part is a cargo bay, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_ControlSurface..
.this...d..SpaceCenter..Part...d..SpaceCenter..ControlSurface .*..<doc>
<summary>
A <see cref="T:SpaceCenter.ControlSurface" /> if the part is an aerodynamic control surface,
otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Decoupler..
.this...d..SpaceCenter..Part...d..SpaceCenter.	Decoupler .*}<doc>
<summary>
A <see cref="T:SpaceCenter.Decoupler" /> if the part is a decoupler, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_DockingPort..
.this...d..SpaceCenter..Part...d..SpaceCenter..DockingPort .*..<doc>
<summary>
A <see cref="T:SpaceCenter.DockingPort" /> if the part is a docking port, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Engine..
.this...d..SpaceCenter..Part...d..SpaceCenter..Engine .*y<doc>
<summary>
An <see cref="T:SpaceCenter.Engine" /> if the part is an engine, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Experiment..
.this...d..SpaceCenter..Part...d..SpaceCenter.
Experiment .*..<doc>
<summary>
An <see cref="T:SpaceCenter.Experiment" /> if the part contains a
single science experiment, otherwise <c>null</c>.
</summary>
<remarks>
Throws an exception if the part contains more than one experiment.
In that case, use <see cref="M:SpaceCenter.Part.Experiments" /> to get the list of experiments in the part.
</remarks>
</doc>...
.Part_get_Experiments..
.this...d..SpaceCenter..Part. ..."..d..SpaceCenter.
Experiment .*s<doc>
<summary>
A list of <see cref="T:SpaceCenter.Experiment" /> objects that the part contains.
</summary>
</doc>...
.Part_get_Fairing..
.this...d..SpaceCenter..Part...d..SpaceCenter..Fairing .*y<doc>
<summary>
A <see cref="T:SpaceCenter.Fairing" /> if the part is a fairing, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Intake..
.this...d..SpaceCenter..Part...d..SpaceCenter..Intake .*..<doc>
<summary>
An <see cref="T:SpaceCenter.Intake" /> if the part is an intake, otherwise <c>null</c>.
</summary>
<remarks>
This includes any part that generates thrust. This covers many different types
of engine, including liquid fuel rockets, solid rocket boosters and jet engines.
For RCS thrusters see <see cref="T:SpaceCenter.RCS" />.
</remarks>
</doc>...
.Part_get_Leg..
.this...d..SpaceCenter..Part...d..SpaceCenter..Leg .*y<doc>
<summary>
A <see cref="T:SpaceCenter.Leg" /> if the part is a landing leg, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_LaunchClamp..
.this...d..SpaceCenter..Part...d..SpaceCenter..LaunchClamp .*..<doc>
<summary>
A <see cref="T:SpaceCenter.LaunchClamp" /> if the part is a launch clamp, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Light..
.this...d..SpaceCenter..Part...d..SpaceCenter..Light .*u<doc>
<summary>
A <see cref="T:SpaceCenter.Light" /> if the part is a light, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Parachute..
.this...d..SpaceCenter..Part...d..SpaceCenter.	Parachute .*}<doc>
<summary>
A <see cref="T:SpaceCenter.Parachute" /> if the part is a parachute, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Radiator..
.this...d..SpaceCenter..Part...d..SpaceCenter..Radiator .*{<doc>
<summary>
A <see cref="T:SpaceCenter.Radiator" /> if the part is a radiator, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_RCS..
.this...d..SpaceCenter..Part...d..SpaceCenter..RCS .*..<doc>
<summary>
A <see cref="T:SpaceCenter.RCS" /> if the part is an RCS block/thruster, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_ReactionWheel..
.this...d..SpaceCenter..Part...d..SpaceCenter.
ReactionWheel .*..<doc>
<summary>
A <see cref="T:SpaceCenter.ReactionWheel" /> if the part is a reaction wheel, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_ResourceConverter..
.this...d..SpaceCenter..Part.".d..SpaceCenter..ResourceConverter .*..<doc>
<summary>
A <see cref="T:SpaceCenter.ResourceConverter" /> if the part is a resource converter,
otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_ResourceHarvester..
.this...d..SpaceCenter..Part.".d..SpaceCenter..ResourceHarvester .*..<doc>
<summary>
A <see cref="T:SpaceCenter.ResourceHarvester" /> if the part is a resource harvester,
otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Sensor..
.this...d..SpaceCenter..Part...d..SpaceCenter..Sensor .*w<doc>
<summary>
A <see cref="T:SpaceCenter.Sensor" /> if the part is a sensor, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_SolarPanel..
.this...d..SpaceCenter..Part...d..SpaceCenter.
SolarPanel .*..<doc>
<summary>
A <see cref="T:SpaceCenter.SolarPanel" /> if the part is a solar panel, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_Wheel..
.this...d..SpaceCenter..Part...d..SpaceCenter..Wheel .*u<doc>
<summary>
A <see cref="T:SpaceCenter.Wheel" /> if the part is a wheel, otherwise <c>null</c>.
</summary>
</doc>...
.Part_get_MomentOfInertia..
.this...d..SpaceCenter..Part....."..."..."...*..<doc>
<summary>
The moment of inertia of the part in <math>kg.m^2</math> around its center of mass
in the parts reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
</summary>
</doc>...
.Part_get_InertiaTensor..
.this...d..SpaceCenter..Part....."...*..<doc>
<summary>
The inertia tensor of the part in the parts reference frame
(<see cref="T:SpaceCenter.ReferenceFrame" />).
Returns the 3x3 matrix as a list of elements, in row-major order.
</summary>
</doc>...
.Part_get_ReferenceFrame..
.this...d..SpaceCenter..Part...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to this part, and centered on a fixed
position within the part, defined by the parts model.
<list type="bullet"><item><description>The origin is at the position of the part, as returned by
<see cref="M:SpaceCenter.Part.Position" />.</description></item><item><description>The axes rotate with the part.</description></item><item><description>The x, y and z axis directions depend on the design of the part.
</description></item></list></summary>
<remarks>
For docking port parts, this reference frame is not necessarily equivalent to the
reference frame for the docking port, returned by
<see cref="M:SpaceCenter.DockingPort.ReferenceFrame" />.
</remarks>
</doc>...
#Part_get_CenterOfMassReferenceFrame..
.this...d..SpaceCenter..Part...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to this part, and centered on its
center of mass.
<list type="bullet"><item><description>The origin is at the center of mass of the part, as returned by
<see cref="M:SpaceCenter.Part.CenterOfMass" />.</description></item><item><description>The axes rotate with the part.</description></item><item><description>The x, y and z axis directions depend on the design of the part.
</description></item></list></summary>
<remarks>
For docking port parts, this reference frame is not necessarily equivalent to the
reference frame for the docking port, returned by
<see cref="M:SpaceCenter.DockingPort.ReferenceFrame" />.
</remarks>
</doc>...
.Parts_WithName..
.this...d..SpaceCenter..Parts.

.name........."..d..SpaceCenter..Part*..<doc>
<summary>
A list of parts whose <see cref="M:SpaceCenter.Part.Name" /> is <paramref name="name" />.
</summary>
<param name="name"></param>
</doc>...
.Parts_WithTitle..
.this...d..SpaceCenter..Parts..
.title........."..d..SpaceCenter..Part*..<doc>
<summary>
A list of all parts whose <see cref="M:SpaceCenter.Part.Title" /> is <paramref name="title" />.
</summary>
<param name="title"></param>
</doc>...

Parts_WithTag..
.this...d..SpaceCenter..Parts.	
.tag........."..d..SpaceCenter..Part*..<doc>
<summary>
A list of all parts whose <see cref="M:SpaceCenter.Part.Tag" /> is <paramref name="tag" />.
</summary>
<param name="tag"></param>
</doc>...
.Parts_WithModule..
.this...d..SpaceCenter..Parts..

moduleName........."..d..SpaceCenter..Part*..<doc>
<summary>
A list of all parts that contain a <see cref="T:SpaceCenter.Module" /> whose
<see cref="M:SpaceCenter.Module.Name" /> is <paramref name="moduleName" />.
</summary>
<param name="moduleName"></param>
</doc>...

Parts_InStage..
.this...d..SpaceCenter..Parts..
.stage........."..d..SpaceCenter..Part*..<doc>
<summary>
A list of all parts that are activated in the given <paramref name="stage" />.
</summary>
<param name="stage"></param>
</doc>...
.Parts_InDecoupleStage..
.this...d..SpaceCenter..Parts..
.stage........."..d..SpaceCenter..Part*..<doc>
<summary>
A list of all parts that are decoupled in the given <paramref name="stage" />.
</summary>
<param name="stage"></param>
</doc>...
.Parts_ModulesWithName..
.this...d..SpaceCenter..Parts..

moduleName........."..d..SpaceCenter..Module*..<doc>
<summary>
A list of modules (combined across all parts in the vessel) whose
<see cref="M:SpaceCenter.Module.Name" /> is <paramref name="moduleName" />.
</summary>
<param name="moduleName"></param>
</doc>...

Parts_get_All..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Part*E<doc>
<summary>
A list of all of the vessels parts.
</summary>
</doc>...
.Parts_get_Root..
.this...d..SpaceCenter..Parts...d..SpaceCenter..Part*8<doc>
<summary>
The vessels root part.
</summary>
</doc>...
.Parts_get_Controlling..
.this...d..SpaceCenter..Parts...d..SpaceCenter..Part*O<doc>
<summary>
The part from which the vessel is controlled.
</summary>
</doc>...
.Parts_set_Controlling..
.this...d..SpaceCenter..Parts..
.value...d..SpaceCenter..Part*O<doc>
<summary>
The part from which the vessel is controlled.
</summary>
</doc>...
.Parts_get_Antennas..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Antenna*G<doc>
<summary>
A list of all antennas in the vessel.
</summary>
</doc>...
.Parts_get_ControlSurfaces..
.this...d..SpaceCenter..Parts.$..."..d..SpaceCenter..ControlSurface*O<doc>
<summary>
A list of all control surfaces in the vessel.
</summary>
</doc>...
.Parts_get_CargoBays..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..CargoBay*I<doc>
<summary>
A list of all cargo bays in the vessel.
</summary>
</doc>...
.Parts_get_Decouplers..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter.	Decoupler*I<doc>
<summary>
A list of all decouplers in the vessel.
</summary>
</doc>...
.Parts_get_DockingPorts..
.this...d..SpaceCenter..Parts.!..."..d..SpaceCenter..DockingPort*L<doc>
<summary>
A list of all docking ports in the vessel.
</summary>
</doc>...
.Parts_get_Engines..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Engine*..<doc>
<summary>
A list of all engines in the vessel.
</summary>
<remarks>
This includes any part that generates thrust. This covers many different types
of engine, including liquid fuel rockets, solid rocket boosters, jet engines and
RCS thrusters.
</remarks>
</doc>...
.Parts_get_Experiments..
.this...d..SpaceCenter..Parts. ..."..d..SpaceCenter.
Experiment*R<doc>
<summary>
A list of all science experiments in the vessel.
</summary>
</doc>...
.Parts_get_Fairings..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Fairing*G<doc>
<summary>
A list of all fairings in the vessel.
</summary>
</doc>...
.Parts_get_Intakes..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Intake*F<doc>
<summary>
A list of all intakes in the vessel.
</summary>
</doc>...
.Parts_get_Legs..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Leg*T<doc>
<summary>
A list of all landing legs attached to the vessel.
</summary>
</doc>...
.Parts_get_LaunchClamps..
.this...d..SpaceCenter..Parts.!..."..d..SpaceCenter..LaunchClamp*U<doc>
<summary>
A list of all launch clamps attached to the vessel.
</summary>
</doc>...
.Parts_get_Lights..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Light*E<doc>
<summary>
A list of all lights in the vessel.
</summary>
</doc>...
.Parts_get_Parachutes..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter.	Parachute*I<doc>
<summary>
A list of all parachutes in the vessel.
</summary>
</doc>...
.Parts_get_Radiators..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Radiator*H<doc>
<summary>
A list of all radiators in the vessel.
</summary>
</doc>...

Parts_get_RCS..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..RCS*S<doc>
<summary>
A list of all RCS blocks/thrusters in the vessel.
</summary>
</doc>...
.Parts_get_ReactionWheels..
.this...d..SpaceCenter..Parts.#..."..d..SpaceCenter.
ReactionWheel*N<doc>
<summary>
A list of all reaction wheels in the vessel.
</summary>
</doc>...
.Parts_get_ResourceConverters..
.this...d..SpaceCenter..Parts.'..."".d..SpaceCenter..ResourceConverter*R<doc>
<summary>
A list of all resource converters in the vessel.
</summary>
</doc>...
.Parts_get_ResourceHarvesters..
.this...d..SpaceCenter..Parts.'..."".d..SpaceCenter..ResourceHarvester*R<doc>
<summary>
A list of all resource harvesters in the vessel.
</summary>
</doc>...
.Parts_get_Sensors..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Sensor*F<doc>
<summary>
A list of all sensors in the vessel.
</summary>
</doc>...
.Parts_get_SolarPanels..
.this...d..SpaceCenter..Parts. ..."..d..SpaceCenter.
SolarPanel*K<doc>
<summary>
A list of all solar panels in the vessel.
</summary>
</doc>...
.Parts_get_Wheels..
.this...d..SpaceCenter..Parts....."..d..SpaceCenter..Wheel*E<doc>
<summary>
A list of all wheels in the vessel.
</summary>
</doc>.}
.Propellant_get_Name.#
.this...d..SpaceCenter.
Propellant....*=<doc>
<summary>
The name of the propellant.
</summary>
</doc>...
.Propellant_get_CurrentAmount.#
.this...d..SpaceCenter.
Propellant....*C<doc>
<summary>
The current amount of propellant.
</summary>
</doc>...
!Propellant_get_CurrentRequirement.#
.this...d..SpaceCenter.
Propellant....*D<doc>
<summary>
The required amount of propellant.
</summary>
</doc>...
%Propellant_get_TotalResourceAvailable.#
.this...d..SpaceCenter.
Propellant....*|<doc>
<summary>
The total amount of the underlying resource currently reachable given
resource flow rules.
</summary>
</doc>...
$Propellant_get_TotalResourceCapacity.#
.this...d..SpaceCenter.
Propellant....*..<doc>
<summary>
The total vehicle capacity for the underlying propellant resource,
restricted by resource flow rules.
</summary>
</doc>...
.Propellant_get_IgnoreForIsp.#
.this...d..SpaceCenter.
Propellant....*..<doc>
<summary>
If this propellant should be ignored when calculating required mass flow
given specific impulse.
</summary>
</doc>...
#Propellant_get_IgnoreForThrustCurve.#
.this...d..SpaceCenter.
Propellant....*e<doc>
<summary>
If this propellant should be ignored for thrust curve calculations.
</summary>
</doc>...
.Propellant_get_DrawStackGauge.#
.this...d..SpaceCenter.
Propellant....*N<doc>
<summary>
If this propellant has a stack gauge or not.
</summary>
</doc>...
.Propellant_get_IsDeprived.#
.this...d..SpaceCenter.
Propellant....*A<doc>
<summary>
If this propellant is deprived.
</summary>
</doc>.x
.Propellant_get_Ratio.#
.this...d..SpaceCenter.
Propellant....*7<doc>
<summary>
The propellant ratio.
</summary>
</doc>...
.RCS_get_Part..
.this...d..SpaceCenter..RCS...d..SpaceCenter..Part*?<doc>
<summary>
The part object for this RCS.
</summary>
</doc>...
.RCS_get_Active..
.this...d..SpaceCenter..RCS....*..<doc>
<summary>
Whether the RCS thrusters are active.
An RCS thruster is inactive if the RCS action group is disabled
(<see cref="M:SpaceCenter.Control.RCS" />), the RCS thruster itself is not enabled
(<see cref="M:SpaceCenter.RCS.Enabled" />) or it is covered by a fairing (<see cref="M:SpaceCenter.Part.Shielded" />).
</summary>
</doc>.}
.RCS_get_Enabled..
.this...d..SpaceCenter..RCS....*H<doc>
<summary>
Whether the RCS thrusters are enabled.
</summary>
</doc>...
.RCS_set_Enabled..
.this...d..SpaceCenter..RCS..
.value....*H<doc>
<summary>
Whether the RCS thrusters are enabled.
</summary>
</doc>...
.RCS_get_PitchEnabled..
.this...d..SpaceCenter..RCS....*g<doc>
<summary>
Whether the RCS thruster will fire when pitch control input is given.
</summary>
</doc>...
.RCS_set_PitchEnabled..
.this...d..SpaceCenter..RCS..
.value....*g<doc>
<summary>
Whether the RCS thruster will fire when pitch control input is given.
</summary>
</doc>...
.RCS_get_YawEnabled..
.this...d..SpaceCenter..RCS....*e<doc>
<summary>
Whether the RCS thruster will fire when yaw control input is given.
</summary>
</doc>...
.RCS_set_YawEnabled..
.this...d..SpaceCenter..RCS..
.value....*e<doc>
<summary>
Whether the RCS thruster will fire when yaw control input is given.
</summary>
</doc>...
.RCS_get_RollEnabled..
.this...d..SpaceCenter..RCS....*f<doc>
<summary>
Whether the RCS thruster will fire when roll control input is given.
</summary>
</doc>...
.RCS_set_RollEnabled..
.this...d..SpaceCenter..RCS..
.value....*f<doc>
<summary>
Whether the RCS thruster will fire when roll control input is given.
</summary>
</doc>...
.RCS_get_ForwardEnabled..
.this...d..SpaceCenter..RCS....*g<doc>
<summary>
Whether the RCS thruster will fire when pitch control input is given.
</summary>
</doc>...
.RCS_set_ForwardEnabled..
.this...d..SpaceCenter..RCS..
.value....*g<doc>
<summary>
Whether the RCS thruster will fire when pitch control input is given.
</summary>
</doc>...
.RCS_get_UpEnabled..
.this...d..SpaceCenter..RCS....*e<doc>
<summary>
Whether the RCS thruster will fire when yaw control input is given.
</summary>
</doc>...
.RCS_set_UpEnabled..
.this...d..SpaceCenter..RCS..
.value....*e<doc>
<summary>
Whether the RCS thruster will fire when yaw control input is given.
</summary>
</doc>...
.RCS_get_RightEnabled..
.this...d..SpaceCenter..RCS....*f<doc>
<summary>
Whether the RCS thruster will fire when roll control input is given.
</summary>
</doc>...
.RCS_set_RightEnabled..
.this...d..SpaceCenter..RCS..
.value....*f<doc>
<summary>
Whether the RCS thruster will fire when roll control input is given.
</summary>
</doc>...
.RCS_get_AvailableTorque..
.this...d..SpaceCenter..RCS.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The available torque, in Newton meters, that can be produced by this RCS,
in the positive and negative pitch, roll and yaw axes of the vessel. These axes
correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
Returns zero if RCS is disable.
</summary>
</doc>...
.RCS_get_AvailableThrust..
.this...d..SpaceCenter..RCS....*..<doc>
<summary>
The amount of thrust, in Newtons, that would be produced by the thruster when activated.
Returns zero if the thruster does not have any fuel.
Takes the thrusters current <see cref="M:SpaceCenter.RCS.ThrustLimit" /> and atmospheric conditions
into account.
</summary>
</doc>...
.RCS_get_MaxThrust..
.this...d..SpaceCenter..RCS....*..<doc>
<summary>
The maximum amount of thrust that can be produced by the RCS thrusters when active,
in Newtons.
Takes the thrusters current <see cref="M:SpaceCenter.RCS.ThrustLimit" /> and atmospheric conditions
into account.
</summary>
</doc>...
.RCS_get_MaxVacuumThrust..
.this...d..SpaceCenter..RCS....*..<doc>
<summary>
The maximum amount of thrust that can be produced by the RCS thrusters when active
in a vacuum, in Newtons.
</summary>
</doc>...
.RCS_get_ThrustLimit..
.this...d..SpaceCenter..RCS....*^<doc>
<summary>
The thrust limiter of the thruster. A value between 0 and 1.
</summary>
</doc>...
.RCS_set_ThrustLimit..
.this...d..SpaceCenter..RCS..
.value....*^<doc>
<summary>
The thrust limiter of the thruster. A value between 0 and 1.
</summary>
</doc>...
.RCS_get_Thrusters..
.this...d..SpaceCenter..RCS....."..d..SpaceCenter..Thruster*Z<doc>
<summary>
A list of thrusters, one of each nozzel in the RCS part.
</summary>
</doc>...
.RCS_get_SpecificImpulse..
.this...d..SpaceCenter..RCS....*}<doc>
<summary>
The current specific impulse of the RCS, in seconds. Returns zero
if the RCS is not active.
</summary>
</doc>...
.RCS_get_VacuumSpecificImpulse..
.this...d..SpaceCenter..RCS....*U<doc>
<summary>
The vacuum specific impulse of the RCS, in seconds.
</summary>
</doc>...
%RCS_get_KerbinSeaLevelSpecificImpulse..
.this...d..SpaceCenter..RCS....*e<doc>
<summary>
The specific impulse of the RCS at sea level on Kerbin, in seconds.
</summary>
</doc>...
.RCS_get_Propellants..
.this...d..SpaceCenter..RCS....."...*O<doc>
<summary>
The names of resources that the RCS consumes.
</summary>
</doc>...
.RCS_get_PropellantRatios..
.this...d..SpaceCenter..RCS....."..."...*..<doc>
<summary>
The ratios of resources that the RCS consumes. A dictionary mapping resource names
to the ratios at which they are consumed by the RCS.
</summary>
</doc>.z
.RCS_get_HasFuel..
.this...d..SpaceCenter..RCS....*E<doc>
<summary>
Whether the RCS has fuel available.
</summary>
</doc>...
.Radiator_get_Part.!
.this...d..SpaceCenter..Radiator...d..SpaceCenter..Part*D<doc>
<summary>
The part object for this radiator.
</summary>
</doc>...
.Radiator_get_Deployable.!
.this...d..SpaceCenter..Radiator....*E<doc>
<summary>
Whether the radiator is deployable.
</summary>
</doc>...
.Radiator_get_Deployed.!
.this...d..SpaceCenter..Radiator....*..<doc>
<summary>
For a deployable radiator, <c>true</c> if the radiator is extended.
If the radiator is not deployable, this is always <c>true</c>.
</summary>
</doc>...
.Radiator_set_Deployed.!
.this...d..SpaceCenter..Radiator..
.value....*..<doc>
<summary>
For a deployable radiator, <c>true</c> if the radiator is extended.
If the radiator is not deployable, this is always <c>true</c>.
</summary>
</doc>...
.Radiator_get_State.!
.this...d..SpaceCenter..Radiator...e..SpaceCenter.
RadiatorState*..<doc>
<summary>
The current state of the radiator.
</summary>
<remarks>
A fixed radiator is always <see cref="M:SpaceCenter.RadiatorState.Extended" />.
</remarks>
</doc>...
.ReactionWheel_get_Part.&
.this...d..SpaceCenter.
ReactionWheel...d..SpaceCenter..Part*J<doc>
<summary>
The part object for this reaction wheel.
</summary>
</doc>...
.ReactionWheel_get_Active.&
.this...d..SpaceCenter.
ReactionWheel....*G<doc>
<summary>
Whether the reaction wheel is active.
</summary>
</doc>...
.ReactionWheel_set_Active.&
.this...d..SpaceCenter.
ReactionWheel..
.value....*G<doc>
<summary>
Whether the reaction wheel is active.
</summary>
</doc>...
.ReactionWheel_get_Broken.&
.this...d..SpaceCenter.
ReactionWheel....*G<doc>
<summary>
Whether the reaction wheel is broken.
</summary>
</doc>...
!ReactionWheel_get_AvailableTorque.&
.this...d..SpaceCenter.
ReactionWheel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The available torque, in Newton meters, that can be produced by this reaction wheel,
in the positive and negative pitch, roll and yaw axes of the vessel. These axes
correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
Returns zero if the reaction wheel is inactive or broken.
</summary>
</doc>...
.ReactionWheel_get_MaxTorque.&
.this...d..SpaceCenter.
ReactionWheel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque, in Newton meters, that can be produced by this reaction wheel,
when it is active, in the positive and negative pitch, roll and yaw axes of the vessel.
These axes correspond to the coordinate axes of the <see cref="M:SpaceCenter.Vessel.ReferenceFrame" />.
</summary>
</doc>...
.ResourceConverter_Active.*
.this.".d..SpaceCenter..ResourceConverter..
.index........*..<doc>
<summary>
True if the specified converter is active.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_Name.*
.this.".d..SpaceCenter..ResourceConverter..
.index........*z<doc>
<summary>
The name of the specified converter.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_Start.*
.this.".d..SpaceCenter..ResourceConverter..
.index....*t<doc>
<summary>
Start the specified converter.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_Stop.*
.this.".d..SpaceCenter..ResourceConverter..
.index....*s<doc>
<summary>
Stop the specified converter.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_State.*
.this.".d..SpaceCenter..ResourceConverter..
.index.....'.e..SpaceCenter..ResourceConverterState*{<doc>
<summary>
The state of the specified converter.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_StatusInfo.*
.this.".d..SpaceCenter..ResourceConverter..
.index........*..<doc>
<summary>
Status information for the specified converter.
This is the full status message shown in the in-game UI.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_Inputs.*
.this.".d..SpaceCenter..ResourceConverter..
.index........."...*..<doc>
<summary>
List of the names of resources consumed by the specified converter.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_Outputs.*
.this.".d..SpaceCenter..ResourceConverter..
.index........."...*..<doc>
<summary>
List of the names of resources produced by the specified converter.
</summary>
<param name="index">Index of the converter.</param>
</doc>...
.ResourceConverter_get_Part.*
.this.".d..SpaceCenter..ResourceConverter...d..SpaceCenter..Part*E<doc>
<summary>
The part object for this converter.
</summary>
</doc>...
.ResourceConverter_get_Count.*
.this.".d..SpaceCenter..ResourceConverter....*G<doc>
<summary>
The number of converters in the part.
</summary>
</doc>...
'ResourceConverter_get_ThermalEfficiency.*
.this.".d..SpaceCenter..ResourceConverter....*j<doc>
<summary>
The thermal efficiency of the converter, as a percentage of its maximum.
</summary>
</doc>...
%ResourceConverter_get_CoreTemperature.*
.this.".d..SpaceCenter..ResourceConverter....*S<doc>
<summary>
The core temperature of the converter, in Kelvin.
</summary>
</doc>...
,ResourceConverter_get_OptimumCoreTemperature.*
.this.".d..SpaceCenter..ResourceConverter....*{<doc>
<summary>
The core temperature at which the converter will operate with peak efficiency, in Kelvin.
</summary>
</doc>...
.ResourceHarvester_get_Part.*
.this.".d..SpaceCenter..ResourceHarvester...d..SpaceCenter..Part*E<doc>
<summary>
The part object for this harvester.
</summary>
</doc>...
.ResourceHarvester_get_State.*
.this.".d..SpaceCenter..ResourceHarvester.'.e..SpaceCenter..ResourceHarvesterState*=<doc>
<summary>
The state of the harvester.
</summary>
</doc>...
.ResourceHarvester_get_Deployed.*
.this.".d..SpaceCenter..ResourceHarvester....*D<doc>
<summary>
Whether the harvester is deployed.
</summary>
</doc>...
.ResourceHarvester_set_Deployed.*
.this.".d..SpaceCenter..ResourceHarvester..
.value....*D<doc>
<summary>
Whether the harvester is deployed.
</summary>
</doc>...
.ResourceHarvester_get_Active.*
.this.".d..SpaceCenter..ResourceHarvester....*M<doc>
<summary>
Whether the harvester is actively drilling.
</summary>
</doc>...
.ResourceHarvester_set_Active.*
.this.".d..SpaceCenter..ResourceHarvester..
.value....*M<doc>
<summary>
Whether the harvester is actively drilling.
</summary>
</doc>...
$ResourceHarvester_get_ExtractionRate.*
.this.".d..SpaceCenter..ResourceHarvester....*e<doc>
<summary>
The rate at which the drill is extracting ore, in units per second.
</summary>
</doc>...
'ResourceHarvester_get_ThermalEfficiency.*
.this.".d..SpaceCenter..ResourceHarvester....*f<doc>
<summary>
The thermal efficiency of the drill, as a percentage of its maximum.
</summary>
</doc>...
%ResourceHarvester_get_CoreTemperature.*
.this.".d..SpaceCenter..ResourceHarvester....*O<doc>
<summary>
The core temperature of the drill, in Kelvin.
</summary>
</doc>...
,ResourceHarvester_get_OptimumCoreTemperature.*
.this.".d..SpaceCenter..ResourceHarvester....*w<doc>
<summary>
The core temperature at which the drill will operate with peak efficiency, in Kelvin.
</summary>
</doc>.v
.ScienceData_get_DataAmount.$
.this...d..SpaceCenter..ScienceData....*.<doc>
<summary>
Data amount.
</summary>
</doc>.z
.ScienceData_get_ScienceValue.$
.this...d..SpaceCenter..ScienceData....*0<doc>
<summary>
Science value.
</summary>
</doc>.|
.ScienceData_get_TransmitValue.$
.this...d..SpaceCenter..ScienceData....*1<doc>
<summary>
Transmit value.
</summary>
</doc>...
.ScienceSubject_get_Science.'
.this...d..SpaceCenter..ScienceSubject....*..<doc>
<summary>
Amount of science already earned from this subject, not updated until after
transmission/recovery.
</summary>
</doc>...
.ScienceSubject_get_ScienceCap.'
.this...d..SpaceCenter..ScienceSubject....*K<doc>
<summary>
Total science allowable for this subject.
</summary>
</doc>...
.ScienceSubject_get_IsComplete.'
.this...d..SpaceCenter..ScienceSubject....*L<doc>
<summary>
Whether the experiment has been completed.
</summary>
</doc>...
.ScienceSubject_get_DataScale.'
.this...d..SpaceCenter..ScienceSubject....*b<doc>
<summary>
Multiply science value by this to determine data amount in mits.
</summary>
</doc>...
"ScienceSubject_get_ScientificValue.'
.this...d..SpaceCenter..ScienceSubject....*..<doc>
<summary>
Diminishing value multiplier for decreasing the science value returned from repeated
experiments.
</summary>
</doc>...
.ScienceSubject_get_SubjectValue.'
.this...d..SpaceCenter..ScienceSubject....*j<doc>
<summary>
Multiplier for specific Celestial Body/Experiment Situation combination.
</summary>
</doc>...
.ScienceSubject_get_Title.'
.this...d..SpaceCenter..ScienceSubject....*Y<doc>
<summary>
Title of science subject, displayed in science archives
</summary>
</doc>...
.Sensor_get_Part..
.this...d..SpaceCenter..Sensor...d..SpaceCenter..Part*B<doc>
<summary>
The part object for this sensor.
</summary>
</doc>.y
.Sensor_get_Active..
.this...d..SpaceCenter..Sensor....*?<doc>
<summary>
Whether the sensor is active.
</summary>
</doc>...
.Sensor_set_Active..
.this...d..SpaceCenter..Sensor..
.value....*?<doc>
<summary>
Whether the sensor is active.
</summary>
</doc>.{
.Sensor_get_Value..
.this...d..SpaceCenter..Sensor....*B<doc>
<summary>
The current value of the sensor.
</summary>
</doc>...
.SolarPanel_get_Part.#
.this...d..SpaceCenter.
SolarPanel...d..SpaceCenter..Part*G<doc>
<summary>
The part object for this solar panel.
</summary>
</doc>...
.SolarPanel_get_Deployable.#
.this...d..SpaceCenter.
SolarPanel....*H<doc>
<summary>
Whether the solar panel is deployable.
</summary>
</doc>...
.SolarPanel_get_Deployed.#
.this...d..SpaceCenter.
SolarPanel....*F<doc>
<summary>
Whether the solar panel is extended.
</summary>
</doc>...
.SolarPanel_set_Deployed.#
.this...d..SpaceCenter.
SolarPanel..
.value....*F<doc>
<summary>
Whether the solar panel is extended.
</summary>
</doc>...
.SolarPanel_get_State.#
.this...d..SpaceCenter.
SolarPanel. .e..SpaceCenter..SolarPanelState*G<doc>
<summary>
The current state of the solar panel.
</summary>
</doc>...
.SolarPanel_get_EnergyFlow.#
.this...d..SpaceCenter.
SolarPanel....*..<doc>
<summary>
The current amount of energy being generated by the solar panel, in
units of charge per second.
</summary>
</doc>...
.SolarPanel_get_SunExposure.#
.this...d..SpaceCenter.
SolarPanel....*..<doc>
<summary>
The current amount of sunlight that is incident on the solar panel,
as a percentage. A value between 0 and 1.
</summary>
</doc>...
.Thruster_ThrustPosition.!
.this...d..SpaceCenter..Thruster.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position at which the thruster generates thrust, in the given reference frame.
For gimballed engines, this takes into account the current rotation of the gimbal.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.Thruster_ThrustDirection.!
.this...d..SpaceCenter..Thruster.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction of the force generated by the thruster, in the given reference frame.
This is opposite to the direction in which the thruster expels propellant.
For gimballed engines, this takes into account the current rotation of the gimbal.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.Thruster_InitialThrustPosition.!
.this...d..SpaceCenter..Thruster.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position at which the thruster generates thrust, when the engine is in its
initial position (no gimballing), in the given reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
<remarks>
This position can move when the gimbal rotates. This is because the thrust position and
gimbal position are not necessarily the same.
</remarks>
</doc>...
.Thruster_InitialThrustDirection.!
.this...d..SpaceCenter..Thruster.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction of the force generated by the thruster, when the engine is in its
initial position (no gimballing), in the given reference frame.
This is opposite to the direction in which the thruster expels propellant.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.Thruster_GimbalPosition.!
.this...d..SpaceCenter..Thruster.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
Position around which the gimbal pivots.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.Thruster_get_Part.!
.this...d..SpaceCenter..Thruster...d..SpaceCenter..Part*d<doc>
<summary>
The <see cref="T:SpaceCenter.Part" /> that contains this thruster.
</summary>
</doc>...
!Thruster_get_ThrustReferenceFrame.!
.this...d..SpaceCenter..Thruster...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
A reference frame that is fixed relative to the thruster and orientated with
its thrust direction (<see cref="M:SpaceCenter.Thruster.ThrustDirection" />).
For gimballed engines, this takes into account the current rotation of the gimbal.
<list type="bullet"><item><description>
The origin is at the position of thrust for this thruster
(<see cref="M:SpaceCenter.Thruster.ThrustPosition" />).</description></item><item><description>
The axes rotate with the thrust direction.
This is the direction in which the thruster expels propellant, including any gimballing.
</description></item><item><description>The y-axis points along the thrust direction.</description></item><item><description>The x-axis and z-axis are perpendicular to the thrust direction.
</description></item></list></summary>
</doc>...
.Thruster_get_Gimballed.!
.this...d..SpaceCenter..Thruster....*D<doc>
<summary>
Whether the thruster is gimballed.
</summary>
</doc>...
.Thruster_get_GimbalAngle.!
.this...d..SpaceCenter..Thruster....."..."..."...*g<doc>
<summary>
The current gimbal angle in the pitch, roll and yaw axes, in degrees.
</summary>
</doc>...
.Wheel_get_Part..
.this...d..SpaceCenter..Wheel...d..SpaceCenter..Part*A<doc>
<summary>
The part object for this wheel.
</summary>
</doc>...
.Wheel_get_State..
.this...d..SpaceCenter..Wheel...e..SpaceCenter.
WheelState*A<doc>
<summary>
The current state of the wheel.
</summary>
</doc>.y
.Wheel_get_Radius..
.this...d..SpaceCenter..Wheel....*A<doc>
<summary>
Radius of the wheel, in meters.
</summary>
</doc>...
.Wheel_get_Grounded..
.this...d..SpaceCenter..Wheel....*K<doc>
<summary>
Whether the wheel is touching the ground.
</summary>
</doc>.z
.Wheel_get_HasBrakes..
.this...d..SpaceCenter..Wheel....*?<doc>
<summary>
Whether the wheel has brakes.
</summary>
</doc>...
.Wheel_get_Brakes..
.this...d..SpaceCenter..Wheel....*m<doc>
<summary>
The braking force, as a percentage of maximum, when the brakes are applied.
</summary>
</doc>...
.Wheel_set_Brakes..
.this...d..SpaceCenter..Wheel..
.value....*m<doc>
<summary>
The braking force, as a percentage of maximum, when the brakes are applied.
</summary>
</doc>...
.Wheel_get_AutoFrictionControl..
.this...d..SpaceCenter..Wheel....*P<doc>
<summary>
Whether automatic friction control is enabled.
</summary>
</doc>...
.Wheel_set_AutoFrictionControl..
.this...d..SpaceCenter..Wheel..
.value....*P<doc>
<summary>
Whether automatic friction control is enabled.
</summary>
</doc>...
.Wheel_get_ManualFrictionControl..
.this...d..SpaceCenter..Wheel....*..<doc>
<summary>
Manual friction control value. Only has an effect if automatic friction control is disabled.
A value between 0 and 5 inclusive.
</summary>
</doc>...
.Wheel_set_ManualFrictionControl..
.this...d..SpaceCenter..Wheel..
.value....*..<doc>
<summary>
Manual friction control value. Only has an effect if automatic friction control is disabled.
A value between 0 and 5 inclusive.
</summary>
</doc>.~
.Wheel_get_Deployable..
.this...d..SpaceCenter..Wheel....*B<doc>
<summary>
Whether the wheel is deployable.
</summary>
</doc>.z
.Wheel_get_Deployed..
.this...d..SpaceCenter..Wheel....*@<doc>
<summary>
Whether the wheel is deployed.
</summary>
</doc>...
.Wheel_set_Deployed..
.this...d..SpaceCenter..Wheel..
.value....*@<doc>
<summary>
Whether the wheel is deployed.
</summary>
</doc>...
.Wheel_get_Powered..
.this...d..SpaceCenter..Wheel....*J<doc>
<summary>
Whether the wheel is powered by a motor.
</summary>
</doc>.}
.Wheel_get_MotorEnabled..
.this...d..SpaceCenter..Wheel....*?<doc>
<summary>
Whether the motor is enabled.
</summary>
</doc>...
.Wheel_set_MotorEnabled..
.this...d..SpaceCenter..Wheel..
.value....*?<doc>
<summary>
Whether the motor is enabled.
</summary>
</doc>...
.Wheel_get_MotorInverted..
.this...d..SpaceCenter..Wheel....*Q<doc>
<summary>
Whether the direction of the motor is inverted.
</summary>
</doc>...
.Wheel_set_MotorInverted..
.this...d..SpaceCenter..Wheel..
.value....*Q<doc>
<summary>
Whether the direction of the motor is inverted.
</summary>
</doc>...
.Wheel_get_MotorState..
.this...d..SpaceCenter..Wheel...e..SpaceCenter.
MotorState*Q<doc>
<summary>
Whether the direction of the motor is inverted.
</summary>
</doc>...
.Wheel_get_MotorOutput..
.this...d..SpaceCenter..Wheel....*z<doc>
<summary>
The output of the motor. This is the torque currently being generated, in Newton meters.
</summary>
</doc>...
 Wheel_get_TractionControlEnabled..
.this...d..SpaceCenter..Wheel....*..<doc>
<summary>
Whether automatic traction control is enabled.
A wheel only has traction control if it is powered.
</summary>
</doc>...
 Wheel_set_TractionControlEnabled..
.this...d..SpaceCenter..Wheel..
.value....*..<doc>
<summary>
Whether automatic traction control is enabled.
A wheel only has traction control if it is powered.
</summary>
</doc>...
.Wheel_get_TractionControl..
.this...d..SpaceCenter..Wheel....*..<doc>
<summary>
Setting for the traction control.
Only takes effect if the wheel has automatic traction control enabled.
A value between 0 and 5 inclusive.
</summary>
</doc>...
.Wheel_set_TractionControl..
.this...d..SpaceCenter..Wheel..
.value....*..<doc>
<summary>
Setting for the traction control.
Only takes effect if the wheel has automatic traction control enabled.
A value between 0 and 5 inclusive.
</summary>
</doc>...
.Wheel_get_DriveLimiter..
.this...d..SpaceCenter..Wheel....*..<doc>
<summary>
Manual setting for the motor limiter.
Only takes effect if the wheel has automatic traction control disabled.
A value between 0 and 100 inclusive.
</summary>
</doc>...
.Wheel_set_DriveLimiter..
.this...d..SpaceCenter..Wheel..
.value....*..<doc>
<summary>
Manual setting for the motor limiter.
Only takes effect if the wheel has automatic traction control disabled.
A value between 0 and 100 inclusive.
</summary>
</doc>.|
.Wheel_get_Steerable..
.this...d..SpaceCenter..Wheel....*A<doc>
<summary>
Whether the wheel has steering.
</summary>
</doc>...
.Wheel_get_SteeringEnabled..
.this...d..SpaceCenter..Wheel....*H<doc>
<summary>
Whether the wheel steering is enabled.
</summary>
</doc>...
.Wheel_set_SteeringEnabled..
.this...d..SpaceCenter..Wheel..
.value....*H<doc>
<summary>
Whether the wheel steering is enabled.
</summary>
</doc>...
.Wheel_get_SteeringInverted..
.this...d..SpaceCenter..Wheel....*I<doc>
<summary>
Whether the wheel steering is inverted.
</summary>
</doc>...
.Wheel_set_SteeringInverted..
.this...d..SpaceCenter..Wheel..
.value....*I<doc>
<summary>
Whether the wheel steering is inverted.
</summary>
</doc>...
.Wheel_get_HasSuspension..
.this...d..SpaceCenter..Wheel....*C<doc>
<summary>
Whether the wheel has suspension.
</summary>
</doc>...
"Wheel_get_SuspensionSpringStrength..
.this...d..SpaceCenter..Wheel....*S<doc>
<summary>
Suspension spring strength, as set in the editor.
</summary>
</doc>...
"Wheel_get_SuspensionDamperStrength..
.this...d..SpaceCenter..Wheel....*S<doc>
<summary>
Suspension damper strength, as set in the editor.
</summary>
</doc>.v
.Wheel_get_Broken..
.this...d..SpaceCenter..Wheel....*><doc>
<summary>
Whether the wheel is broken.
</summary>
</doc>.~
.Wheel_get_Repairable..
.this...d..SpaceCenter..Wheel....*B<doc>
<summary>
Whether the wheel is repairable.
</summary>
</doc>.v
.Wheel_get_Stress..
.this...d..SpaceCenter..Wheel....*><doc>
<summary>
Current stress on the wheel.
</summary>
</doc>...
.Wheel_get_StressTolerance..
.this...d..SpaceCenter..Wheel....*@<doc>
<summary>
Stress tolerance of the wheel.
</summary>
</doc>...
.Wheel_get_StressPercentage..
.this...d..SpaceCenter..Wheel....*f<doc>
<summary>
Current stress on the wheel as a percentage of its stress tolerance.
</summary>
</doc>.~
.Wheel_get_Deflection..
.this...d..SpaceCenter..Wheel....*B<doc>
<summary>
Current deflection of the wheel.
</summary>
</doc>.r
.Wheel_get_Slip..
.this...d..SpaceCenter..Wheel....*<<doc>
<summary>
Current slip of the wheel.
</summary>
</doc>...
$ReferenceFrame_static_CreateRelative.1
.referenceFrame...d..SpaceCenter..ReferenceFrame.;
.position....."..."...".....
.........
.........
..........I
.rotation....."..."..."..."....(
.........
.........
.........
........?.;
.velocity....."..."...".....
.........
.........
..........B
.angularVelocity....."..."...".....
.........
.........
............d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
Create a relative reference frame. This is a custom reference frame
whose components offset the components of a parent reference frame.
</summary>
<param name="referenceFrame">The parent reference frame on which to
base this reference frame.</param>
<param name="position">The offset of the position of the origin,
as a position vector. Defaults to <math>(0, 0, 0)</math></param>
<param name="rotation">The rotation to apply to the parent frames rotation,
as a quaternion of the form <math>(x, y, z, w)</math>.
Defaults to <math>(0, 0, 0, 1)</math> (i.e. no rotation)</param>
<param name="velocity">The linear velocity to offset the parent frame by,
as a vector pointing in the direction of travel, whose magnitude is the speed in
meters per second. Defaults to <math>(0, 0, 0)</math>.</param>
<param name="angularVelocity">The angular velocity to offset the parent frame by,
as a vector. This vector points in the direction of the axis of rotation,
and its magnitude is the speed of the rotation in radians per second.
Defaults to <math>(0, 0, 0)</math>.</param>
</doc>...
"ReferenceFrame_static_CreateHybrid.+
.position...d..SpaceCenter..ReferenceFrame..
.rotation...d..SpaceCenter..ReferenceFrame.....
.velocity...d..SpaceCenter..ReferenceFrame....5
.angularVelocity...d..SpaceCenter..ReferenceFrame......d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
Create a hybrid reference frame. This is a custom reference frame
whose components inherited from other reference frames.
</summary>
<param name="position">The reference frame providing the position of the origin.</param>
<param name="rotation">The reference frame providing the rotation of the frame.</param>
<param name="velocity">The reference frame providing the linear velocity of the frame.
</param>
<param name="angularVelocity">The reference frame providing the angular velocity
of the frame.</param>
<remarks>
The <paramref name="position" /> reference frame is required but all other
reference frames are optional. If omitted, they are set to the
<paramref name="position" /> reference frame.
</remarks>
</doc>.w
.Resource_get_Name.!
.this...d..SpaceCenter..Resource....*;<doc>
<summary>
The name of the resource.
</summary>
</doc>...
.Resource_get_Part.!
.this...d..SpaceCenter..Resource...d..SpaceCenter..Part*C<doc>
<summary>
The part containing the resource.
</summary>
</doc>...
.Resource_get_Max.!
.this...d..SpaceCenter..Resource....*b<doc>
<summary>
The total amount of the resource that can be stored in the part.
</summary>
</doc>...
.Resource_get_Amount.!
.this...d..SpaceCenter..Resource....*b<doc>
<summary>
The amount of the resource that is currently stored in the part.
</summary>
</doc>...
.Resource_get_Density.!
.this...d..SpaceCenter..Resource....*T<doc>
<summary>
The density of the resource, in <math>kg/l</math>.
</summary>
</doc>...
.Resource_get_FlowMode.!
.this...d..SpaceCenter..Resource.!.e..SpaceCenter..ResourceFlowMode*@<doc>
<summary>
The flow mode of the resource.
</summary>
</doc>...
.Resource_get_Enabled.!
.this...d..SpaceCenter..Resource....*J<doc>
<summary>
Whether use of this resource is enabled.
</summary>
</doc>...
.Resource_set_Enabled.!
.this...d..SpaceCenter..Resource..
.value....*J<doc>
<summary>
Whether use of this resource is enabled.
</summary>
</doc>...
.ResourceTransfer_static_Start.!
.fromPart...d..SpaceCenter..Part..
.toPart...d..SpaceCenter..Part..
.resource......
	maxAmount.....!.d..SpaceCenter..ResourceTransfer*..<doc>
<summary>
Start transferring a resource transfer between a pair of parts. The transfer will move
at most <paramref name="maxAmount" /> units of the resource, depending on how much of
the resource is available in the source part and how much storage is available in the
destination part.
Use <see cref="M:SpaceCenter.ResourceTransfer.Complete" /> to check if the transfer is complete.
Use <see cref="M:SpaceCenter.ResourceTransfer.Amount" /> to see how much of the resource has been transferred.
</summary>
<param name="fromPart">The part to transfer to.</param>
<param name="toPart">The part to transfer from.</param>
<param name="resource">The name of the resource to transfer.</param>
<param name="maxAmount">The maximum amount of resource to transfer.</param>
</doc>...
.ResourceTransfer_get_Complete.)
.this.!.d..SpaceCenter..ResourceTransfer....*E<doc>
<summary>
Whether the transfer has completed.
</summary>
</doc>...
.ResourceTransfer_get_Amount.)
.this.!.d..SpaceCenter..ResourceTransfer....*W<doc>
<summary>
The amount of the resource that has been transferred.
</summary>
</doc>...
.Resources_WithResource."
.this...d..SpaceCenter.	Resources.

.name........."..d..SpaceCenter..Resource*f<doc>
<summary>
All the individual resources with the given name that can be stored.
</summary>
</doc>...
.Resources_HasResource."
.this...d..SpaceCenter.	Resources.

.name........*..<doc>
<summary>
Check whether the named resource can be stored.
</summary>
<param name="name">The name of the resource.</param>
</doc>...

Resources_Max."
.this...d..SpaceCenter.	Resources.

.name........*..<doc>
<summary>
Returns the amount of a resource that can be stored.
</summary>
<param name="name">The name of the resource.</param>
</doc>...
.Resources_Amount."
.this...d..SpaceCenter.	Resources.

.name........*..<doc>
<summary>
Returns the amount of a resource that is currently stored.
</summary>
<param name="name">The name of the resource.</param>
</doc>...
.Resources_static_Density.

.name........*..<doc>
<summary>
Returns the density of a resource, in <math>kg/l</math>.
</summary>
<param name="name">The name of the resource.</param>
</doc>...
.Resources_static_FlowMode.

.name.....!.e..SpaceCenter..ResourceFlowMode*{<doc>
<summary>
Returns the flow mode of a resource.
</summary>
<param name="name">The name of the resource.</param>
</doc>...
.Resources_get_All."
.this...d..SpaceCenter.	Resources....."..d..SpaceCenter..Resource*R<doc>
<summary>
All the individual resources that can be stored.
</summary>
</doc>...
.Resources_get_Names."
.this...d..SpaceCenter.	Resources....."...*N<doc>
<summary>
A list of resource names that can be stored.
</summary>
</doc>...
.Resources_get_Enabled."
.this...d..SpaceCenter.	Resources....*..<doc>
<summary>
Whether use of all the resources are enabled.
</summary>
<remarks>
This is <c>true</c> if all of the resources are enabled.
If any of the resources are not enabled, this is <c>false</c>.
</remarks>
</doc>...
.Resources_set_Enabled."
.this...d..SpaceCenter.	Resources..
.value....*..<doc>
<summary>
Whether use of all the resources are enabled.
</summary>
<remarks>
This is <c>true</c> if all of the resources are enabled.
If any of the resources are not enabled, this is <c>false</c>.
</remarks>
</doc>.h
.Vessel_Recover..
.this...d..SpaceCenter..Vessel*5<doc>
<summary>
Recover the vessel.
</summary>
</doc>...

Vessel_Flight..
.this...d..SpaceCenter..Vessel.4
.referenceFrame...d..SpaceCenter..ReferenceFrame......d..SpaceCenter..Flight*..<doc>
<summary>
Returns a <see cref="T:SpaceCenter.Flight" /> object that can be used to get flight
telemetry for the vessel, in the specified reference frame.
</summary>
<param name="referenceFrame">
Reference frame. Defaults to the vessel's surface reference frame
(<see cref="M:SpaceCenter.Vessel.SurfaceReferenceFrame" />).
</param>
</doc>...
.Vessel_ResourcesInDecoupleStage..
.this...d..SpaceCenter..Vessel..
.stage......

cumulative..........d..SpaceCenter.	Resources*..<doc>
<summary>
Returns a <see cref="T:SpaceCenter.Resources" /> object, that can used to get
information about resources stored in a given <paramref name="stage" />.
</summary>
<param name="stage">Get resources for parts that are decoupled in this stage.</param>
<param name="cumulative">When <c>false</c>, returns the resources for parts
decoupled in just the given stage. When <c>true</c> returns the resources decoupled in
the given stage and all subsequent stages combined.</param>
</doc>...
.Vessel_Position..
.this...d..SpaceCenter..Vessel.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The position of the center of mass of the vessel, in the given reference frame.
</summary>
<returns>The position as a vector.</returns>
<param name="referenceFrame">The reference frame that the returned
position vector is in.</param>
</doc>...
.Vessel_BoundingBox..
.this...d..SpaceCenter..Vessel.1
.referenceFrame...d..SpaceCenter..ReferenceFrame.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The axis-aligned bounding box of the vessel in the given reference frame.
</summary>
<returns>The positions of the minimum and maximum vertices of the box,
as position vectors.</returns>
<param name="referenceFrame">The reference frame that the returned
position vectors are in.</param>
</doc>...
.Vessel_Velocity..
.this...d..SpaceCenter..Vessel.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The velocity of the center of mass of the vessel, in the given reference frame.
</summary>
<returns>The velocity as a vector. The vector points in the direction of travel,
and its magnitude is the speed of the body in meters per second.</returns>
<param name="referenceFrame">The reference frame that the returned
velocity vector is in.</param>
</doc>...
.Vessel_Rotation..
.this...d..SpaceCenter..Vessel.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."..."...*..<doc>
<summary>
The rotation of the vessel, in the given reference frame.
</summary>
<returns>The rotation as a quaternion of the form <math>(x, y, z, w)</math>.</returns>
<param name="referenceFrame">The reference frame that the returned
rotation is in.</param>
</doc>...
.Vessel_Direction..
.this...d..SpaceCenter..Vessel.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The direction in which the vessel is pointing, in the given reference frame.
</summary>
<returns>The direction as a unit vector.</returns>
<param name="referenceFrame">The reference frame that the returned
direction is in.</param>
</doc>...
.Vessel_AngularVelocity..
.this...d..SpaceCenter..Vessel.1
.referenceFrame...d..SpaceCenter..ReferenceFrame....."..."..."...*..<doc>
<summary>
The angular velocity of the vessel, in the given reference frame.
</summary>
<returns>The angular velocity as a vector. The magnitude of the vector is the rotational
speed of the vessel, in radians per second. The direction of the vector indicates the
axis of rotation, using the right-hand rule.</returns>
<param name="referenceFrame">The reference frame the returned
angular velocity is in.</param>
</doc>.q
.Vessel_get_Name..
.this...d..SpaceCenter..Vessel....*9<doc>
<summary>
The name of the vessel.
</summary>
</doc>.z
.Vessel_set_Name..
.this...d..SpaceCenter..Vessel..
.value....*9<doc>
<summary>
The name of the vessel.
</summary>
</doc>...
.Vessel_get_Type..
.this...d..SpaceCenter..Vessel...e..SpaceCenter.
VesselType*9<doc>
<summary>
The type of the vessel.
</summary>
</doc>...
.Vessel_set_Type..
.this...d..SpaceCenter..Vessel.$
.value...e..SpaceCenter.
VesselType*9<doc>
<summary>
The type of the vessel.
</summary>
</doc>...
.Vessel_get_Situation..
.this...d..SpaceCenter..Vessel. .e..SpaceCenter..VesselSituation*A<doc>
<summary>
The situation the vessel is in.
</summary>
</doc>...
.Vessel_get_Recoverable..
.this...d..SpaceCenter..Vessel....*D<doc>
<summary>
Whether the vessel is recoverable.
</summary>
</doc>.}
.Vessel_get_MET..
.this...d..SpaceCenter..Vessel....*F<doc>
<summary>
The mission elapsed time in seconds.
</summary>
</doc>...
.Vessel_get_Biome..
.this...d..SpaceCenter..Vessel....*S<doc>
<summary>
The name of the biome the vessel is currently in.
</summary>
</doc>...
.Vessel_get_Orbit..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..Orbit*B<doc>
<summary>
The current orbit of the vessel.
</summary>
</doc>...
.Vessel_get_Control..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..Control*..<doc>
<summary>
Returns a <see cref="T:SpaceCenter.Control" /> object that can be used to manipulate
the vessel's control inputs. For example, its pitch/yaw/roll controls,
RCS and thrust.
</summary>
</doc>...
.Vessel_get_Comms..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..Comms*..<doc>
<summary>
Returns a <see cref="T:SpaceCenter.Comms" /> object that can be used to interact
with CommNet for this vessel.
</summary>
</doc>...
.Vessel_get_AutoPilot..
.this...d..SpaceCenter..Vessel...d..SpaceCenter.	AutoPilot*..<doc>
<summary>
An <see cref="T:SpaceCenter.AutoPilot" /> object, that can be used to perform
simple auto-piloting of the vessel.
</summary>
</doc>...
.Vessel_get_CrewCapacity..
.this...d..SpaceCenter..Vessel....*P<doc>
<summary>
The number of crew that can occupy the vessel.
</summary>
</doc>...
.Vessel_get_CrewCount..
.this...d..SpaceCenter..Vessel....*S<doc>
<summary>
The number of crew that are occupying the vessel.
</summary>
</doc>...
.Vessel_get_Crew..
.this...d..SpaceCenter..Vessel. ..."..d..SpaceCenter.
CrewMember*9<doc>
<summary>
The crew in the vessel.
</summary>
</doc>...
.Vessel_get_Resources..
.this...d..SpaceCenter..Vessel...d..SpaceCenter.	Resources*..<doc>
<summary>
A <see cref="T:SpaceCenter.Resources" /> object, that can used to get information
about resources stored in the vessel.
</summary>
</doc>...
.Vessel_get_Parts..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..Parts*..<doc>
<summary>
A <see cref="T:SpaceCenter.Parts" /> object, that can used to interact with the parts that make up this vessel.
</summary>
</doc>...
.Vessel_get_Mass..
.this...d..SpaceCenter..Vessel....*[<doc>
<summary>
The total mass of the vessel, including resources, in kg.
</summary>
</doc>...
.Vessel_get_DryMass..
.this...d..SpaceCenter..Vessel....*[<doc>
<summary>
The total mass of the vessel, excluding resources, in kg.
</summary>
</doc>...
.Vessel_get_Thrust..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
The total thrust currently being produced by the vessel's engines, in
Newtons. This is computed by summing <see cref="M:SpaceCenter.Engine.Thrust" /> for
every engine in the vessel.
</summary>
</doc>...
.Vessel_get_AvailableThrust..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
Gets the total available thrust that can be produced by the vessel's
active engines, in Newtons. This is computed by summing
<see cref="M:SpaceCenter.Engine.AvailableThrust" /> for every active engine in the vessel.
</summary>
</doc>...
.Vessel_get_MaxThrust..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
The total maximum thrust that can be produced by the vessel's active
engines, in Newtons. This is computed by summing
<see cref="M:SpaceCenter.Engine.MaxThrust" /> for every active engine.
</summary>
</doc>...
.Vessel_get_MaxVacuumThrust..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
The total maximum thrust that can be produced by the vessel's active
engines when the vessel is in a vacuum, in Newtons. This is computed by
summing <see cref="M:SpaceCenter.Engine.MaxVacuumThrust" /> for every active engine.
</summary>
</doc>...
.Vessel_get_SpecificImpulse..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
The combined specific impulse of all active engines, in seconds. This is computed using the formula
<a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
</summary>
</doc>...
 Vessel_get_VacuumSpecificImpulse..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
The combined vacuum specific impulse of all active engines, in seconds. This is computed using the formula
<a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
</summary>
</doc>...
(Vessel_get_KerbinSeaLevelSpecificImpulse..
.this...d..SpaceCenter..Vessel....*..<doc>
<summary>
The combined specific impulse of all active engines at sea level on Kerbin, in seconds.
This is computed using the formula
<a href="https://wiki.kerbalspaceprogram.com/wiki/Specific_impulse#Multiple_engines">described here</a>.
</summary>
</doc>...
.Vessel_get_MomentOfInertia..
.this...d..SpaceCenter..Vessel....."..."..."...*..<doc>
<summary>
The moment of inertia of the vessel around its center of mass in <math>kg.m^2</math>.
The inertia values in the returned 3-tuple are around the
pitch, roll and yaw directions respectively.
This corresponds to the vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
</summary>
</doc>...
.Vessel_get_InertiaTensor..
.this...d..SpaceCenter..Vessel....."...*..<doc>
<summary>
The inertia tensor of the vessel around its center of mass,
in the vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
Returns the 3x3 matrix as a list of elements, in row-major order.
</summary>
</doc>...
.Vessel_get_AvailableTorque..
.this...d..SpaceCenter..Vessel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque that the vessel generates. Includes contributions from
reaction wheels, RCS, gimballed engines and aerodynamic control surfaces.
Returns the torques in <math>N.m</math> around each of the coordinate axes of the
vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
These axes are equivalent to the pitch, roll and yaw axes of the vessel.
</summary>
</doc>...
'Vessel_get_AvailableReactionWheelTorque..
.this...d..SpaceCenter..Vessel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque that the currently active and powered reaction wheels can generate.
Returns the torques in <math>N.m</math> around each of the coordinate axes of the
vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
These axes are equivalent to the pitch, roll and yaw axes of the vessel.
</summary>
</doc>...
.Vessel_get_AvailableRCSTorque..
.this...d..SpaceCenter..Vessel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque that the currently active RCS thrusters can generate.
Returns the torques in <math>N.m</math> around each of the coordinate axes of the
vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
These axes are equivalent to the pitch, roll and yaw axes of the vessel.
</summary>
</doc>...
 Vessel_get_AvailableEngineTorque..
.this...d..SpaceCenter..Vessel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque that the currently active and gimballed engines can generate.
Returns the torques in <math>N.m</math> around each of the coordinate axes of the
vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
These axes are equivalent to the pitch, roll and yaw axes of the vessel.
</summary>
</doc>...
(Vessel_get_AvailableControlSurfaceTorque..
.this...d..SpaceCenter..Vessel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque that the aerodynamic control surfaces can generate.
Returns the torques in <math>N.m</math> around each of the coordinate axes of the
vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
These axes are equivalent to the pitch, roll and yaw axes of the vessel.
</summary>
</doc>...
.Vessel_get_AvailableOtherTorque..
.this...d..SpaceCenter..Vessel.%..."...."..."..."..."...."..."..."...*..<doc>
<summary>
The maximum torque that parts (excluding reaction wheels, gimballed engines,
RCS and control surfaces) can generate.
Returns the torques in <math>N.m</math> around each of the coordinate axes of the
vessels reference frame (<see cref="T:SpaceCenter.ReferenceFrame" />).
These axes are equivalent to the pitch, roll and yaw axes of the vessel.
</summary>
</doc>...
.Vessel_get_ReferenceFrame..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to the vessel,
and orientated with the vessel.
<list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the vessel.</description></item><item><description>The x-axis points out to the right of the vessel.</description></item><item><description>The y-axis points in the forward direction of the vessel.</description></item><item><description>The z-axis points out of the bottom off the vessel.</description></item></list></summary>
</doc>...
 Vessel_get_OrbitalReferenceFrame..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to the vessel,
and orientated with the vessels orbital prograde/normal/radial directions.
<list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the orbital prograde/normal/radial directions.</description></item><item><description>The x-axis points in the orbital anti-radial direction.</description></item><item><description>The y-axis points in the orbital prograde direction.</description></item><item><description>The z-axis points in the orbital normal direction.</description></item></list></summary>
<remarks>
Be careful not to confuse this with 'orbit' mode on the navball.
</remarks>
</doc>..

 Vessel_get_SurfaceReferenceFrame..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..ReferenceFrame*.	<doc>
<summary>
The reference frame that is fixed relative to the vessel,
and orientated with the surface of the body being orbited.
<list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the north and up directions on the surface of the body.</description></item><item><description>The x-axis points in the <a href="https://en.wikipedia.org/wiki/Zenith">zenith</a>
direction (upwards, normal to the body being orbited, from the center of the body towards the center of
mass of the vessel).</description></item><item><description>The y-axis points northwards towards the
<a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a> (north, and tangential to the
surface of the body -- the direction in which a compass would point when on the surface).</description></item><item><description>The z-axis points eastwards towards the
<a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a> (east, and tangential to the
surface of the body -- east on a compass when on the surface).</description></item></list></summary>
<remarks>
Be careful not to confuse this with 'surface' mode on the navball.
</remarks>
</doc>...
(Vessel_get_SurfaceVelocityReferenceFrame..
.this...d..SpaceCenter..Vessel...d..SpaceCenter..ReferenceFrame*..<doc>
<summary>
The reference frame that is fixed relative to the vessel,
and orientated with the velocity vector of the vessel relative
to the surface of the body being orbited.
<list type="bullet"><item><description>The origin is at the center of mass of the vessel.</description></item><item><description>The axes rotate with the vessel's velocity vector.</description></item><item><description>The y-axis points in the direction of the vessel's velocity vector,
relative to the surface of the body being orbited.</description></item><item><description>The z-axis is in the plane of the
<a href="https://en.wikipedia.org/wiki/Horizon">astronomical horizon</a>.</description></item><item><description>The x-axis is orthogonal to the other two axes.</description></item></list></summary>
</doc>.m
.Waypoint_Remove.!
.this...d..SpaceCenter..Waypoint*7<doc>
<summary>
Removes the waypoint.
</summary>
</doc>...
.Waypoint_get_Body.!
.this...d..SpaceCenter..Waypoint...d..SpaceCenter.
CelestialBody*Q<doc>
<summary>
The celestial body the waypoint is attached to.
</summary>
</doc>...
.Waypoint_set_Body.!
.this...d..SpaceCenter..Waypoint.'
.value...d..SpaceCenter.
CelestialBody*Q<doc>
<summary>
The celestial body the waypoint is attached to.
</summary>
</doc>...
.Waypoint_get_Name.!
.this...d..SpaceCenter..Waypoint....*e<doc>
<summary>
The name of the waypoint as it appears on the map and the contract.
</summary>
</doc>...
.Waypoint_set_Name.!
.this...d..SpaceCenter..Waypoint..
.value....*e<doc>
<summary>
The name of the waypoint as it appears on the map and the contract.
</summary>
</doc>...
.Waypoint_get_Color.!
.this...d..SpaceCenter..Waypoint....*..<doc>
<summary>
The seed of the icon color. See <see cref="M:SpaceCenter.WaypointManager.Colors" /> for example colors.
</summary>
</doc>...
.Waypoint_set_Color.!
.this...d..SpaceCenter..Waypoint..
.value....*..<doc>
<summary>
The seed of the icon color. See <see cref="M:SpaceCenter.WaypointManager.Colors" /> for example colors.
</summary>
</doc>.w
.Waypoint_get_Icon.!
.this...d..SpaceCenter..Waypoint....*;<doc>
<summary>
The icon of the waypoint.
</summary>
</doc>...
.Waypoint_set_Icon.!
.this...d..SpaceCenter..Waypoint..
.value....*;<doc>
<summary>
The icon of the waypoint.
</summary>
</doc>..
.Waypoint_get_Latitude.!
.this...d..SpaceCenter..Waypoint....*?<doc>
<summary>
The latitude of the waypoint.
</summary>
</doc>...
.Waypoint_set_Latitude.!
.this...d..SpaceCenter..Waypoint..
.value....*?<doc>
<summary>
The latitude of the waypoint.
</summary>
</doc>...
.Waypoint_get_Longitude.!
.this...d..SpaceCenter..Waypoint....*@<doc>
<summary>
The longitude of the waypoint.
</summary>
</doc>...
.Waypoint_set_Longitude.!
.this...d..SpaceCenter..Waypoint..
.value....*@<doc>
<summary>
The longitude of the waypoint.
</summary>
</doc>...
.Waypoint_get_MeanAltitude.!
.this...d..SpaceCenter..Waypoint....*Z<doc>
<summary>
The altitude of the waypoint above sea level, in meters.
</summary>
</doc>...
.Waypoint_set_MeanAltitude.!
.this...d..SpaceCenter..Waypoint..
.value....*Z<doc>
<summary>
The altitude of the waypoint above sea level, in meters.
</summary>
</doc>...
.Waypoint_get_SurfaceAltitude.!
.this...d..SpaceCenter..Waypoint....*..<doc>
<summary>
The altitude of the waypoint above the surface of the body or sea level,
whichever is closer, in meters.
</summary>
</doc>...
.Waypoint_set_SurfaceAltitude.!
.this...d..SpaceCenter..Waypoint..
.value....*..<doc>
<summary>
The altitude of the waypoint above the surface of the body or sea level,
whichever is closer, in meters.
</summary>
</doc>...
.Waypoint_get_BedrockAltitude.!
.this...d..SpaceCenter..Waypoint....*..<doc>
<summary>
The altitude of the waypoint above the surface of the body, in meters.
When over water, this is the altitude above the sea floor.
</summary>
</doc>...
.Waypoint_set_BedrockAltitude.!
.this...d..SpaceCenter..Waypoint..
.value....*..<doc>
<summary>
The altitude of the waypoint above the surface of the body, in meters.
When over water, this is the altitude above the sea floor.
</summary>
</doc>...
.Waypoint_get_NearSurface.!
.this...d..SpaceCenter..Waypoint....*^<doc>
<summary><c>true</c> if the waypoint is near to the surface of a body.
</summary>
</doc>...
.Waypoint_get_Grounded.!
.this...d..SpaceCenter..Waypoint....*W<doc>
<summary><c>true</c> if the waypoint is attached to the ground.
</summary>
</doc>...
.Waypoint_get_Index.!
.this...d..SpaceCenter..Waypoint....*..<doc>
<summary>
The integer index of this waypoint within its cluster of sibling waypoints.
In other words, when you have a cluster of waypoints called "Somewhere Alpha",
"Somewhere Beta" and "Somewhere Gamma", the alpha site has index 0, the beta
site has index 1 and the gamma site has index 2.
When <see cref="M:SpaceCenter.Waypoint.Clustered" /> is <c>false</c>, this is zero.
</summary>
</doc>...
.Waypoint_get_Clustered.!
.this...d..SpaceCenter..Waypoint....*..<doc>
<summary><c>true</c> if this waypoint is part of a set of clustered waypoints with greek letter
names appended (Alpha, Beta, Gamma, etc).
If <c>true</c>, there is a one-to-one correspondence with the greek letter name and
the <see cref="M:SpaceCenter.Waypoint.Index" />.
</summary>
</doc>...
.Waypoint_get_HasContract.!
.this...d..SpaceCenter..Waypoint....*M<doc>
<summary>
Whether the waypoint belongs to a contract.
</summary>
</doc>...
.Waypoint_get_Contract.!
.this...d..SpaceCenter..Waypoint...d..SpaceCenter..Contract*:<doc>
<summary>
The associated contract.
</summary>
</doc>...
.WaypointManager_AddWaypoint.(
.this. .d..SpaceCenter..WaypointManager..
.latitude......
	longitude.....&
.body...d..SpaceCenter.
CelestialBody.

.name.......d..SpaceCenter..Waypoint*..<doc>
<summary>
Creates a waypoint at the given position at ground level, and returns a
<see cref="T:SpaceCenter.Waypoint" /> object that can be used to modify it.
</summary>
<param name="latitude">Latitude of the waypoint.</param>
<param name="longitude">Longitude of the waypoint.</param>
<param name="body">Celestial body the waypoint is attached to.</param>
<param name="name">Name of the waypoint.</param>
<returns></returns>
</doc>...
%WaypointManager_AddWaypointAtAltitude.(
.this. .d..SpaceCenter..WaypointManager..
.latitude......
	longitude......
.altitude.....&
.body...d..SpaceCenter.
CelestialBody.

.name.......d..SpaceCenter..Waypoint*..<doc>
<summary>
Creates a waypoint at the given position and altitude, and returns a
<see cref="T:SpaceCenter.Waypoint" /> object that can be used to modify it.
</summary>
<param name="latitude">Latitude of the waypoint.</param>
<param name="longitude">Longitude of the waypoint.</param>
<param name="altitude">Altitude (above sea level) of the waypoint.</param>
<param name="body">Celestial body the waypoint is attached to.</param>
<param name="name">Name of the waypoint.</param>
<returns></returns>
</doc>...
.WaypointManager_get_Waypoints.(
.this. .d..SpaceCenter..WaypointManager....."..d..SpaceCenter..Waypoint*C<doc>
<summary>
A list of all existing waypoints.
</summary>
</doc>...
.WaypointManager_get_Icons.(
.this. .d..SpaceCenter..WaypointManager....."...*g<doc>
<summary>
Returns all available icons (from "GameData/Squad/Contracts/Icons/").
</summary>
</doc>...
.WaypointManager_get_Colors.(
.this. .d..SpaceCenter..WaypointManager....."..."...*u<doc>
<summary>
An example map of known color - seed pairs.
Any other integers may be used as seed.
</summary>
</doc>...
	AutoPilot...<doc>
<summary>
Provides basic auto-piloting utilities for a vessel.
Created by calling <see cref="M:SpaceCenter.Vessel.AutoPilot" />.
</summary>
<remarks>
If a client engages the auto-pilot and then closes its connection to the server,
the auto-pilot will be disengaged and its target reference frame, direction and roll
reset to default.
</remarks>
</doc>...
.Camera.v<doc>
<summary>
Controls the game's camera.
Obtained by calling <see cref="M:SpaceCenter.Camera" />.
</summary>
</doc>...

CelestialBody...<doc>
<summary>
Represents a celestial body (such as a planet or moon).
See <see cref="M:SpaceCenter.Bodies" />.
</summary>
</doc>..
.CommLink.s<doc>
<summary>
Represents a communication node in the network. For example, a vessel or the KSC.
</summary>
</doc>..
.CommNode.s<doc>
<summary>
Represents a communication node in the network. For example, a vessel or the KSC.
</summary>
</doc>...
.Comms...<doc>
<summary>
Used to interact with CommNet for a given vessel.
Obtained by calling <see cref="M:SpaceCenter.Vessel.Comms" />.
</summary>
</doc>.}
.Contract.q<doc>
<summary>
A contract. Can be accessed using <see cref="M:SpaceCenter.ContractManager" />.
</summary>
</doc>...
.ContractManager.v<doc>
<summary>
Contracts manager.
Obtained by calling <see cref="M:SpaceCenter.ContractManager" />.
</summary>
</doc>...
.ContractParameter.m<doc>
<summary>
A contract parameter. See <see cref="M:SpaceCenter.Contract.Parameters" />.
</summary>
</doc>...
.Control...<doc>
<summary>
Used to manipulate the controls of a vessel. This includes adjusting the
throttle, enabling/disabling systems such as SAS and RCS, or altering the
direction in which the vessel is pointing.
Obtained by calling <see cref="M:SpaceCenter.Vessel.Control" />.
</summary>
<remarks>
Control inputs (such as pitch, yaw and roll) are zeroed when all clients
that have set one or more of these inputs are no longer connected.
</remarks>
</doc>...

CrewMember.~<doc>
<summary>
Represents crew in a vessel. Can be obtained using <see cref="M:SpaceCenter.Vessel.Crew" />.
</summary>
</doc>...
.Flight...<doc>
<summary>
Used to get flight telemetry for a vessel, by calling <see cref="M:SpaceCenter.Vessel.Flight" />.
All of the information returned by this class is given in the reference frame
passed to that method.
Obtained by calling <see cref="M:SpaceCenter.Vessel.Flight" />.
</summary>
<remarks>
To get orbital information, such as the apoapsis or inclination, see <see cref="T:SpaceCenter.Orbit" />.
</remarks>
</doc>...
.Node...<doc>
<summary>
Represents a maneuver node. Can be created using <see cref="M:SpaceCenter.Control.AddNode" />.
</summary>
</doc>...
.Orbit...<doc>
<summary>
Describes an orbit. For example, the orbit of a vessel, obtained by calling
<see cref="M:SpaceCenter.Vessel.Orbit" />, or a celestial body, obtained by calling
<see cref="M:SpaceCenter.CelestialBody.Orbit" />.
</summary>
</doc>.w
.Antenna.l<doc>
<summary>
An antenna. Obtained by calling <see cref="M:SpaceCenter.Part.Antenna" />.
</summary>
</doc>.z
.CargoBay.n<doc>
<summary>
A cargo bay. Obtained by calling <see cref="M:SpaceCenter.Part.CargoBay" />.
</summary>
</doc>...
.ControlSurface...<doc>
<summary>
An aerodynamic control surface. Obtained by calling <see cref="M:SpaceCenter.Part.ControlSurface" />.
</summary>
</doc>.z
	Decoupler.m<doc>
<summary>
A decoupler. Obtained by calling <see cref="M:SpaceCenter.Part.Decoupler" /></summary>
</doc>...
.DockingPort.r<doc>
<summary>
A docking port. Obtained by calling <see cref="M:SpaceCenter.Part.DockingPort" /></summary>
</doc>...
.Engine...<doc>
<summary>
An engine, including ones of various types.
For example liquid fuelled gimballed engines, solid rocket boosters and jet engines.
Obtained by calling <see cref="M:SpaceCenter.Part.Engine" />.
</summary>
<remarks>
For RCS thrusters <see cref="M:SpaceCenter.Part.RCS" />.
</remarks>
</doc>.q

Experiment.c<doc>
<summary>
Obtained by calling <see cref="M:SpaceCenter.Part.Experiment" />.
</summary>
</doc>...
.Fairing...<doc>
<summary>
A fairing. Obtained by calling <see cref="M:SpaceCenter.Part.Fairing" />.
Supports both stock fairings, and those from the ProceduralFairings mod.
</summary>
</doc>.j
.Force.a<doc>
<summary>
Obtained by calling <see cref="M:SpaceCenter.Part.AddForce" />.
</summary>
</doc>.x
.Intake.n<doc>
<summary>
An air intake. Obtained by calling <see cref="M:SpaceCenter.Part.Intake" />.
</summary>
</doc>...
.LaunchClamp.t<doc>
<summary>
A launch clamp. Obtained by calling <see cref="M:SpaceCenter.Part.LaunchClamp" />.
</summary>
</doc>.r
.Leg.k<doc>
<summary>
A landing leg. Obtained by calling <see cref="M:SpaceCenter.Part.Leg" />.
</summary>
</doc>.p
.Light.g<doc>
<summary>
A light. Obtained by calling <see cref="M:SpaceCenter.Part.Light" />.
</summary>
</doc>...
.Module...<doc>
<summary>
This can be used to interact with a specific part module. This includes part modules in
stock KSP, and those added by mods.

In KSP, each part has zero or more
<a href="https://wiki.kerbalspaceprogram.com/wiki/CFG_File_Documentation#MODULES">PartModules</a>
associated with it. Each one contains some of the functionality of the part.
For example, an engine has a "ModuleEngines" part module that contains all the
functionality of an engine.
</summary>
</doc>.|
	Parachute.o<doc>
<summary>
A parachute. Obtained by calling <see cref="M:SpaceCenter.Part.Parachute" />.
</summary>
</doc>...
.Part...<doc>
<summary>
Represents an individual part. Vessels are made up of multiple parts.
Instances of this class can be obtained by several methods in <see cref="T:SpaceCenter.Parts" />.
</summary>
</doc>...
.Parts...<doc>
<summary>
Instances of this class are used to interact with the parts of a vessel.
An instance can be obtained by calling <see cref="M:SpaceCenter.Vessel.Parts" />.
</summary>
</doc>...

Propellant...<doc>
<summary>
A propellant for an engine. Obtains by calling <see cref="M:SpaceCenter.Engine.Propellants" />.
</summary>
</doc>.}
.RCS.v<doc>
<summary>
An RCS block or thruster. Obtained by calling <see cref="M:SpaceCenter.Part.RCS" />.
</summary>
</doc>.y
.Radiator.m<doc>
<summary>
A radiator. Obtained by calling <see cref="M:SpaceCenter.Part.Radiator" />.
</summary>
</doc>...

ReactionWheel.x<doc>
<summary>
A reaction wheel. Obtained by calling <see cref="M:SpaceCenter.Part.ReactionWheel" />.
</summary>
</doc>...
.ResourceConverter...<doc>
<summary>
A resource converter. Obtained by calling <see cref="M:SpaceCenter.Part.ResourceConverter" />.
</summary>
</doc>...
.ResourceHarvester...<doc>
<summary>
A resource harvester (drill). Obtained by calling <see cref="M:SpaceCenter.Part.ResourceHarvester" />.
</summary>
</doc>.r
.ScienceData.c<doc>
<summary>
Obtained by calling <see cref="M:SpaceCenter.Experiment.Data" />.
</summary>
</doc>..
.ScienceSubject.m<doc>
<summary>
Obtained by calling <see cref="M:SpaceCenter.Experiment.ScienceSubject" />.
</summary>
</doc>...
.Sensor...<doc>
<summary>
A sensor, such as a thermometer. Obtained by calling <see cref="M:SpaceCenter.Part.Sensor" />.
</summary>
</doc>...

SolarPanel.r<doc>
<summary>
A solar panel. Obtained by calling <see cref="M:SpaceCenter.Part.SolarPanel" />.
</summary>
</doc>...
.Thruster...<doc>
<summary>
The component of an <see cref="T:SpaceCenter.Engine" /> or <see cref="T:SpaceCenter.RCS" /> part that generates thrust.
Can obtained by calling <see cref="M:SpaceCenter.Engine.Thrusters" /> or <see cref="M:SpaceCenter.RCS.Thrusters" />.
</summary>
<remarks>
Engines can consist of multiple thrusters.
For example, the S3 KS-25x4 "Mammoth" has four rocket nozzels, and so consists of
four thrusters.
</remarks>
</doc>...
.Wheel...<doc>
<summary>
A wheel. Includes landing gear and rover wheels.
Obtained by calling <see cref="M:SpaceCenter.Part.Wheel" />.
Can be used to control the motors, steering and deployment of wheels, among other things.
</summary>
</doc>...
.ReferenceFrame...<doc>
<summary>
Represents a reference frame for positions, rotations and
velocities. Contains:
<list type="bullet"><item><description>The position of the origin.</description></item><item><description>The directions of the x, y and z axes.</description></item><item><description>The linear velocity of the frame.</description></item><item><description>The angular velocity of the frame.</description></item></list></summary>
<remarks>
This class does not contain any properties or methods. It is only
used as a parameter to other functions.
</remarks>
</doc>...
.Resource...<doc>
<summary>
An individual resource stored within a part.
Created using methods in the <see cref="T:SpaceCenter.Resources" /> class.
</summary>
</doc>.W
.ResourceTransfer.C<doc>
<summary>
Transfer resources between parts.
</summary>
</doc>...
	Resources...<doc>
<summary>
Represents the collection of resources stored in a vessel, stage or part.
Created by calling <see cref="M:SpaceCenter.Vessel.Resources" />,
<see cref="M:SpaceCenter.Vessel.ResourcesInDecoupleStage" /> or
<see cref="M:SpaceCenter.Part.Resources" />.
</summary>
</doc>...
.Vessel...<doc>
<summary>
These objects are used to interact with vessels in KSP. This includes getting
orbital and flight data, manipulating control inputs and managing resources.
Created using <see cref="M:SpaceCenter.ActiveVessel" /> or <see cref="M:SpaceCenter.Vessels" />.
</summary>
</doc>...
.Waypoint...<doc>
<summary>
Represents a waypoint. Can be created using <see cref="M:SpaceCenter.WaypointManager.AddWaypoint" />.
</summary>
</doc>...
.WaypointManager...<doc>
<summary>
Waypoints are the location markers you can see on the map view showing you where contracts are targeted for.
With this structure, you can obtain coordinate data for the locations of these waypoints.
Obtained by calling <see cref="M:SpaceCenter.WaypointManager" />.
</summary>
</doc>"..

CameraMode.g
	Automatic.Z<doc>
<summary>
The camera is showing the active vessel, in "auto" mode.
</summary>
</doc>.d
.Free...Z<doc>
<summary>
The camera is showing the active vessel, in "free" mode.
</summary>
</doc>.f
.Chase...[<doc>
<summary>
The camera is showing the active vessel, in "chase" mode.
</summary>
</doc>.h
.Locked...\<doc>
<summary>
The camera is showing the active vessel, in "locked" mode.
</summary>
</doc>.j
.Orbital...]<doc>
<summary>
The camera is showing the active vessel, in "orbital" mode.
</summary>
</doc>.\
.IVA...S<doc>
<summary>
The Intra-Vehicular Activity view is being shown.
</summary>
</doc>.G
.Map...><doc>
<summary>
The map view is being shown.
</summary>
</doc>.O<doc>
<summary>
See <see cref="M:SpaceCenter.Camera.Mode" />.
</summary>
</doc>"..
.CommLinkType.N
.Home.F<doc>
<summary>
Link is to a base station on Kerbin.
</summary>
</doc>.l
.Control..._<doc>
<summary>
Link is to a control source, for example a manned spacecraft.
</summary>
</doc>.J
.Relay...?<doc>
<summary>
Link is to a relay satellite.
</summary>
</doc>.s<doc>
<summary>
The type of a communication link.
See <see cref="M:SpaceCenter.CommLink.Type" />.
</summary>
</doc>"..

ContractState.C
.Active.9<doc>
<summary>
The contract is active.
</summary>
</doc>.O
.Canceled...A<doc>
<summary>
The contract has been canceled.
</summary>
</doc>.Q
	Completed...B<doc>
<summary>
The contract has been completed.
</summary>
</doc>.a
.DeadlineExpired...L<doc>
<summary>
The deadline for the contract has expired.
</summary>
</doc>.O
.Declined...A<doc>
<summary>
The contract has been declined.
</summary>
</doc>.K
.Failed...?<doc>
<summary>
The contract has been failed.
</summary>
</doc>.Q
	Generated...B<doc>
<summary>
The contract has been generated.
</summary>
</doc>.[
.Offered...N<doc>
<summary>
The contract has been offered to the player.
</summary>
</doc>.r
.OfferExpired...`<doc>
<summary>
The contract was offered to the player, but the offer expired.
</summary>
</doc>.Q
	Withdrawn.	.B<doc>
<summary>
The contract has been withdrawn.
</summary>
</doc>.k<doc>
<summary>
The state of a contract. See <see cref="M:SpaceCenter.Contract.State" />.
</summary>
</doc>"..
.ControlInputMode.m
.Additive.a<doc>
<summary>
Control inputs are added to the vessels current control inputs.
</summary>
</doc>...
.Override...v<doc>
<summary>
Control inputs (when they are non-zero) override the vessels current control inputs.
</summary>
</doc>.U<doc>
<summary>
See <see cref="M:SpaceCenter.Control.InputMode" />.
</summary>
</doc>"..

ControlSource.M
.Kerbal.C<doc>
<summary>
Vessel is controlled by a Kerbal.
</summary>
</doc>.R
.Probe...G<doc>
<summary>
Vessel is controlled by a probe core.
</summary>
</doc>.E
.None...;<doc>
<summary>
Vessel is not controlled.
</summary>
</doc>.r<doc>
<summary>
The control source of a vessel.
See <see cref="M:SpaceCenter.Control.Source" />.
</summary>
</doc>"..
.ControlState.<
.Full.4<doc>
<summary>
Full controllable.
</summary>
</doc>.F
.Partial...9<doc>
<summary>
Partially controllable.
</summary>
</doc>.=
.None...3<doc>
<summary>
Not controllable.
</summary>
</doc>.p<doc>
<summary>
The control state of a vessel.
See <see cref="M:SpaceCenter.Control.State" />.
</summary>
</doc>"..
.CrewMemberType.E
	Applicant.8<doc>
<summary>
An applicant for crew.
</summary>
</doc>.8
.Crew....<doc>
<summary>
Rocket crew.
</summary>
</doc>.9
.Tourist...,<doc>
<summary>
A tourist.
</summary>
</doc>.F
.Unowned...9<doc>
<summary>
An unowned crew member.
</summary>
</doc>.n<doc>
<summary>
The type of a crew member.
See <see cref="M:SpaceCenter.CrewMember.Type" />.
</summary>
</doc>"..
.GameMode.:
.Sandbox./<doc>
<summary>
Sandbox mode.
</summary>
</doc>.:
.Career....<doc>
<summary>
Career mode.
</summary>
</doc>.C
.Science...6<doc>
<summary>
Science career mode.
</summary>
</doc>.K
.ScienceSandbox...7<doc>
<summary>
Science sandbox mode.
</summary>
</doc>.<
.Mission.../<doc>
<summary>
Mission mode.
</summary>
</doc>.K
.MissionBuilder...7<doc>
<summary>
Mission builder mode.
</summary>
</doc>.>
.Scenario...0<doc>
<summary>
Scenario mode.
</summary>
</doc>.a
.ScenarioNonResumable...G<doc>
<summary>
Scenario mode that cannot be resumed.
</summary>
</doc>.a<doc>
<summary>
The game mode.
Returned by <see cref="T:SpaceCenter.GameMode" /></summary>
</doc>"..
.AntennaState.H
.Deployed.<<doc>
<summary>
Antenna is fully deployed.
</summary>
</doc>.L
	Retracted...=<doc>
<summary>
Antenna is fully retracted.
</summary>
</doc>.K
	Deploying...<<doc>
<summary>
Antenna is being deployed.
</summary>
</doc>.M

Retracting...=<doc>
<summary>
Antenna is being retracted.
</summary>
</doc>.@
.Broken...4<doc>
<summary>
Antenna is broken.
</summary>
</doc>.j<doc>
<summary>
The state of an antenna. See <see cref="M:SpaceCenter.Antenna.State" />.
</summary>
</doc>"..

CargoBayState.B
.Open.:<doc>
<summary>
Cargo bay is fully open.
</summary>
</doc>.J
.Closed...><doc>
<summary>
Cargo bay closed and locked.
</summary>
</doc>.D
.Opening...7<doc>
<summary>
Cargo bay is opening.
</summary>
</doc>.D
.Closing...7<doc>
<summary>
Cargo bay is closing.
</summary>
</doc>.l<doc>
<summary>
The state of a cargo bay. See <see cref="M:SpaceCenter.CargoBay.State" />.
</summary>
</doc>"..
.DockingPortState.e
.Ready.\<doc>
<summary>
The docking port is ready to dock to another docking port.
</summary>
</doc>...
.Docked.....<doc>
<summary>
The docking port is docked to another docking port, or docked to
another part (from the VAB/SPH).
</summary>
</doc>...
.Docking.....<doc>
<summary>
The docking port is very close to another docking port,
but has not docked. It is using magnetic force to acquire a solid dock.
</summary>
</doc>...
	Undocking.....<doc>
<summary>
The docking port has just been undocked from another docking port,
and is disabled until it moves away by a sufficient distance
(<see cref="M:SpaceCenter.DockingPort.ReengageDistance" />).
</summary>
</doc>.h
.Shielded...Z<doc>
<summary>
The docking port has a shield, and the shield is closed.
</summary>
</doc>.d
.Moving...X<doc>
<summary>
The docking ports shield is currently opening/closing.
</summary>
</doc>.r<doc>
<summary>
The state of a docking port. See <see cref="M:SpaceCenter.DockingPort.State" />.
</summary>
</doc>"..
.LegState.L
.Deployed.@<doc>
<summary>
Landing leg is fully deployed.
</summary>
</doc>.P
	Retracted...A<doc>
<summary>
Landing leg is fully retracted.
</summary>
</doc>.O
	Deploying...@<doc>
<summary>
Landing leg is being deployed.
</summary>
</doc>.Q

Retracting...A<doc>
<summary>
Landing leg is being retracted.
</summary>
</doc>.D
.Broken...8<doc>
<summary>
Landing leg is broken.
</summary>
</doc>.i<doc>
<summary>
The state of a landing leg. See <see cref="M:SpaceCenter.Leg.State" />.
</summary>
</doc>"..

MotorState.<
.Idle.4<doc>
<summary>
The motor is idle.
</summary>
</doc>.D
.Running...7<doc>
<summary>
The motor is running.
</summary>
</doc>.F
.Disabled...8<doc>
<summary>
The motor is disabled.
</summary>
</doc>.J

Inoperable...:<doc>
<summary>
The motor is inoperable.
</summary>
</doc>.j
.NotEnoughResources...R<doc>
<summary>
The motor does not have enough resources to run.
</summary>
</doc>..<doc>
<summary>
The state of the motor on a powered wheel. See <see cref="M:SpaceCenter.Wheel.MotorState" />.
</summary>
</doc>"..
.ParachuteState.c
.Stowed.Y<doc>
<summary>
The parachute is safely tucked away inside its housing.
</summary>
</doc>.e
.Armed...Z<doc>
<summary>
The parachute is armed for deployment. (RealChutes only)
</summary>
</doc>.~
.Active...r<doc>
<summary>
The parachute is still stowed, but ready to semi-deploy.
(Stock parachutes only)
</summary>
</doc>...
.SemiDeployed.....<doc>
<summary>
The parachute has been deployed and is providing some drag,
but is not fully deployed yet. (Stock parachutes only)
</summary>
</doc>.P
.Deployed...B<doc>
<summary>
The parachute is fully deployed.
</summary>
</doc>.F
.Cut...=<doc>
<summary>
The parachute has been cut.
</summary>
</doc>.m<doc>
<summary>
The state of a parachute. See <see cref="M:SpaceCenter.Parachute.State" />.
</summary>
</doc>"..

RadiatorState.I
.Extended.=<doc>
<summary>
Radiator is fully extended.
</summary>
</doc>.M
	Retracted...><doc>
<summary>
Radiator is fully retracted.
</summary>
</doc>.L
	Extending...=<doc>
<summary>
Radiator is being extended.
</summary>
</doc>.N

Retracting...><doc>
<summary>
Radiator is being retracted.
</summary>
</doc>.G
.Broken...;<doc>
<summary>
Radiator is being broken.
</summary>
</doc>.d<doc>
<summary>
The state of a radiator. <see cref="T:SpaceCenter.RadiatorState" /></summary>
</doc>"..
.ResourceConverterState.B
.Running.7<doc>
<summary>
Converter is running.
</summary>
</doc>.>
.Idle...4<doc>
<summary>
Converter is idle.
</summary>
</doc>.`
.MissingResource...K<doc>
<summary>
Converter is missing a required resource.
</summary>
</doc>.\
.StorageFull...K<doc>
<summary>
No available storage for output resource.
</summary>
</doc>.L
.Capacity...><doc>
<summary>
At preset resource capacity.
</summary>
</doc>...
.Unknown.....<doc>
<summary>
Unknown state. Possible with modified resource converters.
In this case, check <see cref="M:SpaceCenter.ResourceConverter.StatusInfo" /> for more information.
</summary>
</doc>.~<doc>
<summary>
The state of a resource converter. See <see cref="M:SpaceCenter.ResourceConverter.State" />.
</summary>
</doc>"..
.ResourceHarvesterState.F
	Deploying.9<doc>
<summary>
The drill is deploying.
</summary>
</doc>.P
.Deployed...B<doc>
<summary>
The drill is deployed and ready.
</summary>
</doc>.J

Retracting...:<doc>
<summary>
The drill is retracting.
</summary>
</doc>.H
	Retracted...9<doc>
<summary>
The drill is retracted.
</summary>
</doc>.C
.Active...7<doc>
<summary>
The drill is running.
</summary>
</doc>.~<doc>
<summary>
The state of a resource harvester. See <see cref="M:SpaceCenter.ResourceHarvester.State" />.
</summary>
</doc>"..
.SolarPanelState.L
.Extended.@<doc>
<summary>
Solar panel is fully extended.
</summary>
</doc>.P
	Retracted...A<doc>
<summary>
Solar panel is fully retracted.
</summary>
</doc>.O
	Extending...@<doc>
<summary>
Solar panel is being extended.
</summary>
</doc>.Q

Retracting...A<doc>
<summary>
Solar panel is being retracted.
</summary>
</doc>.D
.Broken...8<doc>
<summary>
Solar panel is broken.
</summary>
</doc>.p<doc>
<summary>
The state of a solar panel. See <see cref="M:SpaceCenter.SolarPanel.State" />.
</summary>
</doc>"..

WheelState.F
.Deployed.:<doc>
<summary>
Wheel is fully deployed.
</summary>
</doc>.J
	Retracted...;<doc>
<summary>
Wheel is fully retracted.
</summary>
</doc>.I
	Deploying...:<doc>
<summary>
Wheel is being deployed.
</summary>
</doc>.K

Retracting...;<doc>
<summary>
Wheel is being retracted.
</summary>
</doc>.>
.Broken...2<doc>
<summary>
Wheel is broken.
</summary>
</doc>.e<doc>
<summary>
The state of a wheel. See <see cref="M:SpaceCenter.Wheel.State" />.
</summary>
</doc>"..
.ResourceFlowMode.w
.Vessel.m<doc>
<summary>
The resource flows to any part in the vessel. For example, electric charge.
</summary>
</doc>...
.Stage.....<doc>
<summary>
The resource flows from parts in the first stage, followed by the second,
and so on. For example, mono-propellant.
</summary>
</doc>...
.Adjacent.....<doc>
<summary>
The resource flows between adjacent parts within the vessel. For example,
liquid fuel or oxidizer.
</summary>
</doc>.`
.None...V<doc>
<summary>
The resource does not flow. For example, solid fuel.
</summary>
</doc>...<doc>
<summary>
The way in which a resource flows between parts. See <see cref="M:SpaceCenter.Resources.FlowMode" />.
</summary>
</doc>"..
.SASMode.d
.StabilityAssist.Q<doc>
<summary>
Stability assist mode. Dampen out any rotation.
</summary>
</doc>.f
.Maneuver...X<doc>
<summary>
Point in the burn direction of the next maneuver node.
</summary>
</doc>.P
.Prograde...B<doc>
<summary>
Point in the prograde direction.
</summary>
</doc>.T

Retrograde...D<doc>
<summary>
Point in the retrograde direction.
</summary>
</doc>.R
.Normal...F<doc>
<summary>
Point in the orbit normal direction.
</summary>
</doc>.[

AntiNormal...K<doc>
<summary>
Point in the orbit anti-normal direction.
</summary>
</doc>.R
.Radial...F<doc>
<summary>
Point in the orbit radial direction.
</summary>
</doc>.[

AntiRadial...K<doc>
<summary>
Point in the orbit anti-radial direction.
</summary>
</doc>.[
.Target...O<doc>
<summary>
Point in the direction of the current target.
</summary>
</doc>.U

AntiTarget.	.E<doc>
<summary>
Point away from the current target.
</summary>
</doc>.y<doc>
<summary>
The behavior of the SAS auto-pilot. See <see cref="M:SpaceCenter.AutoPilot.SASMode" />.
</summary>
</doc>"..
	SpeedMode.S
.Orbit.J<doc>
<summary>
Speed is relative to the vessel's orbit.
</summary>
</doc>.j
.Surface...]<doc>
<summary>
Speed is relative to the surface of the body being orbited.
</summary>
</doc>.V
.Target...J<doc>
<summary>
Speed is relative to the current target.
</summary>
</doc>...<doc>
<summary>
The mode of the speed reported in the navball.
See <see cref="M:SpaceCenter.Control.SpeedMode" />.
</summary>
</doc>"..
.VesselSituation.I
	PreLaunch.<<doc>
<summary>
Vessel is awaiting launch.
</summary>
</doc>.J
.Orbiting...<<doc>
<summary>
Vessel is orbiting a body.
</summary>
</doc>.X

SubOrbital...H<doc>
<summary>
Vessel is on a sub-orbital trajectory.
</summary>
</doc>.9
.Escaping...+<doc>
<summary>
Escaping.
</summary>
</doc>.U
.Flying...I<doc>
<summary>
Vessel is flying through an atmosphere.
</summary>
</doc>.X
.Landed...L<doc>
<summary>
Vessel is landed on the surface of a body.
</summary>
</doc>.U
.Splashed...G<doc>
<summary>
Vessel has splashed down in an ocean.
</summary>
</doc>.J
.Docked...><doc>
<summary>
Vessel is docked to another.
</summary>
</doc>.r<doc>
<summary>
The situation a vessel is in.
See <see cref="M:SpaceCenter.Vessel.Situation" />.
</summary>
</doc>"..

VesselType./
.Base.'<doc>
<summary>
Base.
</summary>
</doc>.5
.Debris...)<doc>
<summary>
Debris.
</summary>
</doc>.5
.Lander...)<doc>
<summary>
Lander.
</summary>
</doc>.3
.Plane...(<doc>
<summary>
Plane.
</summary>
</doc>.3
.Probe...(<doc>
<summary>
Probe.
</summary>
</doc>.3
.Relay...(<doc>
<summary>
Relay.
</summary>
</doc>.3
.Rover...(<doc>
<summary>
Rover.
</summary>
</doc>.1
.Ship...'<doc>
<summary>
Ship.
</summary>
</doc>.7
.Station...*<doc>
<summary>
Station.
</summary>
</doc>.e<doc>
<summary>
The type of a vessel.
See <see cref="M:SpaceCenter.Vessel.Type" />.
</summary>
</doc>"..
.WarpMode._
.Rails.V<doc>
<summary>
Time warp is active, and in regular "on-rails" mode.
</summary>
</doc>.c
.Physics...V<doc>
<summary>
Time warp is active, and in physical time warp mode.
</summary>
</doc>.D
.None...:<doc>
<summary>
Time warp is not active.
</summary>
</doc>.f<doc>
<summary>
The time warp mode.
Returned by <see cref="T:SpaceCenter.WarpMode" /></summary>
</doc>2..<doc>
<summary>
Provides functionality to interact with Kerbal Space Program. This includes controlling
the active vessel, managing its resources, planning maneuver nodes and auto-piloting.
</summary>
</doc>
.{
.UI...
	AddCanvas...d..UI..Canvas*..<doc>
<summary>
Add a new canvas.
</summary>
<remarks>
If you want to add UI elements to KSPs stock UI canvas, use <see cref="M:UI.StockCanvas" />.
</remarks>
</doc>...
.Message.
.content......
.duration.........?.&
.position...e..UI..MessagePosition....8
.color....."..."...".....
........?
.q=
..p.?
.....Mb.?..
.size.........A*..<doc>
<summary>
Display a message on the screen.
</summary>
<remarks>
The message appears just like a stock message, for example quicksave or quickload messages.
</remarks>
<param name="content">Message content.</param>
<param name="duration">Duration before the message disappears, in seconds.</param>
<param name="position">Position to display the message.</param>
<param name="size">Size of the message, differs per position.</param>
<param name="color">The color of the message.</param>
</doc>...
.Clear..

clientOnly.......*..<doc>
<summary>
Remove all user interface elements.
</summary>
<param name="clientOnly">If true, only remove objects created by the calling client.</param>
</doc>.Y
.get_StockCanvas...d..UI..Canvas*6<doc>
<summary>
The stock UI canvas.
</summary>
</doc>.`

Button_Remove..
.this...d..UI..Button*7<doc>
<summary>
Remove the UI object.
</summary>
</doc>...
.Button_get_RectTransform..
.this...d..UI..Button...d..UI.
RectTransform*B<doc>
<summary>
The rect transform for the text.
</summary>
</doc>.s
.Button_get_Text..
.this...d..UI..Button...d..UI..Text*:<doc>
<summary>
The text for the button.
</summary>
</doc>...
.Button_get_Clicked..
.this...d..UI..Button....*..<doc>
<summary>
Whether the button has been clicked.
</summary>
<remarks>
This property is set to true when the user clicks the button.
A client script should reset the property to false in order to detect subsequent button presses.
</remarks>
</doc>...
.Button_set_Clicked..
.this...d..UI..Button..
.value....*..<doc>
<summary>
Whether the button has been clicked.
</summary>
<remarks>
This property is set to true when the user clicks the button.
A client script should reset the property to false in order to detect subsequent button presses.
</remarks>
</doc>.u
.Button_get_Visible..
.this...d..UI..Button....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>.~
.Button_set_Visible..
.this...d..UI..Button..
.value....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>...
.Canvas_AddPanel..
.this...d..UI..Canvas..
.visible........
.d..UI..Panel*..<doc>
<summary>
Create a new container for user interface elements.
</summary>
<param name="visible">Whether the panel is visible.</param>
</doc>...
.Canvas_AddText..
.this...d..UI..Canvas.
.content......
.visible..........d..UI..Text*..<doc>
<summary>
Add text to the canvas.
</summary>
<param name="content">The text.</param>
<param name="visible">Whether the text is visible.</param>
</doc>...
.Canvas_AddInputField..
.this...d..UI..Canvas..
.visible..........d..UI.
InputField*..<doc>
<summary>
Add an input field to the canvas.
</summary>
<param name="visible">Whether the input field is visible.</param>
</doc>...
.Canvas_AddButton..
.this...d..UI..Canvas.
.content......
.visible..........d..UI..Button*..<doc>
<summary>
Add a button to the canvas.
</summary>
<param name="content">The label for the button.</param>
<param name="visible">Whether the button is visible.</param>
</doc>.`

Canvas_Remove..
.this...d..UI..Canvas*7<doc>
<summary>
Remove the UI object.
</summary>
</doc>...
.Canvas_get_RectTransform..
.this...d..UI..Canvas...d..UI.
RectTransform*D<doc>
<summary>
The rect transform for the canvas.
</summary>
</doc>.u
.Canvas_get_Visible..
.this...d..UI..Canvas....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>.~
.Canvas_set_Visible..
.this...d..UI..Canvas..
.value....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>.h
.InputField_Remove..
.this...d..UI.
InputField*7<doc>
<summary>
Remove the UI object.
</summary>
</doc>...
.InputField_get_RectTransform..
.this...d..UI.
InputField...d..UI.
RectTransform*I<doc>
<summary>
The rect transform for the input field.
</summary>
</doc>.w
.InputField_get_Value..
.this...d..UI.
InputField....*?<doc>
<summary>
The value of the input field.
</summary>
</doc>...
.InputField_set_Value..
.this...d..UI.
InputField..
.value....*?<doc>
<summary>
The value of the input field.
</summary>
</doc>...
.InputField_get_Text..
.this...d..UI.
InputField...d..UI..Text*..<doc>
<summary>
The text component of the input field.
</summary>
<remarks>
Use <see cref="M:UI.InputField.Value" /> to get and set the value in the field.
This object can be used to alter the style of the input field's text.
</remarks>
</doc>...
.InputField_get_Changed..
.this...d..UI.
InputField....*..<doc>
<summary>
Whether the input field has been changed.
</summary>
<remarks>
This property is set to true when the user modifies the value of the input field.
A client script should reset the property to false in order to detect subsequent changes.
</remarks>
</doc>...
.InputField_set_Changed..
.this...d..UI.
InputField..
.value....*..<doc>
<summary>
Whether the input field has been changed.
</summary>
<remarks>
This property is set to true when the user modifies the value of the input field.
A client script should reset the property to false in order to detect subsequent changes.
</remarks>
</doc>.}
.InputField_get_Visible..
.this...d..UI.
InputField....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>...
.InputField_set_Visible..
.this...d..UI.
InputField..
.value....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>...
.Panel_AddPanel..
.this.
.d..UI..Panel..
.visible........
.d..UI..Panel*..<doc>
<summary>
Create a panel within this panel.
</summary>
<param name="visible">Whether the new panel is visible.</param>
</doc>...

Panel_AddText..
.this.
.d..UI..Panel.
.content......
.visible..........d..UI..Text*..<doc>
<summary>
Add text to the panel.
</summary>
<param name="content">The text.</param>
<param name="visible">Whether the text is visible.</param>
</doc>...
.Panel_AddInputField..
.this.
.d..UI..Panel..
.visible..........d..UI.
InputField*..<doc>
<summary>
Add an input field to the panel.
</summary>
<param name="visible">Whether the input field is visible.</param>
</doc>...
.Panel_AddButton..
.this.
.d..UI..Panel.
.content......
.visible..........d..UI..Button*..<doc>
<summary>
Add a button to the panel.
</summary>
<param name="content">The label for the button.</param>
<param name="visible">Whether the button is visible.</param>
</doc>.^
.Panel_Remove..
.this.
.d..UI..Panel*7<doc>
<summary>
Remove the UI object.
</summary>
</doc>...
.Panel_get_RectTransform..
.this.
.d..UI..Panel...d..UI.
RectTransform*C<doc>
<summary>
The rect transform for the panel.
</summary>
</doc>.s
.Panel_get_Visible..
.this.
.d..UI..Panel....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>.|
.Panel_set_Visible..
.this.
.d..UI..Panel..
.value....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>...
.RectTransform_get_Position..
.this...d..UI.
RectTransform....."..."...*a<doc>
<summary>
Position of the rectangles pivot point relative to the anchors.
</summary>
</doc>...
.RectTransform_set_Position..
.this...d..UI.
RectTransform..
.value....."..."...*a<doc>
<summary>
Position of the rectangles pivot point relative to the anchors.
</summary>
</doc>...
.RectTransform_get_LocalPosition..
.this...d..UI.
RectTransform....."..."..."...*a<doc>
<summary>
Position of the rectangles pivot point relative to the anchors.
</summary>
</doc>...
.RectTransform_set_LocalPosition..
.this...d..UI.
RectTransform..
.value....."..."..."...*a<doc>
<summary>
Position of the rectangles pivot point relative to the anchors.
</summary>
</doc>...
.RectTransform_get_Size..
.this...d..UI.
RectTransform....."..."...*D<doc>
<summary>
Width and height of the rectangle.
</summary>
</doc>...
.RectTransform_set_Size..
.this...d..UI.
RectTransform..
.value....."..."...*D<doc>
<summary>
Width and height of the rectangle.
</summary>
</doc>...
.RectTransform_get_UpperRight..
.this...d..UI.
RectTransform....."..."...*h<doc>
<summary>
Position of the rectangles upper right corner relative to the anchors.
</summary>
</doc>...
.RectTransform_set_UpperRight..
.this...d..UI.
RectTransform..
.value....."..."...*h<doc>
<summary>
Position of the rectangles upper right corner relative to the anchors.
</summary>
</doc>...
.RectTransform_get_LowerLeft..
.this...d..UI.
RectTransform....."..."...*g<doc>
<summary>
Position of the rectangles lower left corner relative to the anchors.
</summary>
</doc>...
.RectTransform_set_LowerLeft..
.this...d..UI.
RectTransform..
.value....."..."...*g<doc>
<summary>
Position of the rectangles lower left corner relative to the anchors.
</summary>
</doc>...
.RectTransform_set_Anchor..
.this...d..UI.
RectTransform..
.value....."..."...*~<doc>
<summary>
Set the minimum and maximum anchor points as a fraction of the size of the parent rectangle.
</summary>
</doc>...
.RectTransform_get_AnchorMax..
.this...d..UI.
RectTransform....."..."...*..<doc>
<summary>
The anchor point for the lower left corner of the rectangle defined as a fraction of the size of the parent rectangle.
</summary>
</doc>...
.RectTransform_set_AnchorMax..
.this...d..UI.
RectTransform..
.value....."..."...*..<doc>
<summary>
The anchor point for the lower left corner of the rectangle defined as a fraction of the size of the parent rectangle.
</summary>
</doc>...
.RectTransform_get_AnchorMin..
.this...d..UI.
RectTransform....."..."...*..<doc>
<summary>
The anchor point for the upper right corner of the rectangle defined as a fraction of the size of the parent rectangle.
</summary>
</doc>...
.RectTransform_set_AnchorMin..
.this...d..UI.
RectTransform..
.value....."..."...*..<doc>
<summary>
The anchor point for the upper right corner of the rectangle defined as a fraction of the size of the parent rectangle.
</summary>
</doc>...
.RectTransform_get_Pivot..
.this...d..UI.
RectTransform....."..."...*..<doc>
<summary>
Location of the pivot point around which the rectangle rotates, defined as a fraction of the size of the rectangle itself.
</summary>
</doc>...
.RectTransform_set_Pivot..
.this...d..UI.
RectTransform..
.value....."..."...*..<doc>
<summary>
Location of the pivot point around which the rectangle rotates, defined as a fraction of the size of the rectangle itself.
</summary>
</doc>...
.RectTransform_get_Rotation..
.this...d..UI.
RectTransform....."..."..."..."...*b<doc>
<summary>
Rotation, as a quaternion, of the object around its pivot point.
</summary>
</doc>...
.RectTransform_set_Rotation..
.this...d..UI.
RectTransform..
.value....."..."..."..."...*b<doc>
<summary>
Rotation, as a quaternion, of the object around its pivot point.
</summary>
</doc>...
.RectTransform_get_Scale..
.this...d..UI.
RectTransform....."..."..."...*b<doc>
<summary>
Scale factor applied to the object in the x, y and z dimensions.
</summary>
</doc>...
.RectTransform_set_Scale..
.this...d..UI.
RectTransform..
.value....."..."..."...*b<doc>
<summary>
Scale factor applied to the object in the x, y and z dimensions.
</summary>
</doc>.\
.Text_Remove..
.this...d..UI..Text*7<doc>
<summary>
Remove the UI object.
</summary>
</doc>...
.Text_get_RectTransform..
.this...d..UI..Text...d..UI.
RectTransform*B<doc>
<summary>
The rect transform for the text.
</summary>
</doc>.z
.Text_get_AvailableFonts..
.this...d..UI..Text....."...*@<doc>
<summary>
A list of all available fonts.
</summary>
</doc>._
.Text_get_Content..
.this...d..UI..Text....*1<doc>
<summary>
The text string
</summary>
</doc>.h
.Text_set_Content..
.this...d..UI..Text..
.value....*1<doc>
<summary>
The text string
</summary>
</doc>.]

Text_get_Font..
.this...d..UI..Text....*2<doc>
<summary>
Name of the font
</summary>
</doc>.f

Text_set_Font..
.this...d..UI..Text..
.value....*2<doc>
<summary>
Name of the font
</summary>
</doc>.W

Text_get_Size..
.this...d..UI..Text....*,<doc>
<summary>
Font size.
</summary>
</doc>.`

Text_set_Size..
.this...d..UI..Text..
.value....*,<doc>
<summary>
Font size.
</summary>
</doc>.h
.Text_get_Style..
.this...d..UI..Text...e..UI.	FontStyle*-<doc>
<summary>
Font style.
</summary>
</doc>.q
.Text_set_Style..
.this...d..UI..Text..
.value...e..UI.	FontStyle*-<doc>
<summary>
Font style.
</summary>
</doc>.l
.Text_get_Alignment..
.this...d..UI..Text...e..UI.
TextAnchor*,<doc>
<summary>
Alignment.
</summary>
</doc>.u
.Text_set_Alignment..
.this...d..UI..Text..
.value...e..UI.
TextAnchor*,<doc>
<summary>
Alignment.
</summary>
</doc>.a
.Text_get_LineSpacing..
.this...d..UI..Text....*/<doc>
<summary>
Line spacing.
</summary>
</doc>.j
.Text_set_LineSpacing..
.this...d..UI..Text..
.value....*/<doc>
<summary>
Line spacing.
</summary>
</doc>.h
.Text_get_Color..
.this...d..UI..Text....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.q
.Text_set_Color..
.this...d..UI..Text..
.value....."..."..."...*/<doc>
<summary>
Set the color
</summary>
</doc>.q
.Text_get_Visible..
.this...d..UI..Text....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>.z
.Text_set_Visible..
.this...d..UI..Text..
.value....*C<doc>
<summary>
Whether the UI object is visible.
</summary>
</doc>.b
.Button.X<doc>
<summary>
A text label. See <see cref="M:UI.Panel.AddButton" />.
</summary>
</doc>...
.Canvas...<doc>
<summary>
A canvas for user interface elements. See <see cref="M:UI.StockCanvas" /> and <see cref="M:UI.AddCanvas" />.
</summary>
</doc>.l

InputField.^<doc>
<summary>
An input field. See <see cref="M:UI.Panel.AddInputField" />.
</summary>
</doc>.|
.Panel.s<doc>
<summary>
A container for user interface elements. See <see cref="M:UI.Canvas.AddPanel" />.
</summary>
</doc>...

RectTransform...<doc>
<summary>
A Unity engine Rect Transform for a UI object.
See the <a href="https://docs.unity3d.com/Manual/class-RectTransform.html">Unity manual</a> for more details.
</summary>
</doc>.^
.Text.V<doc>
<summary>
A text label. See <see cref="M:UI.Panel.AddText" />.
</summary>
</doc>"..
	FontStyle.3
.Normal.)<doc>
<summary>
Normal.
</summary>
</doc>.1
.Bold...'<doc>
<summary>
Bold.
</summary>
</doc>.5
.Italic...)<doc>
<summary>
Italic.
</summary>
</doc>.E

BoldAndItalic...2<doc>
<summary>
Bold and italic.
</summary>
</doc>.-<doc>
<summary>
Font style.
</summary>
</doc>"..
.MessagePosition.@
.BottomCenter.0<doc>
<summary>
Bottom center.
</summary>
</doc>.<
	TopCenter...-<doc>
<summary>
Top center.
</summary>
</doc>.8
.TopLeft...+<doc>
<summary>
Top left.
</summary>
</doc>.:
.TopRight...,<doc>
<summary>
Top right.
</summary>
</doc>.3<doc>
<summary>
Message position.
</summary>
</doc>"..

TextAlignment.7
.Left./<doc>
<summary>
Left aligned.
</summary>
</doc>.;
.Right...0<doc>
<summary>
Right aligned.
</summary>
</doc>.=
.Center...1<doc>
<summary>
Center aligned.
</summary>
</doc>.1<doc>
<summary>
Text alignment.
</summary>
</doc>"..

TextAnchor.>
.LowerCenter./<doc>
<summary>
Lower center.
</summary>
</doc>.<
	LowerLeft...-<doc>
<summary>
Lower left.
</summary>
</doc>.>

LowerRight....<doc>
<summary>
Lower right.
</summary>
</doc>.B
.MiddleCenter...0<doc>
<summary>
Middle center.
</summary>
</doc>.>

MiddleLeft....<doc>
<summary>
Middle left.
</summary>
</doc>.@
.MiddleRight.../<doc>
<summary>
Middle right.
</summary>
</doc>.@
.UpperCenter.../<doc>
<summary>
Upper center.
</summary>
</doc>.<
	UpperLeft...-<doc>
<summary>
Upper left.
</summary>
</doc>.>

UpperRight....<doc>
<summary>
Upper right.
</summary>
</doc>.1<doc>
<summary>
Text alignment.
</summary>
</doc>2..<doc>
<summary>
Provides functionality for drawing and interacting with in-game user interface elements.
</summary>
<remarks>
For drawing 3D objects in the flight scene, see the Drawing service.
</remarks>
</doc>
